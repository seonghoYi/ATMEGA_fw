
ATMEGA_fw.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000126  00800100  00002b90  00002c24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002b90  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000241  00800226  00800226  00002d4a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002d4a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002da8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000006a0  00000000  00000000  00002de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000609a  00000000  00000000  00003484  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001b7a  00000000  00000000  0000951e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003e28  00000000  00000000  0000b098  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000011e0  00000000  00000000  0000eec0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001656  00000000  00000000  000100a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000056c9  00000000  00000000  000116f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000005d0  00000000  00000000  00016dbf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4c c0       	rjmp	.+152    	; 0x9a <__ctors_end>
       2:	00 00       	nop
       4:	69 c0       	rjmp	.+210    	; 0xd8 <__bad_interrupt>
       6:	00 00       	nop
       8:	67 c0       	rjmp	.+206    	; 0xd8 <__bad_interrupt>
       a:	00 00       	nop
       c:	65 c0       	rjmp	.+202    	; 0xd8 <__bad_interrupt>
       e:	00 00       	nop
      10:	63 c0       	rjmp	.+198    	; 0xd8 <__bad_interrupt>
      12:	00 00       	nop
      14:	61 c0       	rjmp	.+194    	; 0xd8 <__bad_interrupt>
      16:	00 00       	nop
      18:	5f c0       	rjmp	.+190    	; 0xd8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5d c0       	rjmp	.+186    	; 0xd8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	5b c0       	rjmp	.+182    	; 0xd8 <__bad_interrupt>
      22:	00 00       	nop
      24:	d7 c2       	rjmp	.+1454   	; 0x5d4 <__vector_9>
      26:	00 00       	nop
      28:	ab c2       	rjmp	.+1366   	; 0x580 <__vector_10>
      2a:	00 00       	nop
      2c:	9f c2       	rjmp	.+1342   	; 0x56c <__vector_11>
      2e:	00 00       	nop
      30:	7f c2       	rjmp	.+1278   	; 0x530 <__vector_12>
      32:	00 00       	nop
      34:	87 c2       	rjmp	.+1294   	; 0x544 <__vector_13>
      36:	00 00       	nop
      38:	71 c2       	rjmp	.+1250   	; 0x51c <__vector_14>
      3a:	00 00       	nop
      3c:	45 c2       	rjmp	.+1162   	; 0x4c8 <__vector_15>
      3e:	00 00       	nop
      40:	19 c2       	rjmp	.+1074   	; 0x474 <__vector_16>
      42:	00 00       	nop
      44:	49 c0       	rjmp	.+146    	; 0xd8 <__bad_interrupt>
      46:	00 00       	nop
      48:	c1 c1       	rjmp	.+898    	; 0x3cc <__vector_18>
      4a:	00 00       	nop
      4c:	45 c0       	rjmp	.+138    	; 0xd8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	e7 c1       	rjmp	.+974    	; 0x420 <__vector_20>
      52:	00 00       	nop
      54:	41 c0       	rjmp	.+130    	; 0xd8 <__bad_interrupt>
      56:	00 00       	nop
      58:	3f c0       	rjmp	.+126    	; 0xd8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3d c0       	rjmp	.+122    	; 0xd8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	7b c2       	rjmp	.+1270   	; 0x558 <__vector_24>
      62:	00 00       	nop
      64:	09 c3       	rjmp	.+1554   	; 0x678 <__vector_25>
      66:	00 00       	nop
      68:	e9 c2       	rjmp	.+1490   	; 0x63c <__vector_26>
      6a:	00 00       	nop
      6c:	f1 c2       	rjmp	.+1506   	; 0x650 <__vector_27>
      6e:	00 00       	nop
      70:	f9 c2       	rjmp	.+1522   	; 0x664 <__vector_28>
      72:	00 00       	nop
      74:	d9 c2       	rjmp	.+1458   	; 0x628 <__vector_29>
      76:	00 00       	nop
      78:	2f c0       	rjmp	.+94     	; 0xd8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2d c0       	rjmp	.+90     	; 0xd8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	2b c0       	rjmp	.+86     	; 0xd8 <__bad_interrupt>
      82:	00 00       	nop
      84:	29 c0       	rjmp	.+82     	; 0xd8 <__bad_interrupt>
      86:	00 00       	nop
      88:	27 c0       	rjmp	.+78     	; 0xd8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	f1 0b       	sbc	r31, r17
      8e:	04 0c       	add	r0, r4
      90:	17 0c       	add	r1, r7
      92:	2a 0c       	add	r2, r10
      94:	3d 0c       	add	r3, r13
      96:	50 0c       	add	r5, r0
      98:	63 0c       	add	r6, r3

0000009a <__ctors_end>:
      9a:	11 24       	eor	r1, r1
      9c:	1f be       	out	0x3f, r1	; 63
      9e:	cf ef       	ldi	r28, 0xFF	; 255
      a0:	d0 e1       	ldi	r29, 0x10	; 16
      a2:	de bf       	out	0x3e, r29	; 62
      a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_copy_data>:
      a6:	12 e0       	ldi	r17, 0x02	; 2
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b1 e0       	ldi	r27, 0x01	; 1
      ac:	e0 e9       	ldi	r30, 0x90	; 144
      ae:	fb e2       	ldi	r31, 0x2B	; 43
      b0:	00 e0       	ldi	r16, 0x00	; 0
      b2:	0b bf       	out	0x3b, r16	; 59
      b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x14>
      b6:	07 90       	elpm	r0, Z+
      b8:	0d 92       	st	X+, r0
      ba:	a6 32       	cpi	r26, 0x26	; 38
      bc:	b1 07       	cpc	r27, r17
      be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0x10>

000000c0 <__do_clear_bss>:
      c0:	24 e0       	ldi	r18, 0x04	; 4
      c2:	a6 e2       	ldi	r26, 0x26	; 38
      c4:	b2 e0       	ldi	r27, 0x02	; 2
      c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
      c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
      ca:	a7 36       	cpi	r26, 0x67	; 103
      cc:	b2 07       	cpc	r27, r18
      ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
      d0:	0e 94 00 11 	call	0x2200	; 0x2200 <main>
      d4:	0c 94 c6 15 	jmp	0x2b8c	; 0x2b8c <_exit>

000000d8 <__bad_interrupt>:
      d8:	93 cf       	rjmp	.-218    	; 0x0 <__vectors>

000000da <apInit>:
ï»¿#include "ap.h"


void apInit(void)
{
	uartOpen(_DEF_UART1, 115200);
      da:	40 e0       	ldi	r20, 0x00	; 0
      dc:	52 ec       	ldi	r21, 0xC2	; 194
      de:	61 e0       	ldi	r22, 0x01	; 1
      e0:	70 e0       	ldi	r23, 0x00	; 0
      e2:	81 e0       	ldi	r24, 0x01	; 1
      e4:	0e 94 88 09 	call	0x1310	; 0x1310 <uartOpen>

	motorInit();
      e8:	08 d7       	rcall	.+3600   	; 0xefa <motorInit>
	sei();
      ea:	78 94       	sei
      ec:	08 95       	ret

000000ee <apMain>:
void apMain(void)
{	
	//char *str = "Hello, World!";
	
	//uartPrintf(_DEF_UART0, "baud: %lu%s", uartGetBaud(_DEF_UART0), "bps\n");
	motorSetSpeed(80);
      ee:	80 e5       	ldi	r24, 0x50	; 80
      f0:	9b d6       	rcall	.+3382   	; 0xe28 <motorSetSpeed>
	motorAdvance();
      f2:	29 d7       	rcall	.+3666   	; 0xf46 <motorAdvance>
      f4:	0f 2e       	mov	r0, r31
	while(true)
	{
		uint16_t ocr = 0;
		
		
		uartPrintf(_DEF_UART1, "speed : 100\n");
      f6:	f7 e9       	ldi	r31, 0x97	; 151
      f8:	af 2e       	mov	r10, r31
      fa:	f1 e0       	ldi	r31, 0x01	; 1
      fc:	bf 2e       	mov	r11, r31
      fe:	f0 2d       	mov	r31, r0
     100:	11 e0       	ldi	r17, 0x01	; 1
     102:	c4 ea       	ldi	r28, 0xA4	; 164
		motorSetSpeed(100);
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     104:	d1 e0       	ldi	r29, 0x01	; 1
     106:	0f 2e       	mov	r0, r31
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 90\n");
     108:	fe ea       	ldi	r31, 0xAE	; 174
     10a:	cf 2e       	mov	r12, r31
     10c:	f1 e0       	ldi	r31, 0x01	; 1
     10e:	df 2e       	mov	r13, r31
     110:	f0 2d       	mov	r31, r0
     112:	0f 2e       	mov	r0, r31
		motorSetSpeed(90);
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 80\n");
     114:	fa eb       	ldi	r31, 0xBA	; 186
     116:	ef 2e       	mov	r14, r31
     118:	f1 e0       	ldi	r31, 0x01	; 1
     11a:	ff 2e       	mov	r15, r31
     11c:	f0 2d       	mov	r31, r0
     11e:	0f 2e       	mov	r0, r31
		motorSetSpeed(70);
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 60\n");
     120:	f2 ed       	ldi	r31, 0xD2	; 210
     122:	8f 2e       	mov	r8, r31
     124:	f1 e0       	ldi	r31, 0x01	; 1
     126:	9f 2e       	mov	r9, r31
     128:	f0 2d       	mov	r31, r0
     12a:	0f 2e       	mov	r0, r31
		motorSetSpeed(60);
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 50\n");
     12c:	fe ed       	ldi	r31, 0xDE	; 222
     12e:	6f 2e       	mov	r6, r31
     130:	f1 e0       	ldi	r31, 0x01	; 1
     132:	7f 2e       	mov	r7, r31
     134:	f0 2d       	mov	r31, r0
     136:	0f 2e       	mov	r0, r31
		motorSetSpeed(50);
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 40\n");
     138:	fa ee       	ldi	r31, 0xEA	; 234
     13a:	4f 2e       	mov	r4, r31
     13c:	f1 e0       	ldi	r31, 0x01	; 1
     13e:	5f 2e       	mov	r5, r31
     140:	f0 2d       	mov	r31, r0
     142:	0f 2e       	mov	r0, r31
		motorSetSpeed(40);
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 30\n");
     144:	f6 ef       	ldi	r31, 0xF6	; 246
     146:	2f 2e       	mov	r2, r31
     148:	f1 e0       	ldi	r31, 0x01	; 1
     14a:	3f 2e       	mov	r3, r31
     14c:	f0 2d       	mov	r31, r0
     14e:	bf 92       	push	r11
	while(true)
	{
		uint16_t ocr = 0;
		
		
		uartPrintf(_DEF_UART1, "speed : 100\n");
     150:	af 92       	push	r10
     152:	1f 93       	push	r17
     154:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(100);
     158:	84 e6       	ldi	r24, 0x64	; 100
     15a:	66 d6       	rcall	.+3276   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     15c:	60 e0       	ldi	r22, 0x00	; 0
     15e:	80 e0       	ldi	r24, 0x00	; 0
     160:	e0 d5       	rcall	.+3008   	; 0xd22 <ctcGetOcr>
     162:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     164:	8f 93       	push	r24
     166:	df 93       	push	r29
     168:	cf 93       	push	r28
     16a:	1f 93       	push	r17
     16c:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     170:	9f ef       	ldi	r25, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     172:	29 e6       	ldi	r18, 0x69	; 105
     174:	88 e1       	ldi	r24, 0x18	; 24
     176:	91 50       	subi	r25, 0x01	; 1
     178:	20 40       	sbci	r18, 0x00	; 0
     17a:	80 40       	sbci	r24, 0x00	; 0
     17c:	e1 f7       	brne	.-8      	; 0x176 <apMain+0x88>
     17e:	00 c0       	rjmp	.+0      	; 0x180 <apMain+0x92>
     180:	00 00       	nop
     182:	df 92       	push	r13
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 90\n");
     184:	cf 92       	push	r12
     186:	1f 93       	push	r17
     188:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(90);
     18c:	8a e5       	ldi	r24, 0x5A	; 90
     18e:	4c d6       	rcall	.+3224   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     190:	60 e0       	ldi	r22, 0x00	; 0
     192:	80 e0       	ldi	r24, 0x00	; 0
     194:	c6 d5       	rcall	.+2956   	; 0xd22 <ctcGetOcr>
     196:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     198:	8f 93       	push	r24
     19a:	df 93       	push	r29
     19c:	cf 93       	push	r28
     19e:	1f 93       	push	r17
     1a0:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     1a4:	8f ef       	ldi	r24, 0xFF	; 255
     1a6:	99 e6       	ldi	r25, 0x69	; 105
     1a8:	28 e1       	ldi	r18, 0x18	; 24
     1aa:	81 50       	subi	r24, 0x01	; 1
     1ac:	90 40       	sbci	r25, 0x00	; 0
     1ae:	20 40       	sbci	r18, 0x00	; 0
     1b0:	e1 f7       	brne	.-8      	; 0x1aa <apMain+0xbc>
     1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <apMain+0xc6>
     1b4:	00 00       	nop
     1b6:	ff 92       	push	r15
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 80\n");
     1b8:	ef 92       	push	r14
     1ba:	1f 93       	push	r17
     1bc:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(80);
     1c0:	80 e5       	ldi	r24, 0x50	; 80
     1c2:	32 d6       	rcall	.+3172   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     1c4:	60 e0       	ldi	r22, 0x00	; 0
     1c6:	80 e0       	ldi	r24, 0x00	; 0
     1c8:	ac d5       	rcall	.+2904   	; 0xd22 <ctcGetOcr>
     1ca:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     1cc:	8f 93       	push	r24
     1ce:	df 93       	push	r29
     1d0:	cf 93       	push	r28
     1d2:	1f 93       	push	r17
     1d4:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     1d8:	2f ef       	ldi	r18, 0xFF	; 255
     1da:	89 e6       	ldi	r24, 0x69	; 105
     1dc:	98 e1       	ldi	r25, 0x18	; 24
     1de:	21 50       	subi	r18, 0x01	; 1
     1e0:	80 40       	sbci	r24, 0x00	; 0
     1e2:	90 40       	sbci	r25, 0x00	; 0
     1e4:	e1 f7       	brne	.-8      	; 0x1de <apMain+0xf0>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <apMain+0xfa>
     1e8:	00 00       	nop
     1ea:	86 ec       	ldi	r24, 0xC6	; 198
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 70\n");
     1ec:	91 e0       	ldi	r25, 0x01	; 1
     1ee:	9f 93       	push	r25
     1f0:	8f 93       	push	r24
     1f2:	1f 93       	push	r17
     1f4:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(70);
     1f8:	86 e4       	ldi	r24, 0x46	; 70
     1fa:	16 d6       	rcall	.+3116   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     1fc:	60 e0       	ldi	r22, 0x00	; 0
     1fe:	80 e0       	ldi	r24, 0x00	; 0
     200:	90 d5       	rcall	.+2848   	; 0xd22 <ctcGetOcr>
     202:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     204:	8f 93       	push	r24
     206:	df 93       	push	r29
     208:	cf 93       	push	r28
     20a:	1f 93       	push	r17
     20c:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     210:	2f ef       	ldi	r18, 0xFF	; 255
     212:	89 e6       	ldi	r24, 0x69	; 105
     214:	98 e1       	ldi	r25, 0x18	; 24
     216:	21 50       	subi	r18, 0x01	; 1
     218:	80 40       	sbci	r24, 0x00	; 0
     21a:	90 40       	sbci	r25, 0x00	; 0
     21c:	e1 f7       	brne	.-8      	; 0x216 <apMain+0x128>
     21e:	00 c0       	rjmp	.+0      	; 0x220 <apMain+0x132>
     220:	00 00       	nop
     222:	8d b7       	in	r24, 0x3d	; 61
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 60\n");
     224:	9e b7       	in	r25, 0x3e	; 62
     226:	80 96       	adiw	r24, 0x20	; 32
     228:	0f b6       	in	r0, 0x3f	; 63
     22a:	f8 94       	cli
     22c:	9e bf       	out	0x3e, r25	; 62
     22e:	0f be       	out	0x3f, r0	; 63
     230:	8d bf       	out	0x3d, r24	; 61
     232:	9f 92       	push	r9
     234:	8f 92       	push	r8
     236:	1f 93       	push	r17
     238:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(60);
     23c:	8c e3       	ldi	r24, 0x3C	; 60
     23e:	f4 d5       	rcall	.+3048   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	80 e0       	ldi	r24, 0x00	; 0
     244:	6e d5       	rcall	.+2780   	; 0xd22 <ctcGetOcr>
     246:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     248:	8f 93       	push	r24
     24a:	df 93       	push	r29
     24c:	cf 93       	push	r28
     24e:	1f 93       	push	r17
     250:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     254:	8f ef       	ldi	r24, 0xFF	; 255
     256:	99 e6       	ldi	r25, 0x69	; 105
     258:	28 e1       	ldi	r18, 0x18	; 24
     25a:	81 50       	subi	r24, 0x01	; 1
     25c:	90 40       	sbci	r25, 0x00	; 0
     25e:	20 40       	sbci	r18, 0x00	; 0
     260:	e1 f7       	brne	.-8      	; 0x25a <apMain+0x16c>
     262:	00 c0       	rjmp	.+0      	; 0x264 <apMain+0x176>
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 50\n");
     264:	00 00       	nop
     266:	7f 92       	push	r7
     268:	6f 92       	push	r6
     26a:	1f 93       	push	r17
     26c:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(50);
     270:	82 e3       	ldi	r24, 0x32	; 50
     272:	da d5       	rcall	.+2996   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     274:	60 e0       	ldi	r22, 0x00	; 0
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	54 d5       	rcall	.+2728   	; 0xd22 <ctcGetOcr>
     27a:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     27c:	8f 93       	push	r24
     27e:	df 93       	push	r29
     280:	cf 93       	push	r28
     282:	1f 93       	push	r17
     284:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     288:	2f ef       	ldi	r18, 0xFF	; 255
     28a:	89 e6       	ldi	r24, 0x69	; 105
     28c:	98 e1       	ldi	r25, 0x18	; 24
     28e:	21 50       	subi	r18, 0x01	; 1
     290:	80 40       	sbci	r24, 0x00	; 0
     292:	90 40       	sbci	r25, 0x00	; 0
     294:	e1 f7       	brne	.-8      	; 0x28e <apMain+0x1a0>
     296:	00 c0       	rjmp	.+0      	; 0x298 <apMain+0x1aa>
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 40\n");
     298:	00 00       	nop
     29a:	5f 92       	push	r5
     29c:	4f 92       	push	r4
     29e:	1f 93       	push	r17
     2a0:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(40);
     2a4:	88 e2       	ldi	r24, 0x28	; 40
     2a6:	c0 d5       	rcall	.+2944   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     2a8:	60 e0       	ldi	r22, 0x00	; 0
     2aa:	80 e0       	ldi	r24, 0x00	; 0
     2ac:	3a d5       	rcall	.+2676   	; 0xd22 <ctcGetOcr>
     2ae:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     2b0:	8f 93       	push	r24
     2b2:	df 93       	push	r29
     2b4:	cf 93       	push	r28
     2b6:	1f 93       	push	r17
     2b8:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     2bc:	9f ef       	ldi	r25, 0xFF	; 255
     2be:	29 e6       	ldi	r18, 0x69	; 105
     2c0:	88 e1       	ldi	r24, 0x18	; 24
     2c2:	91 50       	subi	r25, 0x01	; 1
     2c4:	20 40       	sbci	r18, 0x00	; 0
     2c6:	80 40       	sbci	r24, 0x00	; 0
     2c8:	e1 f7       	brne	.-8      	; 0x2c2 <apMain+0x1d4>
     2ca:	00 c0       	rjmp	.+0      	; 0x2cc <apMain+0x1de>
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 30\n");
     2cc:	00 00       	nop
     2ce:	3f 92       	push	r3
     2d0:	2f 92       	push	r2
     2d2:	1f 93       	push	r17
     2d4:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(30);
     2d8:	8e e1       	ldi	r24, 0x1E	; 30
     2da:	a6 d5       	rcall	.+2892   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     2dc:	60 e0       	ldi	r22, 0x00	; 0
     2de:	80 e0       	ldi	r24, 0x00	; 0
     2e0:	20 d5       	rcall	.+2624   	; 0xd22 <ctcGetOcr>
     2e2:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     2e4:	8f 93       	push	r24
     2e6:	df 93       	push	r29
     2e8:	cf 93       	push	r28
     2ea:	1f 93       	push	r17
     2ec:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     2f0:	8f ef       	ldi	r24, 0xFF	; 255
     2f2:	99 e6       	ldi	r25, 0x69	; 105
     2f4:	28 e1       	ldi	r18, 0x18	; 24
     2f6:	81 50       	subi	r24, 0x01	; 1
     2f8:	90 40       	sbci	r25, 0x00	; 0
     2fa:	20 40       	sbci	r18, 0x00	; 0
     2fc:	e1 f7       	brne	.-8      	; 0x2f6 <apMain+0x208>
     2fe:	00 c0       	rjmp	.+0      	; 0x300 <apMain+0x212>
     300:	00 00       	nop
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 20\n");
     302:	8d b7       	in	r24, 0x3d	; 61
     304:	9e b7       	in	r25, 0x3e	; 62
     306:	80 96       	adiw	r24, 0x20	; 32
     308:	0f b6       	in	r0, 0x3f	; 63
     30a:	f8 94       	cli
     30c:	9e bf       	out	0x3e, r25	; 62
     30e:	0f be       	out	0x3f, r0	; 63
     310:	8d bf       	out	0x3d, r24	; 61
     312:	82 e0       	ldi	r24, 0x02	; 2
     314:	92 e0       	ldi	r25, 0x02	; 2
     316:	9f 93       	push	r25
     318:	8f 93       	push	r24
     31a:	1f 93       	push	r17
     31c:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(20);
     320:	84 e1       	ldi	r24, 0x14	; 20
     322:	82 d5       	rcall	.+2820   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     324:	60 e0       	ldi	r22, 0x00	; 0
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	fc d4       	rcall	.+2552   	; 0xd22 <ctcGetOcr>
     32a:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     32c:	8f 93       	push	r24
     32e:	df 93       	push	r29
     330:	cf 93       	push	r28
     332:	1f 93       	push	r17
     334:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     338:	2f ef       	ldi	r18, 0xFF	; 255
     33a:	89 e6       	ldi	r24, 0x69	; 105
     33c:	98 e1       	ldi	r25, 0x18	; 24
     33e:	21 50       	subi	r18, 0x01	; 1
     340:	80 40       	sbci	r24, 0x00	; 0
     342:	90 40       	sbci	r25, 0x00	; 0
     344:	e1 f7       	brne	.-8      	; 0x33e <apMain+0x250>
     346:	00 c0       	rjmp	.+0      	; 0x348 <apMain+0x25a>
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 10\n");
     348:	00 00       	nop
     34a:	8e e0       	ldi	r24, 0x0E	; 14
     34c:	92 e0       	ldi	r25, 0x02	; 2
     34e:	9f 93       	push	r25
     350:	8f 93       	push	r24
     352:	1f 93       	push	r17
     354:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(10);
     358:	8a e0       	ldi	r24, 0x0A	; 10
     35a:	66 d5       	rcall	.+2764   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     35c:	60 e0       	ldi	r22, 0x00	; 0
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	e0 d4       	rcall	.+2496   	; 0xd22 <ctcGetOcr>
     362:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     364:	8f 93       	push	r24
     366:	df 93       	push	r29
     368:	cf 93       	push	r28
     36a:	1f 93       	push	r17
     36c:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     370:	2f ef       	ldi	r18, 0xFF	; 255
     372:	89 e6       	ldi	r24, 0x69	; 105
     374:	98 e1       	ldi	r25, 0x18	; 24
     376:	21 50       	subi	r18, 0x01	; 1
     378:	80 40       	sbci	r24, 0x00	; 0
     37a:	90 40       	sbci	r25, 0x00	; 0
     37c:	e1 f7       	brne	.-8      	; 0x376 <apMain+0x288>
     37e:	00 c0       	rjmp	.+0      	; 0x380 <apMain+0x292>
		_delay_ms(500);
		
		uartPrintf(_DEF_UART1, "speed : 0\n");
     380:	00 00       	nop
     382:	8a e1       	ldi	r24, 0x1A	; 26
     384:	92 e0       	ldi	r25, 0x02	; 2
     386:	9f 93       	push	r25
     388:	8f 93       	push	r24
     38a:	1f 93       	push	r17
     38c:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
		motorSetSpeed(0);
     390:	80 e0       	ldi	r24, 0x00	; 0
     392:	4a d5       	rcall	.+2708   	; 0xe28 <motorSetSpeed>
		ocr = ctcGetOcr(_DEF_TIM0, _DEF_CH_NONE);
     394:	60 e0       	ldi	r22, 0x00	; 0
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	c4 d4       	rcall	.+2440   	; 0xd22 <ctcGetOcr>
     39a:	9f 93       	push	r25
		uartPrintf(_DEF_UART1, "ocr : %d\n", ocr);
     39c:	8f 93       	push	r24
     39e:	df 93       	push	r29
     3a0:	cf 93       	push	r28
     3a2:	1f 93       	push	r17
     3a4:	0e 94 1a 0a 	call	0x1434	; 0x1434 <uartPrintf>
     3a8:	2f ef       	ldi	r18, 0xFF	; 255
     3aa:	89 e6       	ldi	r24, 0x69	; 105
     3ac:	98 e1       	ldi	r25, 0x18	; 24
     3ae:	21 50       	subi	r18, 0x01	; 1
     3b0:	80 40       	sbci	r24, 0x00	; 0
     3b2:	90 40       	sbci	r25, 0x00	; 0
     3b4:	e1 f7       	brne	.-8      	; 0x3ae <apMain+0x2c0>
     3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <apMain+0x2ca>
     3b8:	00 00       	nop
     3ba:	8d b7       	in	r24, 0x3d	; 61
     3bc:	9e b7       	in	r25, 0x3e	; 62
     3be:	48 96       	adiw	r24, 0x18	; 24
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	f8 94       	cli
     3c4:	9e bf       	out	0x3e, r25	; 62
     3c6:	0f be       	out	0x3f, r0	; 63
     3c8:	8d bf       	out	0x3d, r24	; 61
     3ca:	c1 ce       	rjmp	.-638    	; 0x14e <apMain+0x60>

000003cc <__vector_18>:


#ifdef _USE_HW_UART
extern UART_HandleTypeDef huart1;
ISR(USART0_RX_vect)
{
     3cc:	1f 92       	push	r1
     3ce:	0f 92       	push	r0
     3d0:	0f b6       	in	r0, 0x3f	; 63
     3d2:	0f 92       	push	r0
     3d4:	11 24       	eor	r1, r1
     3d6:	0b b6       	in	r0, 0x3b	; 59
     3d8:	0f 92       	push	r0
     3da:	2f 93       	push	r18
     3dc:	3f 93       	push	r19
     3de:	4f 93       	push	r20
     3e0:	5f 93       	push	r21
     3e2:	6f 93       	push	r22
     3e4:	7f 93       	push	r23
     3e6:	8f 93       	push	r24
     3e8:	9f 93       	push	r25
     3ea:	af 93       	push	r26
     3ec:	bf 93       	push	r27
     3ee:	ef 93       	push	r30
     3f0:	ff 93       	push	r31
	UART_RxIRQHandler(&huart1);
     3f2:	89 e3       	ldi	r24, 0x39	; 57
     3f4:	94 e0       	ldi	r25, 0x04	; 4
     3f6:	0e 94 eb 10 	call	0x21d6	; 0x21d6 <UART_RxIRQHandler>
}
     3fa:	ff 91       	pop	r31
     3fc:	ef 91       	pop	r30
     3fe:	bf 91       	pop	r27
     400:	af 91       	pop	r26
     402:	9f 91       	pop	r25
     404:	8f 91       	pop	r24
     406:	7f 91       	pop	r23
     408:	6f 91       	pop	r22
     40a:	5f 91       	pop	r21
     40c:	4f 91       	pop	r20
     40e:	3f 91       	pop	r19
     410:	2f 91       	pop	r18
     412:	0f 90       	pop	r0
     414:	0b be       	out	0x3b, r0	; 59
     416:	0f 90       	pop	r0
     418:	0f be       	out	0x3f, r0	; 63
     41a:	0f 90       	pop	r0
     41c:	1f 90       	pop	r1
     41e:	18 95       	reti

00000420 <__vector_20>:

ISR(USART0_TX_vect)
{
     420:	1f 92       	push	r1
     422:	0f 92       	push	r0
     424:	0f b6       	in	r0, 0x3f	; 63
     426:	0f 92       	push	r0
     428:	11 24       	eor	r1, r1
     42a:	0b b6       	in	r0, 0x3b	; 59
     42c:	0f 92       	push	r0
     42e:	2f 93       	push	r18
     430:	3f 93       	push	r19
     432:	4f 93       	push	r20
     434:	5f 93       	push	r21
     436:	6f 93       	push	r22
     438:	7f 93       	push	r23
     43a:	8f 93       	push	r24
     43c:	9f 93       	push	r25
     43e:	af 93       	push	r26
     440:	bf 93       	push	r27
     442:	ef 93       	push	r30
     444:	ff 93       	push	r31
	UART_TxIRQHandler(&huart1);
     446:	89 e3       	ldi	r24, 0x39	; 57
     448:	94 e0       	ldi	r25, 0x04	; 4
     44a:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <UART_TxIRQHandler>
}
     44e:	ff 91       	pop	r31
     450:	ef 91       	pop	r30
     452:	bf 91       	pop	r27
     454:	af 91       	pop	r26
     456:	9f 91       	pop	r25
     458:	8f 91       	pop	r24
     45a:	7f 91       	pop	r23
     45c:	6f 91       	pop	r22
     45e:	5f 91       	pop	r21
     460:	4f 91       	pop	r20
     462:	3f 91       	pop	r19
     464:	2f 91       	pop	r18
     466:	0f 90       	pop	r0
     468:	0b be       	out	0x3b, r0	; 59
     46a:	0f 90       	pop	r0
     46c:	0f be       	out	0x3f, r0	; 63
     46e:	0f 90       	pop	r0
     470:	1f 90       	pop	r1
     472:	18 95       	reti

00000474 <__vector_16>:
extern TIM16_HandleTypeDef htim3;
extern TIM16_HandleTypeDef htim4;


ISR(TIMER0_OVF_vect)
{
     474:	1f 92       	push	r1
     476:	0f 92       	push	r0
     478:	0f b6       	in	r0, 0x3f	; 63
     47a:	0f 92       	push	r0
     47c:	11 24       	eor	r1, r1
     47e:	0b b6       	in	r0, 0x3b	; 59
     480:	0f 92       	push	r0
     482:	2f 93       	push	r18
     484:	3f 93       	push	r19
     486:	4f 93       	push	r20
     488:	5f 93       	push	r21
     48a:	6f 93       	push	r22
     48c:	7f 93       	push	r23
     48e:	8f 93       	push	r24
     490:	9f 93       	push	r25
     492:	af 93       	push	r26
     494:	bf 93       	push	r27
     496:	ef 93       	push	r30
     498:	ff 93       	push	r31
	TIM0_OVF_IRQHandler(&htim1);
     49a:	87 e7       	ldi	r24, 0x77	; 119
     49c:	93 e0       	ldi	r25, 0x03	; 3
     49e:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <TIM0_OVF_IRQHandler>
}
     4a2:	ff 91       	pop	r31
     4a4:	ef 91       	pop	r30
     4a6:	bf 91       	pop	r27
     4a8:	af 91       	pop	r26
     4aa:	9f 91       	pop	r25
     4ac:	8f 91       	pop	r24
     4ae:	7f 91       	pop	r23
     4b0:	6f 91       	pop	r22
     4b2:	5f 91       	pop	r21
     4b4:	4f 91       	pop	r20
     4b6:	3f 91       	pop	r19
     4b8:	2f 91       	pop	r18
     4ba:	0f 90       	pop	r0
     4bc:	0b be       	out	0x3b, r0	; 59
     4be:	0f 90       	pop	r0
     4c0:	0f be       	out	0x3f, r0	; 63
     4c2:	0f 90       	pop	r0
     4c4:	1f 90       	pop	r1
     4c6:	18 95       	reti

000004c8 <__vector_15>:

ISR(TIMER0_COMP_vect)
{
     4c8:	1f 92       	push	r1
     4ca:	0f 92       	push	r0
     4cc:	0f b6       	in	r0, 0x3f	; 63
     4ce:	0f 92       	push	r0
     4d0:	11 24       	eor	r1, r1
     4d2:	0b b6       	in	r0, 0x3b	; 59
     4d4:	0f 92       	push	r0
     4d6:	2f 93       	push	r18
     4d8:	3f 93       	push	r19
     4da:	4f 93       	push	r20
     4dc:	5f 93       	push	r21
     4de:	6f 93       	push	r22
     4e0:	7f 93       	push	r23
     4e2:	8f 93       	push	r24
     4e4:	9f 93       	push	r25
     4e6:	af 93       	push	r26
     4e8:	bf 93       	push	r27
     4ea:	ef 93       	push	r30
     4ec:	ff 93       	push	r31
	TIM0_OC_IRQHandler(&htim1);
     4ee:	87 e7       	ldi	r24, 0x77	; 119
     4f0:	93 e0       	ldi	r25, 0x03	; 3
     4f2:	0e 94 f6 0d 	call	0x1bec	; 0x1bec <TIM0_OC_IRQHandler>
}
     4f6:	ff 91       	pop	r31
     4f8:	ef 91       	pop	r30
     4fa:	bf 91       	pop	r27
     4fc:	af 91       	pop	r26
     4fe:	9f 91       	pop	r25
     500:	8f 91       	pop	r24
     502:	7f 91       	pop	r23
     504:	6f 91       	pop	r22
     506:	5f 91       	pop	r21
     508:	4f 91       	pop	r20
     50a:	3f 91       	pop	r19
     50c:	2f 91       	pop	r18
     50e:	0f 90       	pop	r0
     510:	0b be       	out	0x3b, r0	; 59
     512:	0f 90       	pop	r0
     514:	0f be       	out	0x3f, r0	; 63
     516:	0f 90       	pop	r0
     518:	1f 90       	pop	r1
     51a:	18 95       	reti

0000051c <__vector_14>:

ISR(TIMER1_OVF_vect)
{
     51c:	1f 92       	push	r1
     51e:	0f 92       	push	r0
     520:	0f b6       	in	r0, 0x3f	; 63
     522:	0f 92       	push	r0
     524:	11 24       	eor	r1, r1
	
}
     526:	0f 90       	pop	r0
     528:	0f be       	out	0x3f, r0	; 63
     52a:	0f 90       	pop	r0
     52c:	1f 90       	pop	r1
     52e:	18 95       	reti

00000530 <__vector_12>:

ISR(TIMER1_COMPA_vect)
{
     530:	1f 92       	push	r1
     532:	0f 92       	push	r0
     534:	0f b6       	in	r0, 0x3f	; 63
     536:	0f 92       	push	r0
     538:	11 24       	eor	r1, r1
	
}
     53a:	0f 90       	pop	r0
     53c:	0f be       	out	0x3f, r0	; 63
     53e:	0f 90       	pop	r0
     540:	1f 90       	pop	r1
     542:	18 95       	reti

00000544 <__vector_13>:

ISR(TIMER1_COMPB_vect)
{
     544:	1f 92       	push	r1
     546:	0f 92       	push	r0
     548:	0f b6       	in	r0, 0x3f	; 63
     54a:	0f 92       	push	r0
     54c:	11 24       	eor	r1, r1
	
}
     54e:	0f 90       	pop	r0
     550:	0f be       	out	0x3f, r0	; 63
     552:	0f 90       	pop	r0
     554:	1f 90       	pop	r1
     556:	18 95       	reti

00000558 <__vector_24>:

ISR(TIMER1_COMPC_vect)
{
     558:	1f 92       	push	r1
     55a:	0f 92       	push	r0
     55c:	0f b6       	in	r0, 0x3f	; 63
     55e:	0f 92       	push	r0
     560:	11 24       	eor	r1, r1
	
}
     562:	0f 90       	pop	r0
     564:	0f be       	out	0x3f, r0	; 63
     566:	0f 90       	pop	r0
     568:	1f 90       	pop	r1
     56a:	18 95       	reti

0000056c <__vector_11>:

ISR(TIMER1_CAPT_vect)
{
     56c:	1f 92       	push	r1
     56e:	0f 92       	push	r0
     570:	0f b6       	in	r0, 0x3f	; 63
     572:	0f 92       	push	r0
     574:	11 24       	eor	r1, r1
	
}
     576:	0f 90       	pop	r0
     578:	0f be       	out	0x3f, r0	; 63
     57a:	0f 90       	pop	r0
     57c:	1f 90       	pop	r1
     57e:	18 95       	reti

00000580 <__vector_10>:

ISR(TIMER2_OVF_vect)
{
     580:	1f 92       	push	r1
     582:	0f 92       	push	r0
     584:	0f b6       	in	r0, 0x3f	; 63
     586:	0f 92       	push	r0
     588:	11 24       	eor	r1, r1
     58a:	0b b6       	in	r0, 0x3b	; 59
     58c:	0f 92       	push	r0
     58e:	2f 93       	push	r18
     590:	3f 93       	push	r19
     592:	4f 93       	push	r20
     594:	5f 93       	push	r21
     596:	6f 93       	push	r22
     598:	7f 93       	push	r23
     59a:	8f 93       	push	r24
     59c:	9f 93       	push	r25
     59e:	af 93       	push	r26
     5a0:	bf 93       	push	r27
     5a2:	ef 93       	push	r30
     5a4:	ff 93       	push	r31
	TIM2_OVF_IRQHandler(&htim2);
     5a6:	8b ed       	ldi	r24, 0xDB	; 219
     5a8:	93 e0       	ldi	r25, 0x03	; 3
     5aa:	0e 94 f3 0d 	call	0x1be6	; 0x1be6 <TIM2_OVF_IRQHandler>
}
     5ae:	ff 91       	pop	r31
     5b0:	ef 91       	pop	r30
     5b2:	bf 91       	pop	r27
     5b4:	af 91       	pop	r26
     5b6:	9f 91       	pop	r25
     5b8:	8f 91       	pop	r24
     5ba:	7f 91       	pop	r23
     5bc:	6f 91       	pop	r22
     5be:	5f 91       	pop	r21
     5c0:	4f 91       	pop	r20
     5c2:	3f 91       	pop	r19
     5c4:	2f 91       	pop	r18
     5c6:	0f 90       	pop	r0
     5c8:	0b be       	out	0x3b, r0	; 59
     5ca:	0f 90       	pop	r0
     5cc:	0f be       	out	0x3f, r0	; 63
     5ce:	0f 90       	pop	r0
     5d0:	1f 90       	pop	r1
     5d2:	18 95       	reti

000005d4 <__vector_9>:

ISR(TIMER2_COMP_vect)
{
     5d4:	1f 92       	push	r1
     5d6:	0f 92       	push	r0
     5d8:	0f b6       	in	r0, 0x3f	; 63
     5da:	0f 92       	push	r0
     5dc:	11 24       	eor	r1, r1
     5de:	0b b6       	in	r0, 0x3b	; 59
     5e0:	0f 92       	push	r0
     5e2:	2f 93       	push	r18
     5e4:	3f 93       	push	r19
     5e6:	4f 93       	push	r20
     5e8:	5f 93       	push	r21
     5ea:	6f 93       	push	r22
     5ec:	7f 93       	push	r23
     5ee:	8f 93       	push	r24
     5f0:	9f 93       	push	r25
     5f2:	af 93       	push	r26
     5f4:	bf 93       	push	r27
     5f6:	ef 93       	push	r30
     5f8:	ff 93       	push	r31
	TIM2_OC_IRQHandler(&htim2);
     5fa:	8b ed       	ldi	r24, 0xDB	; 219
     5fc:	93 e0       	ldi	r25, 0x03	; 3
     5fe:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <TIM2_OC_IRQHandler>
}
     602:	ff 91       	pop	r31
     604:	ef 91       	pop	r30
     606:	bf 91       	pop	r27
     608:	af 91       	pop	r26
     60a:	9f 91       	pop	r25
     60c:	8f 91       	pop	r24
     60e:	7f 91       	pop	r23
     610:	6f 91       	pop	r22
     612:	5f 91       	pop	r21
     614:	4f 91       	pop	r20
     616:	3f 91       	pop	r19
     618:	2f 91       	pop	r18
     61a:	0f 90       	pop	r0
     61c:	0b be       	out	0x3b, r0	; 59
     61e:	0f 90       	pop	r0
     620:	0f be       	out	0x3f, r0	; 63
     622:	0f 90       	pop	r0
     624:	1f 90       	pop	r1
     626:	18 95       	reti

00000628 <__vector_29>:

ISR(TIMER3_OVF_vect)
{
     628:	1f 92       	push	r1
     62a:	0f 92       	push	r0
     62c:	0f b6       	in	r0, 0x3f	; 63
     62e:	0f 92       	push	r0
     630:	11 24       	eor	r1, r1
	
}
     632:	0f 90       	pop	r0
     634:	0f be       	out	0x3f, r0	; 63
     636:	0f 90       	pop	r0
     638:	1f 90       	pop	r1
     63a:	18 95       	reti

0000063c <__vector_26>:

ISR(TIMER3_COMPA_vect)
{
     63c:	1f 92       	push	r1
     63e:	0f 92       	push	r0
     640:	0f b6       	in	r0, 0x3f	; 63
     642:	0f 92       	push	r0
     644:	11 24       	eor	r1, r1
	
}
     646:	0f 90       	pop	r0
     648:	0f be       	out	0x3f, r0	; 63
     64a:	0f 90       	pop	r0
     64c:	1f 90       	pop	r1
     64e:	18 95       	reti

00000650 <__vector_27>:

ISR(TIMER3_COMPB_vect)
{
     650:	1f 92       	push	r1
     652:	0f 92       	push	r0
     654:	0f b6       	in	r0, 0x3f	; 63
     656:	0f 92       	push	r0
     658:	11 24       	eor	r1, r1
	
}
     65a:	0f 90       	pop	r0
     65c:	0f be       	out	0x3f, r0	; 63
     65e:	0f 90       	pop	r0
     660:	1f 90       	pop	r1
     662:	18 95       	reti

00000664 <__vector_28>:

ISR(TIMER3_COMPC_vect)
{
     664:	1f 92       	push	r1
     666:	0f 92       	push	r0
     668:	0f b6       	in	r0, 0x3f	; 63
     66a:	0f 92       	push	r0
     66c:	11 24       	eor	r1, r1
	
}
     66e:	0f 90       	pop	r0
     670:	0f be       	out	0x3f, r0	; 63
     672:	0f 90       	pop	r0
     674:	1f 90       	pop	r1
     676:	18 95       	reti

00000678 <__vector_25>:

ISR(TIMER3_CAPT_vect)
{
     678:	1f 92       	push	r1
     67a:	0f 92       	push	r0
     67c:	0f b6       	in	r0, 0x3f	; 63
     67e:	0f 92       	push	r0
     680:	11 24       	eor	r1, r1
	
}
     682:	0f 90       	pop	r0
     684:	0f be       	out	0x3f, r0	; 63
     686:	0f 90       	pop	r0
     688:	1f 90       	pop	r1
     68a:	18 95       	reti

0000068c <bspInit>:
ï»¿#include "bsp.h"


void bspInit(void)
{
     68c:	08 95       	ret

0000068e <qbufferCreate>:
{

}

bool qbufferCreate(qbuffer_t *p_node, uint8_t *p_buf, uint32_t length)
{
     68e:	fc 01       	movw	r30, r24
	bool ret = true;

	p_node->in    = 0;
     690:	10 82       	st	Z, r1
     692:	11 82       	std	Z+1, r1	; 0x01
     694:	12 82       	std	Z+2, r1	; 0x02
     696:	13 82       	std	Z+3, r1	; 0x03
	p_node->out   = 0;
     698:	14 82       	std	Z+4, r1	; 0x04
     69a:	15 82       	std	Z+5, r1	; 0x05
     69c:	16 82       	std	Z+6, r1	; 0x06
     69e:	17 82       	std	Z+7, r1	; 0x07
	p_node->len   = length;
     6a0:	20 87       	std	Z+8, r18	; 0x08
     6a2:	31 87       	std	Z+9, r19	; 0x09
     6a4:	42 87       	std	Z+10, r20	; 0x0a
     6a6:	53 87       	std	Z+11, r21	; 0x0b
	p_node->p_buf = p_buf;
     6a8:	75 87       	std	Z+13, r23	; 0x0d
     6aa:	64 87       	std	Z+12, r22	; 0x0c

	return ret;
}
     6ac:	81 e0       	ldi	r24, 0x01	; 1
     6ae:	08 95       	ret

000006b0 <qbufferWrite>:

bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     6b0:	4f 92       	push	r4
     6b2:	5f 92       	push	r5
     6b4:	6f 92       	push	r6
     6b6:	7f 92       	push	r7
     6b8:	af 92       	push	r10
     6ba:	bf 92       	push	r11
     6bc:	cf 92       	push	r12
     6be:	df 92       	push	r13
     6c0:	ef 92       	push	r14
     6c2:	ff 92       	push	r15
     6c4:	0f 93       	push	r16
     6c6:	1f 93       	push	r17
     6c8:	cf 93       	push	r28
     6ca:	df 93       	push	r29
     6cc:	00 d0       	rcall	.+0      	; 0x6ce <qbufferWrite+0x1e>
     6ce:	00 d0       	rcall	.+0      	; 0x6d0 <qbufferWrite+0x20>
     6d0:	00 d0       	rcall	.+0      	; 0x6d2 <qbufferWrite+0x22>
     6d2:	cd b7       	in	r28, 0x3d	; 61
     6d4:	de b7       	in	r29, 0x3e	; 62
     6d6:	9e 83       	std	Y+6, r25	; 0x06
     6d8:	8d 83       	std	Y+5, r24	; 0x05
     6da:	06 2f       	mov	r16, r22
     6dc:	17 2f       	mov	r17, r23
     6de:	29 01       	movw	r4, r18
     6e0:	3a 01       	movw	r6, r20
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
     6e2:	23 2b       	or	r18, r19
     6e4:	24 2b       	or	r18, r20
     6e6:	25 2b       	or	r18, r21
     6e8:	09 f4       	brne	.+2      	; 0x6ec <qbufferWrite+0x3c>
     6ea:	72 c0       	rjmp	.+228    	; 0x7d0 <qbufferWrite+0x120>
	{
		next_in = (p_node->in + 1) %p_node->len;
     6ec:	dc 01       	movw	r26, r24
     6ee:	8d 91       	ld	r24, X+
     6f0:	9d 91       	ld	r25, X+
     6f2:	0d 90       	ld	r0, X+
     6f4:	bc 91       	ld	r27, X
     6f6:	a0 2d       	mov	r26, r0
     6f8:	89 83       	std	Y+1, r24	; 0x01
     6fa:	9a 83       	std	Y+2, r25	; 0x02
     6fc:	ab 83       	std	Y+3, r26	; 0x03
     6fe:	bc 83       	std	Y+4, r27	; 0x04
     700:	bc 01       	movw	r22, r24
     702:	cd 01       	movw	r24, r26
     704:	6f 5f       	subi	r22, 0xFF	; 255
     706:	7f 4f       	sbci	r23, 0xFF	; 255
     708:	8f 4f       	sbci	r24, 0xFF	; 255
     70a:	9f 4f       	sbci	r25, 0xFF	; 255
     70c:	ed 81       	ldd	r30, Y+5	; 0x05
     70e:	fe 81       	ldd	r31, Y+6	; 0x06
     710:	20 85       	ldd	r18, Z+8	; 0x08
     712:	31 85       	ldd	r19, Z+9	; 0x09
     714:	42 85       	ldd	r20, Z+10	; 0x0a
     716:	53 85       	ldd	r21, Z+11	; 0x0b
     718:	0e 94 a2 12 	call	0x2544	; 0x2544 <__udivmodsi4>
     71c:	6b 01       	movw	r12, r22
     71e:	7c 01       	movw	r14, r24

		if (next_in != p_node->out)
     720:	ed 81       	ldd	r30, Y+5	; 0x05
     722:	fe 81       	ldd	r31, Y+6	; 0x06
     724:	84 81       	ldd	r24, Z+4	; 0x04
     726:	95 81       	ldd	r25, Z+5	; 0x05
     728:	a6 81       	ldd	r26, Z+6	; 0x06
     72a:	b7 81       	ldd	r27, Z+7	; 0x07
     72c:	c8 16       	cp	r12, r24
     72e:	d9 06       	cpc	r13, r25
     730:	ea 06       	cpc	r14, r26
     732:	fb 06       	cpc	r15, r27
     734:	09 f4       	brne	.+2      	; 0x738 <qbufferWrite+0x88>
     736:	4c c0       	rjmp	.+152    	; 0x7d0 <qbufferWrite+0x120>
     738:	a0 2e       	mov	r10, r16
     73a:	b1 2e       	mov	r11, r17
     73c:	00 e0       	ldi	r16, 0x00	; 0
     73e:	10 e0       	ldi	r17, 0x00	; 0
     740:	24 c0       	rjmp	.+72     	; 0x78a <qbufferWrite+0xda>
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
	{
		next_in = (p_node->in + 1) %p_node->len;
     742:	c7 01       	movw	r24, r14
     744:	b6 01       	movw	r22, r12
     746:	6f 5f       	subi	r22, 0xFF	; 255
     748:	7f 4f       	sbci	r23, 0xFF	; 255
     74a:	8f 4f       	sbci	r24, 0xFF	; 255
     74c:	9f 4f       	sbci	r25, 0xFF	; 255
     74e:	ad 81       	ldd	r26, Y+5	; 0x05
     750:	be 81       	ldd	r27, Y+6	; 0x06
     752:	18 96       	adiw	r26, 0x08	; 8
     754:	2d 91       	ld	r18, X+
     756:	3d 91       	ld	r19, X+
     758:	4d 91       	ld	r20, X+
     75a:	5c 91       	ld	r21, X
     75c:	1b 97       	sbiw	r26, 0x0b	; 11
     75e:	0e 94 a2 12 	call	0x2544	; 0x2544 <__udivmodsi4>
     762:	bf ef       	ldi	r27, 0xFF	; 255
     764:	ab 1a       	sub	r10, r27
     766:	bb 0a       	sbc	r11, r27
     768:	c9 82       	std	Y+1, r12	; 0x01
     76a:	da 82       	std	Y+2, r13	; 0x02
     76c:	eb 82       	std	Y+3, r14	; 0x03
     76e:	fc 82       	std	Y+4, r15	; 0x04

		if (next_in != p_node->out)
     770:	ed 81       	ldd	r30, Y+5	; 0x05
     772:	fe 81       	ldd	r31, Y+6	; 0x06
     774:	c4 80       	ldd	r12, Z+4	; 0x04
     776:	d5 80       	ldd	r13, Z+5	; 0x05
     778:	e6 80       	ldd	r14, Z+6	; 0x06
     77a:	f7 80       	ldd	r15, Z+7	; 0x07
     77c:	6c 15       	cp	r22, r12
     77e:	7d 05       	cpc	r23, r13
     780:	8e 05       	cpc	r24, r14
     782:	9f 05       	cpc	r25, r15
     784:	29 f1       	breq	.+74     	; 0x7d0 <qbufferWrite+0x120>
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
	{
		next_in = (p_node->in + 1) %p_node->len;
     786:	6b 01       	movw	r12, r22
     788:	7c 01       	movw	r14, r24

		if (next_in != p_node->out)
		{
			if (p_node->p_buf != NULL)
     78a:	ad 81       	ldd	r26, Y+5	; 0x05
     78c:	be 81       	ldd	r27, Y+6	; 0x06
     78e:	1c 96       	adiw	r26, 0x0c	; 12
     790:	8d 91       	ld	r24, X+
     792:	9c 91       	ld	r25, X
     794:	1d 97       	sbiw	r26, 0x0d	; 13
     796:	00 97       	sbiw	r24, 0x00	; 0
     798:	39 f0       	breq	.+14     	; 0x7a8 <qbufferWrite+0xf8>
			{
				p_node->p_buf[p_node->in] = p_data[i];
     79a:	f5 01       	movw	r30, r10
     79c:	20 81       	ld	r18, Z
     79e:	e9 81       	ldd	r30, Y+1	; 0x01
     7a0:	fa 81       	ldd	r31, Y+2	; 0x02
     7a2:	e8 0f       	add	r30, r24
     7a4:	f9 1f       	adc	r31, r25
     7a6:	20 83       	st	Z, r18
			}
			p_node->in = next_in;
     7a8:	ad 81       	ldd	r26, Y+5	; 0x05
     7aa:	be 81       	ldd	r27, Y+6	; 0x06
     7ac:	cd 92       	st	X+, r12
     7ae:	dd 92       	st	X+, r13
     7b0:	ed 92       	st	X+, r14
     7b2:	fc 92       	st	X, r15
     7b4:	13 97       	sbiw	r26, 0x03	; 3
bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
     7b6:	0f 5f       	subi	r16, 0xFF	; 255
     7b8:	1f 4f       	sbci	r17, 0xFF	; 255
     7ba:	c8 01       	movw	r24, r16
     7bc:	01 2e       	mov	r0, r17
     7be:	00 0c       	add	r0, r0
     7c0:	aa 0b       	sbc	r26, r26
     7c2:	bb 0b       	sbc	r27, r27
     7c4:	84 15       	cp	r24, r4
     7c6:	95 05       	cpc	r25, r5
     7c8:	a6 05       	cpc	r26, r6
     7ca:	b7 05       	cpc	r27, r7
     7cc:	08 f4       	brcc	.+2      	; 0x7d0 <qbufferWrite+0x120>
     7ce:	b9 cf       	rjmp	.-142    	; 0x742 <qbufferWrite+0x92>
			ret = false;
			break;
		}
	}
	return ret;
}
     7d0:	80 e0       	ldi	r24, 0x00	; 0
     7d2:	26 96       	adiw	r28, 0x06	; 6
     7d4:	0f b6       	in	r0, 0x3f	; 63
     7d6:	f8 94       	cli
     7d8:	de bf       	out	0x3e, r29	; 62
     7da:	0f be       	out	0x3f, r0	; 63
     7dc:	cd bf       	out	0x3d, r28	; 61
     7de:	df 91       	pop	r29
     7e0:	cf 91       	pop	r28
     7e2:	1f 91       	pop	r17
     7e4:	0f 91       	pop	r16
     7e6:	ff 90       	pop	r15
     7e8:	ef 90       	pop	r14
     7ea:	df 90       	pop	r13
     7ec:	cf 90       	pop	r12
     7ee:	bf 90       	pop	r11
     7f0:	af 90       	pop	r10
     7f2:	7f 90       	pop	r7
     7f4:	6f 90       	pop	r6
     7f6:	5f 90       	pop	r5
     7f8:	4f 90       	pop	r4
     7fa:	08 95       	ret

000007fc <ctcInit>:
		break;
		default:
		break;
	}
	return ret;
}
     7fc:	ee e7       	ldi	r30, 0x7E	; 126
     7fe:	f3 e0       	ldi	r31, 0x03	; 3
     800:	82 ed       	ldi	r24, 0xD2	; 210
     802:	93 e0       	ldi	r25, 0x03	; 3
     804:	10 82       	st	Z, r1
     806:	12 82       	std	Z+2, r1	; 0x02
     808:	11 82       	std	Z+1, r1	; 0x01
     80a:	14 82       	std	Z+4, r1	; 0x04
     80c:	13 82       	std	Z+3, r1	; 0x03
     80e:	16 82       	std	Z+6, r1	; 0x06
     810:	15 82       	std	Z+5, r1	; 0x05
     812:	10 86       	std	Z+8, r1	; 0x08
     814:	17 82       	std	Z+7, r1	; 0x07
     816:	12 86       	std	Z+10, r1	; 0x0a
     818:	11 86       	std	Z+9, r1	; 0x09
     81a:	14 86       	std	Z+12, r1	; 0x0c
     81c:	13 86       	std	Z+11, r1	; 0x0b
     81e:	16 86       	std	Z+14, r1	; 0x0e
     820:	15 86       	std	Z+13, r1	; 0x0d
     822:	10 8a       	std	Z+16, r1	; 0x10
     824:	17 86       	std	Z+15, r1	; 0x0f
     826:	12 8a       	std	Z+18, r1	; 0x12
     828:	11 8a       	std	Z+17, r1	; 0x11
     82a:	14 8a       	std	Z+20, r1	; 0x14
     82c:	13 8a       	std	Z+19, r1	; 0x13
     82e:	75 96       	adiw	r30, 0x15	; 21
     830:	e8 17       	cp	r30, r24
     832:	f9 07       	cpc	r31, r25
     834:	39 f7       	brne	.-50     	; 0x804 <ctcInit+0x8>
     836:	81 e0       	ldi	r24, 0x01	; 1
     838:	08 95       	ret

0000083a <ctcBegin>:
     83a:	cf 93       	push	r28
     83c:	df 93       	push	r29
     83e:	c8 2f       	mov	r28, r24
     840:	d0 e0       	ldi	r29, 0x00	; 0
     842:	81 30       	cpi	r24, 0x01	; 1
     844:	09 f4       	brne	.+2      	; 0x848 <ctcBegin+0xe>
     846:	55 c0       	rjmp	.+170    	; 0x8f2 <ctcBegin+0xb8>
     848:	38 f0       	brcs	.+14     	; 0x858 <ctcBegin+0x1e>
     84a:	82 30       	cpi	r24, 0x02	; 2
     84c:	09 f4       	brne	.+2      	; 0x850 <ctcBegin+0x16>
     84e:	76 c0       	rjmp	.+236    	; 0x93c <ctcBegin+0x102>
     850:	83 30       	cpi	r24, 0x03	; 3
     852:	09 f4       	brne	.+2      	; 0x856 <ctcBegin+0x1c>
     854:	be c0       	rjmp	.+380    	; 0x9d2 <ctcBegin+0x198>
     856:	e2 c0       	rjmp	.+452    	; 0xa1c <ctcBegin+0x1e2>
     858:	85 e1       	ldi	r24, 0x15	; 21
     85a:	8c 9f       	mul	r24, r28
     85c:	d0 01       	movw	r26, r0
     85e:	8d 9f       	mul	r24, r29
     860:	b0 0d       	add	r27, r0
     862:	11 24       	eor	r1, r1
     864:	a2 58       	subi	r26, 0x82	; 130
     866:	bc 4f       	sbci	r27, 0xFC	; 252
     868:	e7 e7       	ldi	r30, 0x77	; 119
     86a:	f3 e0       	ldi	r31, 0x03	; 3
     86c:	1e 96       	adiw	r26, 0x0e	; 14
     86e:	fc 93       	st	X, r31
     870:	ee 93       	st	-X, r30
     872:	1d 97       	sbiw	r26, 0x0d	; 13
     874:	80 e6       	ldi	r24, 0x60	; 96
     876:	93 e0       	ldi	r25, 0x03	; 3
     878:	52 96       	adiw	r26, 0x12	; 18
     87a:	9c 93       	st	X, r25
     87c:	8e 93       	st	-X, r24
     87e:	51 97       	sbiw	r26, 0x11	; 17
     880:	10 82       	st	Z, r1
     882:	85 e0       	ldi	r24, 0x05	; 5
     884:	82 83       	std	Z+2, r24	; 0x02
     886:	11 82       	std	Z+1, r1	; 0x01
     888:	13 82       	std	Z+3, r1	; 0x03
     88a:	cf 01       	movw	r24, r30
     88c:	87 d6       	rcall	.+3342   	; 0x159c <TIM8_Base_Init>
     88e:	81 11       	cpse	r24, r1
     890:	c7 c0       	rjmp	.+398    	; 0xa20 <ctcBegin+0x1e6>
     892:	85 e1       	ldi	r24, 0x15	; 21
     894:	8c 9f       	mul	r24, r28
     896:	f0 01       	movw	r30, r0
     898:	8d 9f       	mul	r24, r29
     89a:	f0 0d       	add	r31, r0
     89c:	11 24       	eor	r1, r1
     89e:	e2 58       	subi	r30, 0x82	; 130
     8a0:	fc 4f       	sbci	r31, 0xFC	; 252
     8a2:	81 e0       	ldi	r24, 0x01	; 1
     8a4:	80 83       	st	Z, r24
     8a6:	a1 89       	ldd	r26, Z+17	; 0x11
     8a8:	b2 89       	ldd	r27, Z+18	; 0x12
     8aa:	8c 93       	st	X, r24
     8ac:	a1 89       	ldd	r26, Z+17	; 0x11
     8ae:	b2 89       	ldd	r27, Z+18	; 0x12
     8b0:	11 96       	adiw	r26, 0x01	; 1
     8b2:	8c 93       	st	X, r24
     8b4:	a1 89       	ldd	r26, Z+17	; 0x11
     8b6:	b2 89       	ldd	r27, Z+18	; 0x12
     8b8:	12 96       	adiw	r26, 0x02	; 2
     8ba:	8c 93       	st	X, r24
     8bc:	a1 89       	ldd	r26, Z+17	; 0x11
     8be:	b2 89       	ldd	r27, Z+18	; 0x12
     8c0:	13 96       	adiw	r26, 0x03	; 3
     8c2:	1c 92       	st	X, r1
     8c4:	a1 89       	ldd	r26, Z+17	; 0x11
     8c6:	b2 89       	ldd	r27, Z+18	; 0x12
     8c8:	14 96       	adiw	r26, 0x04	; 4
     8ca:	1c 92       	st	X, r1
     8cc:	61 89       	ldd	r22, Z+17	; 0x11
     8ce:	72 89       	ldd	r23, Z+18	; 0x12
     8d0:	85 85       	ldd	r24, Z+13	; 0x0d
     8d2:	96 85       	ldd	r25, Z+14	; 0x0e
     8d4:	b6 d6       	rcall	.+3436   	; 0x1642 <TIM8_OC_Init>
     8d6:	88 23       	and	r24, r24
     8d8:	09 f4       	brne	.+2      	; 0x8dc <ctcBegin+0xa2>
     8da:	a4 c0       	rjmp	.+328    	; 0xa24 <ctcBegin+0x1ea>
     8dc:	85 e1       	ldi	r24, 0x15	; 21
     8de:	8c 9f       	mul	r24, r28
     8e0:	f0 01       	movw	r30, r0
     8e2:	8d 9f       	mul	r24, r29
     8e4:	f0 0d       	add	r31, r0
     8e6:	11 24       	eor	r1, r1
     8e8:	e2 58       	subi	r30, 0x82	; 130
     8ea:	fc 4f       	sbci	r31, 0xFC	; 252
     8ec:	10 82       	st	Z, r1
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	9e c0       	rjmp	.+316    	; 0xa2e <ctcBegin+0x1f4>
     8f2:	85 e1       	ldi	r24, 0x15	; 21
     8f4:	8c 9f       	mul	r24, r28
     8f6:	f0 01       	movw	r30, r0
     8f8:	8d 9f       	mul	r24, r29
     8fa:	f0 0d       	add	r31, r0
     8fc:	11 24       	eor	r1, r1
     8fe:	e2 58       	subi	r30, 0x82	; 130
     900:	fc 4f       	sbci	r31, 0xFC	; 252
     902:	a5 e6       	ldi	r26, 0x65	; 101
     904:	b3 e0       	ldi	r27, 0x03	; 3
     906:	b0 8b       	std	Z+16, r27	; 0x10
     908:	a7 87       	std	Z+15, r26	; 0x0f
     90a:	ce e6       	ldi	r28, 0x6E	; 110
     90c:	d3 e0       	ldi	r29, 0x03	; 3
     90e:	d4 8b       	std	Z+20, r29	; 0x14
     910:	c3 8b       	std	Z+19, r28	; 0x13
     912:	81 e0       	ldi	r24, 0x01	; 1
     914:	8c 93       	st	X, r24
     916:	95 e0       	ldi	r25, 0x05	; 5
     918:	12 96       	adiw	r26, 0x02	; 2
     91a:	9c 93       	st	X, r25
     91c:	12 97       	sbiw	r26, 0x02	; 2
     91e:	11 96       	adiw	r26, 0x01	; 1
     920:	1c 92       	st	X, r1
     922:	11 97       	sbiw	r26, 0x01	; 1
     924:	15 96       	adiw	r26, 0x05	; 5
     926:	1c 92       	st	X, r1
     928:	1e 92       	st	-X, r1
     92a:	14 97       	sbiw	r26, 0x04	; 4
     92c:	1c 82       	std	Y+4, r1	; 0x04
     92e:	1b 82       	std	Y+3, r1	; 0x03
     930:	1e 82       	std	Y+6, r1	; 0x06
     932:	1d 82       	std	Y+5, r1	; 0x05
     934:	18 86       	std	Y+8, r1	; 0x08
     936:	1f 82       	std	Y+7, r1	; 0x07
     938:	80 83       	st	Z, r24
     93a:	79 c0       	rjmp	.+242    	; 0xa2e <ctcBegin+0x1f4>
     93c:	85 e1       	ldi	r24, 0x15	; 21
     93e:	8c 9f       	mul	r24, r28
     940:	d0 01       	movw	r26, r0
     942:	8d 9f       	mul	r24, r29
     944:	b0 0d       	add	r27, r0
     946:	11 24       	eor	r1, r1
     948:	a2 58       	subi	r26, 0x82	; 130
     94a:	bc 4f       	sbci	r27, 0xFC	; 252
     94c:	eb ed       	ldi	r30, 0xDB	; 219
     94e:	f3 e0       	ldi	r31, 0x03	; 3
     950:	1e 96       	adiw	r26, 0x0e	; 14
     952:	fc 93       	st	X, r31
     954:	ee 93       	st	-X, r30
     956:	1d 97       	sbiw	r26, 0x0d	; 13
     958:	82 ee       	ldi	r24, 0xE2	; 226
     95a:	93 e0       	ldi	r25, 0x03	; 3
     95c:	52 96       	adiw	r26, 0x12	; 18
     95e:	9c 93       	st	X, r25
     960:	8e 93       	st	-X, r24
     962:	51 97       	sbiw	r26, 0x11	; 17
     964:	82 e0       	ldi	r24, 0x02	; 2
     966:	80 83       	st	Z, r24
     968:	12 82       	std	Z+2, r1	; 0x02
     96a:	11 82       	std	Z+1, r1	; 0x01
     96c:	cf 01       	movw	r24, r30
     96e:	16 d6       	rcall	.+3116   	; 0x159c <TIM8_Base_Init>
     970:	81 11       	cpse	r24, r1
     972:	5a c0       	rjmp	.+180    	; 0xa28 <ctcBegin+0x1ee>
     974:	85 e1       	ldi	r24, 0x15	; 21
     976:	8c 9f       	mul	r24, r28
     978:	f0 01       	movw	r30, r0
     97a:	8d 9f       	mul	r24, r29
     97c:	f0 0d       	add	r31, r0
     97e:	11 24       	eor	r1, r1
     980:	e2 58       	subi	r30, 0x82	; 130
     982:	fc 4f       	sbci	r31, 0xFC	; 252
     984:	81 e0       	ldi	r24, 0x01	; 1
     986:	80 83       	st	Z, r24
     988:	a1 89       	ldd	r26, Z+17	; 0x11
     98a:	b2 89       	ldd	r27, Z+18	; 0x12
     98c:	1c 92       	st	X, r1
     98e:	a1 89       	ldd	r26, Z+17	; 0x11
     990:	b2 89       	ldd	r27, Z+18	; 0x12
     992:	11 96       	adiw	r26, 0x01	; 1
     994:	1c 92       	st	X, r1
     996:	a1 89       	ldd	r26, Z+17	; 0x11
     998:	b2 89       	ldd	r27, Z+18	; 0x12
     99a:	12 96       	adiw	r26, 0x02	; 2
     99c:	1c 92       	st	X, r1
     99e:	a1 89       	ldd	r26, Z+17	; 0x11
     9a0:	b2 89       	ldd	r27, Z+18	; 0x12
     9a2:	13 96       	adiw	r26, 0x03	; 3
     9a4:	1c 92       	st	X, r1
     9a6:	a1 89       	ldd	r26, Z+17	; 0x11
     9a8:	b2 89       	ldd	r27, Z+18	; 0x12
     9aa:	14 96       	adiw	r26, 0x04	; 4
     9ac:	1c 92       	st	X, r1
     9ae:	61 89       	ldd	r22, Z+17	; 0x11
     9b0:	72 89       	ldd	r23, Z+18	; 0x12
     9b2:	85 85       	ldd	r24, Z+13	; 0x0d
     9b4:	96 85       	ldd	r25, Z+14	; 0x0e
     9b6:	45 d6       	rcall	.+3210   	; 0x1642 <TIM8_OC_Init>
     9b8:	88 23       	and	r24, r24
     9ba:	c1 f1       	breq	.+112    	; 0xa2c <ctcBegin+0x1f2>
     9bc:	85 e1       	ldi	r24, 0x15	; 21
     9be:	8c 9f       	mul	r24, r28
     9c0:	f0 01       	movw	r30, r0
     9c2:	8d 9f       	mul	r24, r29
     9c4:	f0 0d       	add	r31, r0
     9c6:	11 24       	eor	r1, r1
     9c8:	e2 58       	subi	r30, 0x82	; 130
     9ca:	fc 4f       	sbci	r31, 0xFC	; 252
     9cc:	10 82       	st	Z, r1
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	2e c0       	rjmp	.+92     	; 0xa2e <ctcBegin+0x1f4>
     9d2:	85 e1       	ldi	r24, 0x15	; 21
     9d4:	8c 9f       	mul	r24, r28
     9d6:	f0 01       	movw	r30, r0
     9d8:	8d 9f       	mul	r24, r29
     9da:	f0 0d       	add	r31, r0
     9dc:	11 24       	eor	r1, r1
     9de:	e2 58       	subi	r30, 0x82	; 130
     9e0:	fc 4f       	sbci	r31, 0xFC	; 252
     9e2:	a7 e5       	ldi	r26, 0x57	; 87
     9e4:	b3 e0       	ldi	r27, 0x03	; 3
     9e6:	b0 8b       	std	Z+16, r27	; 0x10
     9e8:	a7 87       	std	Z+15, r26	; 0x0f
     9ea:	c2 ed       	ldi	r28, 0xD2	; 210
     9ec:	d3 e0       	ldi	r29, 0x03	; 3
     9ee:	d4 8b       	std	Z+20, r29	; 0x14
     9f0:	c3 8b       	std	Z+19, r28	; 0x13
     9f2:	83 e0       	ldi	r24, 0x03	; 3
     9f4:	8c 93       	st	X, r24
     9f6:	12 96       	adiw	r26, 0x02	; 2
     9f8:	1c 92       	st	X, r1
     9fa:	12 97       	sbiw	r26, 0x02	; 2
     9fc:	11 96       	adiw	r26, 0x01	; 1
     9fe:	1c 92       	st	X, r1
     a00:	11 97       	sbiw	r26, 0x01	; 1
     a02:	15 96       	adiw	r26, 0x05	; 5
     a04:	1c 92       	st	X, r1
     a06:	1e 92       	st	-X, r1
     a08:	14 97       	sbiw	r26, 0x04	; 4
     a0a:	1c 82       	std	Y+4, r1	; 0x04
     a0c:	1b 82       	std	Y+3, r1	; 0x03
     a0e:	1e 82       	std	Y+6, r1	; 0x06
     a10:	1d 82       	std	Y+5, r1	; 0x05
     a12:	18 86       	std	Y+8, r1	; 0x08
     a14:	1f 82       	std	Y+7, r1	; 0x07
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	80 83       	st	Z, r24
     a1a:	09 c0       	rjmp	.+18     	; 0xa2e <ctcBegin+0x1f4>
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	07 c0       	rjmp	.+14     	; 0xa2e <ctcBegin+0x1f4>
     a20:	80 e0       	ldi	r24, 0x00	; 0
     a22:	05 c0       	rjmp	.+10     	; 0xa2e <ctcBegin+0x1f4>
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	03 c0       	rjmp	.+6      	; 0xa2e <ctcBegin+0x1f4>
     a28:	80 e0       	ldi	r24, 0x00	; 0
     a2a:	01 c0       	rjmp	.+2      	; 0xa2e <ctcBegin+0x1f4>
     a2c:	81 e0       	ldi	r24, 0x01	; 1
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	08 95       	ret

00000a34 <ctcStart>:
     a34:	28 2f       	mov	r18, r24
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	81 30       	cpi	r24, 0x01	; 1
     a3a:	b1 f0       	breq	.+44     	; 0xa68 <ctcStart+0x34>
     a3c:	28 f0       	brcs	.+10     	; 0xa48 <ctcStart+0x14>
     a3e:	82 30       	cpi	r24, 0x02	; 2
     a40:	21 f1       	breq	.+72     	; 0xa8a <ctcStart+0x56>
     a42:	83 30       	cpi	r24, 0x03	; 3
     a44:	91 f1       	breq	.+100    	; 0xaaa <ctcStart+0x76>
     a46:	42 c0       	rjmp	.+132    	; 0xacc <ctcStart+0x98>
     a48:	85 e1       	ldi	r24, 0x15	; 21
     a4a:	82 9f       	mul	r24, r18
     a4c:	f0 01       	movw	r30, r0
     a4e:	83 9f       	mul	r24, r19
     a50:	f0 0d       	add	r31, r0
     a52:	11 24       	eor	r1, r1
     a54:	e2 58       	subi	r30, 0x82	; 130
     a56:	fc 4f       	sbci	r31, 0xFC	; 252
     a58:	85 85       	ldd	r24, Z+13	; 0x0d
     a5a:	96 85       	ldd	r25, Z+14	; 0x0e
     a5c:	b3 d7       	rcall	.+3942   	; 0x19c4 <TIM8_OC_Start>
     a5e:	91 e0       	ldi	r25, 0x01	; 1
     a60:	88 23       	and	r24, r24
     a62:	a9 f1       	breq	.+106    	; 0xace <ctcStart+0x9a>
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	33 c0       	rjmp	.+102    	; 0xace <ctcStart+0x9a>
     a68:	85 e1       	ldi	r24, 0x15	; 21
     a6a:	82 9f       	mul	r24, r18
     a6c:	f0 01       	movw	r30, r0
     a6e:	83 9f       	mul	r24, r19
     a70:	f0 0d       	add	r31, r0
     a72:	11 24       	eor	r1, r1
     a74:	e2 58       	subi	r30, 0x82	; 130
     a76:	fc 4f       	sbci	r31, 0xFC	; 252
     a78:	87 85       	ldd	r24, Z+15	; 0x0f
     a7a:	90 89       	ldd	r25, Z+16	; 0x10
     a7c:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <TIM16_OC_Start>
     a80:	91 e0       	ldi	r25, 0x01	; 1
     a82:	88 23       	and	r24, r24
     a84:	21 f1       	breq	.+72     	; 0xace <ctcStart+0x9a>
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	22 c0       	rjmp	.+68     	; 0xace <ctcStart+0x9a>
     a8a:	85 e1       	ldi	r24, 0x15	; 21
     a8c:	82 9f       	mul	r24, r18
     a8e:	f0 01       	movw	r30, r0
     a90:	83 9f       	mul	r24, r19
     a92:	f0 0d       	add	r31, r0
     a94:	11 24       	eor	r1, r1
     a96:	e2 58       	subi	r30, 0x82	; 130
     a98:	fc 4f       	sbci	r31, 0xFC	; 252
     a9a:	85 85       	ldd	r24, Z+13	; 0x0d
     a9c:	96 85       	ldd	r25, Z+14	; 0x0e
     a9e:	92 d7       	rcall	.+3876   	; 0x19c4 <TIM8_OC_Start>
     aa0:	91 e0       	ldi	r25, 0x01	; 1
     aa2:	88 23       	and	r24, r24
     aa4:	a1 f0       	breq	.+40     	; 0xace <ctcStart+0x9a>
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	12 c0       	rjmp	.+36     	; 0xace <ctcStart+0x9a>
     aaa:	85 e1       	ldi	r24, 0x15	; 21
     aac:	82 9f       	mul	r24, r18
     aae:	f0 01       	movw	r30, r0
     ab0:	83 9f       	mul	r24, r19
     ab2:	f0 0d       	add	r31, r0
     ab4:	11 24       	eor	r1, r1
     ab6:	e2 58       	subi	r30, 0x82	; 130
     ab8:	fc 4f       	sbci	r31, 0xFC	; 252
     aba:	87 85       	ldd	r24, Z+15	; 0x0f
     abc:	90 89       	ldd	r25, Z+16	; 0x10
     abe:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <TIM16_OC_Start>
     ac2:	91 e0       	ldi	r25, 0x01	; 1
     ac4:	88 23       	and	r24, r24
     ac6:	19 f0       	breq	.+6      	; 0xace <ctcStart+0x9a>
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	01 c0       	rjmp	.+2      	; 0xace <ctcStart+0x9a>
     acc:	91 e0       	ldi	r25, 0x01	; 1
     ace:	89 2f       	mov	r24, r25
     ad0:	08 95       	ret

00000ad2 <ctcStop>:
     ad2:	28 2f       	mov	r18, r24
     ad4:	30 e0       	ldi	r19, 0x00	; 0
     ad6:	81 30       	cpi	r24, 0x01	; 1
     ad8:	b1 f0       	breq	.+44     	; 0xb06 <ctcStop+0x34>
     ada:	28 f0       	brcs	.+10     	; 0xae6 <ctcStop+0x14>
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	19 f1       	breq	.+70     	; 0xb26 <ctcStop+0x54>
     ae0:	83 30       	cpi	r24, 0x03	; 3
     ae2:	89 f1       	breq	.+98     	; 0xb46 <ctcStop+0x74>
     ae4:	40 c0       	rjmp	.+128    	; 0xb66 <ctcStop+0x94>
     ae6:	85 e1       	ldi	r24, 0x15	; 21
     ae8:	82 9f       	mul	r24, r18
     aea:	f0 01       	movw	r30, r0
     aec:	83 9f       	mul	r24, r19
     aee:	f0 0d       	add	r31, r0
     af0:	11 24       	eor	r1, r1
     af2:	e2 58       	subi	r30, 0x82	; 130
     af4:	fc 4f       	sbci	r31, 0xFC	; 252
     af6:	85 85       	ldd	r24, Z+13	; 0x0d
     af8:	96 85       	ldd	r25, Z+14	; 0x0e
     afa:	3c d6       	rcall	.+3192   	; 0x1774 <TIM8_OC_Stop>
     afc:	91 e0       	ldi	r25, 0x01	; 1
     afe:	88 23       	and	r24, r24
     b00:	99 f1       	breq	.+102    	; 0xb68 <ctcStop+0x96>
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	31 c0       	rjmp	.+98     	; 0xb68 <ctcStop+0x96>
     b06:	85 e1       	ldi	r24, 0x15	; 21
     b08:	82 9f       	mul	r24, r18
     b0a:	f0 01       	movw	r30, r0
     b0c:	83 9f       	mul	r24, r19
     b0e:	f0 0d       	add	r31, r0
     b10:	11 24       	eor	r1, r1
     b12:	e2 58       	subi	r30, 0x82	; 130
     b14:	fc 4f       	sbci	r31, 0xFC	; 252
     b16:	87 85       	ldd	r24, Z+15	; 0x0f
     b18:	90 89       	ldd	r25, Z+16	; 0x10
     b1a:	41 d6       	rcall	.+3202   	; 0x179e <TIM16_OC_Stop>
     b1c:	91 e0       	ldi	r25, 0x01	; 1
     b1e:	88 23       	and	r24, r24
     b20:	19 f1       	breq	.+70     	; 0xb68 <ctcStop+0x96>
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	21 c0       	rjmp	.+66     	; 0xb68 <ctcStop+0x96>
     b26:	85 e1       	ldi	r24, 0x15	; 21
     b28:	82 9f       	mul	r24, r18
     b2a:	f0 01       	movw	r30, r0
     b2c:	83 9f       	mul	r24, r19
     b2e:	f0 0d       	add	r31, r0
     b30:	11 24       	eor	r1, r1
     b32:	e2 58       	subi	r30, 0x82	; 130
     b34:	fc 4f       	sbci	r31, 0xFC	; 252
     b36:	85 85       	ldd	r24, Z+13	; 0x0d
     b38:	96 85       	ldd	r25, Z+14	; 0x0e
     b3a:	1c d6       	rcall	.+3128   	; 0x1774 <TIM8_OC_Stop>
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	88 23       	and	r24, r24
     b40:	99 f0       	breq	.+38     	; 0xb68 <ctcStop+0x96>
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	11 c0       	rjmp	.+34     	; 0xb68 <ctcStop+0x96>
     b46:	85 e1       	ldi	r24, 0x15	; 21
     b48:	82 9f       	mul	r24, r18
     b4a:	f0 01       	movw	r30, r0
     b4c:	83 9f       	mul	r24, r19
     b4e:	f0 0d       	add	r31, r0
     b50:	11 24       	eor	r1, r1
     b52:	e2 58       	subi	r30, 0x82	; 130
     b54:	fc 4f       	sbci	r31, 0xFC	; 252
     b56:	87 85       	ldd	r24, Z+15	; 0x0f
     b58:	90 89       	ldd	r25, Z+16	; 0x10
     b5a:	21 d6       	rcall	.+3138   	; 0x179e <TIM16_OC_Stop>
     b5c:	91 e0       	ldi	r25, 0x01	; 1
     b5e:	88 23       	and	r24, r24
     b60:	19 f0       	breq	.+6      	; 0xb68 <ctcStop+0x96>
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	01 c0       	rjmp	.+2      	; 0xb68 <ctcStop+0x96>
     b66:	91 e0       	ldi	r25, 0x01	; 1
     b68:	89 2f       	mov	r24, r25
     b6a:	08 95       	ret

00000b6c <ctcSetTcnt>:
     b6c:	28 2f       	mov	r18, r24
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	81 30       	cpi	r24, 0x01	; 1
     b72:	d1 f0       	breq	.+52     	; 0xba8 <ctcSetTcnt+0x3c>
     b74:	30 f0       	brcs	.+12     	; 0xb82 <ctcSetTcnt+0x16>
     b76:	82 30       	cpi	r24, 0x02	; 2
     b78:	a9 f1       	breq	.+106    	; 0xbe4 <ctcSetTcnt+0x78>
     b7a:	83 30       	cpi	r24, 0x03	; 3
     b7c:	09 f4       	brne	.+2      	; 0xb80 <ctcSetTcnt+0x14>
     b7e:	45 c0       	rjmp	.+138    	; 0xc0a <ctcSetTcnt+0x9e>
     b80:	61 c0       	rjmp	.+194    	; 0xc44 <ctcSetTcnt+0xd8>
     b82:	85 e1       	ldi	r24, 0x15	; 21
     b84:	82 9f       	mul	r24, r18
     b86:	f0 01       	movw	r30, r0
     b88:	83 9f       	mul	r24, r19
     b8a:	f0 0d       	add	r31, r0
     b8c:	11 24       	eor	r1, r1
     b8e:	e2 58       	subi	r30, 0x82	; 130
     b90:	fc 4f       	sbci	r31, 0xFC	; 252
     b92:	05 84       	ldd	r0, Z+13	; 0x0d
     b94:	f6 85       	ldd	r31, Z+14	; 0x0e
     b96:	e0 2d       	mov	r30, r0
     b98:	04 80       	ldd	r0, Z+4	; 0x04
     b9a:	f5 81       	ldd	r31, Z+5	; 0x05
     b9c:	e0 2d       	mov	r30, r0
     b9e:	02 80       	ldd	r0, Z+2	; 0x02
     ba0:	f3 81       	ldd	r31, Z+3	; 0x03
     ba2:	e0 2d       	mov	r30, r0
     ba4:	60 83       	st	Z, r22
     ba6:	4e c0       	rjmp	.+156    	; 0xc44 <ctcSetTcnt+0xd8>
     ba8:	85 e1       	ldi	r24, 0x15	; 21
     baa:	82 9f       	mul	r24, r18
     bac:	f0 01       	movw	r30, r0
     bae:	83 9f       	mul	r24, r19
     bb0:	f0 0d       	add	r31, r0
     bb2:	11 24       	eor	r1, r1
     bb4:	e2 58       	subi	r30, 0x82	; 130
     bb6:	fc 4f       	sbci	r31, 0xFC	; 252
     bb8:	a7 85       	ldd	r26, Z+15	; 0x0f
     bba:	b0 89       	ldd	r27, Z+16	; 0x10
     bbc:	16 96       	adiw	r26, 0x06	; 6
     bbe:	0d 90       	ld	r0, X+
     bc0:	bc 91       	ld	r27, X
     bc2:	a0 2d       	mov	r26, r0
     bc4:	18 96       	adiw	r26, 0x08	; 8
     bc6:	0d 90       	ld	r0, X+
     bc8:	bc 91       	ld	r27, X
     bca:	a0 2d       	mov	r26, r0
     bcc:	7c 93       	st	X, r23
     bce:	07 84       	ldd	r0, Z+15	; 0x0f
     bd0:	f0 89       	ldd	r31, Z+16	; 0x10
     bd2:	e0 2d       	mov	r30, r0
     bd4:	06 80       	ldd	r0, Z+6	; 0x06
     bd6:	f7 81       	ldd	r31, Z+7	; 0x07
     bd8:	e0 2d       	mov	r30, r0
     bda:	06 80       	ldd	r0, Z+6	; 0x06
     bdc:	f7 81       	ldd	r31, Z+7	; 0x07
     bde:	e0 2d       	mov	r30, r0
     be0:	60 83       	st	Z, r22
     be2:	30 c0       	rjmp	.+96     	; 0xc44 <ctcSetTcnt+0xd8>
     be4:	85 e1       	ldi	r24, 0x15	; 21
     be6:	82 9f       	mul	r24, r18
     be8:	f0 01       	movw	r30, r0
     bea:	83 9f       	mul	r24, r19
     bec:	f0 0d       	add	r31, r0
     bee:	11 24       	eor	r1, r1
     bf0:	e2 58       	subi	r30, 0x82	; 130
     bf2:	fc 4f       	sbci	r31, 0xFC	; 252
     bf4:	05 84       	ldd	r0, Z+13	; 0x0d
     bf6:	f6 85       	ldd	r31, Z+14	; 0x0e
     bf8:	e0 2d       	mov	r30, r0
     bfa:	04 80       	ldd	r0, Z+4	; 0x04
     bfc:	f5 81       	ldd	r31, Z+5	; 0x05
     bfe:	e0 2d       	mov	r30, r0
     c00:	02 80       	ldd	r0, Z+2	; 0x02
     c02:	f3 81       	ldd	r31, Z+3	; 0x03
     c04:	e0 2d       	mov	r30, r0
     c06:	60 83       	st	Z, r22
     c08:	1d c0       	rjmp	.+58     	; 0xc44 <ctcSetTcnt+0xd8>
     c0a:	85 e1       	ldi	r24, 0x15	; 21
     c0c:	82 9f       	mul	r24, r18
     c0e:	f0 01       	movw	r30, r0
     c10:	83 9f       	mul	r24, r19
     c12:	f0 0d       	add	r31, r0
     c14:	11 24       	eor	r1, r1
     c16:	e2 58       	subi	r30, 0x82	; 130
     c18:	fc 4f       	sbci	r31, 0xFC	; 252
     c1a:	a7 85       	ldd	r26, Z+15	; 0x0f
     c1c:	b0 89       	ldd	r27, Z+16	; 0x10
     c1e:	16 96       	adiw	r26, 0x06	; 6
     c20:	0d 90       	ld	r0, X+
     c22:	bc 91       	ld	r27, X
     c24:	a0 2d       	mov	r26, r0
     c26:	18 96       	adiw	r26, 0x08	; 8
     c28:	0d 90       	ld	r0, X+
     c2a:	bc 91       	ld	r27, X
     c2c:	a0 2d       	mov	r26, r0
     c2e:	7c 93       	st	X, r23
     c30:	07 84       	ldd	r0, Z+15	; 0x0f
     c32:	f0 89       	ldd	r31, Z+16	; 0x10
     c34:	e0 2d       	mov	r30, r0
     c36:	06 80       	ldd	r0, Z+6	; 0x06
     c38:	f7 81       	ldd	r31, Z+7	; 0x07
     c3a:	e0 2d       	mov	r30, r0
     c3c:	06 80       	ldd	r0, Z+6	; 0x06
     c3e:	f7 81       	ldd	r31, Z+7	; 0x07
     c40:	e0 2d       	mov	r30, r0
     c42:	60 83       	st	Z, r22
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	08 95       	ret

00000c48 <ctcSetOcr>:

bool ctcSetOcr(uint8_t ch_, uint16_t ocr_, uint8_t channel_)
{
	bool ret = true;
	ctc_t *p_ctc = &ctc_tbl[ch_];
     c48:	28 2f       	mov	r18, r24
     c4a:	30 e0       	ldi	r19, 0x00	; 0
	switch(ch_)
     c4c:	88 23       	and	r24, r24
     c4e:	19 f0       	breq	.+6      	; 0xc56 <ctcSetOcr+0xe>
     c50:	82 30       	cpi	r24, 0x02	; 2
     c52:	a1 f0       	breq	.+40     	; 0xc7c <ctcSetOcr+0x34>
     c54:	25 c0       	rjmp	.+74     	; 0xca0 <ctcSetOcr+0x58>
	{
		case _DEF_TIM0:
		*(p_ctc->h_tim8->Regs->OCRn) = ocr_ & 0xFF;
     c56:	85 e1       	ldi	r24, 0x15	; 21
     c58:	82 9f       	mul	r24, r18
     c5a:	f0 01       	movw	r30, r0
     c5c:	83 9f       	mul	r24, r19
     c5e:	f0 0d       	add	r31, r0
     c60:	11 24       	eor	r1, r1
     c62:	e2 58       	subi	r30, 0x82	; 130
     c64:	fc 4f       	sbci	r31, 0xFC	; 252
     c66:	05 84       	ldd	r0, Z+13	; 0x0d
     c68:	f6 85       	ldd	r31, Z+14	; 0x0e
     c6a:	e0 2d       	mov	r30, r0
     c6c:	04 80       	ldd	r0, Z+4	; 0x04
     c6e:	f5 81       	ldd	r31, Z+5	; 0x05
     c70:	e0 2d       	mov	r30, r0
     c72:	04 80       	ldd	r0, Z+4	; 0x04
     c74:	f5 81       	ldd	r31, Z+5	; 0x05
     c76:	e0 2d       	mov	r30, r0
     c78:	60 83       	st	Z, r22
		break;
     c7a:	12 c0       	rjmp	.+36     	; 0xca0 <ctcSetOcr+0x58>
		case _DEF_TIM2:
		*(p_ctc->h_tim8->Regs->OCRn) = ocr_ & 0xFF;
     c7c:	85 e1       	ldi	r24, 0x15	; 21
     c7e:	82 9f       	mul	r24, r18
     c80:	f0 01       	movw	r30, r0
     c82:	83 9f       	mul	r24, r19
     c84:	f0 0d       	add	r31, r0
     c86:	11 24       	eor	r1, r1
     c88:	e2 58       	subi	r30, 0x82	; 130
     c8a:	fc 4f       	sbci	r31, 0xFC	; 252
     c8c:	05 84       	ldd	r0, Z+13	; 0x0d
     c8e:	f6 85       	ldd	r31, Z+14	; 0x0e
     c90:	e0 2d       	mov	r30, r0
     c92:	04 80       	ldd	r0, Z+4	; 0x04
     c94:	f5 81       	ldd	r31, Z+5	; 0x05
     c96:	e0 2d       	mov	r30, r0
     c98:	04 80       	ldd	r0, Z+4	; 0x04
     c9a:	f5 81       	ldd	r31, Z+5	; 0x05
     c9c:	e0 2d       	mov	r30, r0
     c9e:	60 83       	st	Z, r22
		break;
		default:
		break;
	}
	
	if (channel_ == _DEF_CH_A)
     ca0:	41 30       	cpi	r20, 0x01	; 1
     ca2:	f1 f4       	brne	.+60     	; 0xce0 <ctcSetOcr+0x98>
	{
		*(p_ctc->h_tim16->Regs->OCRnAH) = (ocr_ >> 8) & 0xFF;
     ca4:	85 e1       	ldi	r24, 0x15	; 21
     ca6:	82 9f       	mul	r24, r18
     ca8:	f0 01       	movw	r30, r0
     caa:	83 9f       	mul	r24, r19
     cac:	f0 0d       	add	r31, r0
     cae:	11 24       	eor	r1, r1
     cb0:	e2 58       	subi	r30, 0x82	; 130
     cb2:	fc 4f       	sbci	r31, 0xFC	; 252
     cb4:	a7 85       	ldd	r26, Z+15	; 0x0f
     cb6:	b0 89       	ldd	r27, Z+16	; 0x10
     cb8:	16 96       	adiw	r26, 0x06	; 6
     cba:	0d 90       	ld	r0, X+
     cbc:	bc 91       	ld	r27, X
     cbe:	a0 2d       	mov	r26, r0
     cc0:	1c 96       	adiw	r26, 0x0c	; 12
     cc2:	0d 90       	ld	r0, X+
     cc4:	bc 91       	ld	r27, X
     cc6:	a0 2d       	mov	r26, r0
     cc8:	7c 93       	st	X, r23
		*(p_ctc->h_tim16->Regs->OCRnAL) = (ocr_ & 0xFF);
     cca:	07 84       	ldd	r0, Z+15	; 0x0f
     ccc:	f0 89       	ldd	r31, Z+16	; 0x10
     cce:	e0 2d       	mov	r30, r0
     cd0:	06 80       	ldd	r0, Z+6	; 0x06
     cd2:	f7 81       	ldd	r31, Z+7	; 0x07
     cd4:	e0 2d       	mov	r30, r0
     cd6:	02 84       	ldd	r0, Z+10	; 0x0a
     cd8:	f3 85       	ldd	r31, Z+11	; 0x0b
     cda:	e0 2d       	mov	r30, r0
     cdc:	60 83       	st	Z, r22
     cde:	1f c0       	rjmp	.+62     	; 0xd1e <ctcSetOcr+0xd6>
	}
	else if (channel_ == _DEF_CH_B)
     ce0:	42 30       	cpi	r20, 0x02	; 2
     ce2:	e9 f4       	brne	.+58     	; 0xd1e <ctcSetOcr+0xd6>
	{
		*(p_ctc->h_tim16->Regs->OCRnBH) = (ocr_ >> 8) & 0xFF;
     ce4:	85 e1       	ldi	r24, 0x15	; 21
     ce6:	82 9f       	mul	r24, r18
     ce8:	f0 01       	movw	r30, r0
     cea:	83 9f       	mul	r24, r19
     cec:	f0 0d       	add	r31, r0
     cee:	11 24       	eor	r1, r1
     cf0:	e2 58       	subi	r30, 0x82	; 130
     cf2:	fc 4f       	sbci	r31, 0xFC	; 252
     cf4:	a7 85       	ldd	r26, Z+15	; 0x0f
     cf6:	b0 89       	ldd	r27, Z+16	; 0x10
     cf8:	16 96       	adiw	r26, 0x06	; 6
     cfa:	0d 90       	ld	r0, X+
     cfc:	bc 91       	ld	r27, X
     cfe:	a0 2d       	mov	r26, r0
     d00:	50 96       	adiw	r26, 0x10	; 16
     d02:	0d 90       	ld	r0, X+
     d04:	bc 91       	ld	r27, X
     d06:	a0 2d       	mov	r26, r0
     d08:	7c 93       	st	X, r23
		*(p_ctc->h_tim16->Regs->OCRnBL) = (ocr_ & 0xFF);
     d0a:	07 84       	ldd	r0, Z+15	; 0x0f
     d0c:	f0 89       	ldd	r31, Z+16	; 0x10
     d0e:	e0 2d       	mov	r30, r0
     d10:	06 80       	ldd	r0, Z+6	; 0x06
     d12:	f7 81       	ldd	r31, Z+7	; 0x07
     d14:	e0 2d       	mov	r30, r0
     d16:	06 84       	ldd	r0, Z+14	; 0x0e
     d18:	f7 85       	ldd	r31, Z+15	; 0x0f
     d1a:	e0 2d       	mov	r30, r0
     d1c:	60 83       	st	Z, r22
	}
	
	return ret;
}
     d1e:	81 e0       	ldi	r24, 0x01	; 1
     d20:	08 95       	ret

00000d22 <ctcGetOcr>:

uint16_t ctcGetOcr(uint8_t ch_, uint8_t channel_)
{
	uint16_t ret = 0;
	
	ctc_t *p_ctc = &ctc_tbl[ch_];
     d22:	28 2f       	mov	r18, r24
     d24:	30 e0       	ldi	r19, 0x00	; 0
	switch(ch_)
     d26:	88 23       	and	r24, r24
     d28:	19 f0       	breq	.+6      	; 0xd30 <ctcGetOcr+0xe>
     d2a:	82 30       	cpi	r24, 0x02	; 2
     d2c:	a9 f0       	breq	.+42     	; 0xd58 <ctcGetOcr+0x36>
     d2e:	28 c0       	rjmp	.+80     	; 0xd80 <ctcGetOcr+0x5e>
	{
		case _DEF_TIM0:
		ret = *(p_ctc->h_tim8->Regs->OCRn);
     d30:	85 e1       	ldi	r24, 0x15	; 21
     d32:	82 9f       	mul	r24, r18
     d34:	f0 01       	movw	r30, r0
     d36:	83 9f       	mul	r24, r19
     d38:	f0 0d       	add	r31, r0
     d3a:	11 24       	eor	r1, r1
     d3c:	e2 58       	subi	r30, 0x82	; 130
     d3e:	fc 4f       	sbci	r31, 0xFC	; 252
     d40:	05 84       	ldd	r0, Z+13	; 0x0d
     d42:	f6 85       	ldd	r31, Z+14	; 0x0e
     d44:	e0 2d       	mov	r30, r0
     d46:	04 80       	ldd	r0, Z+4	; 0x04
     d48:	f5 81       	ldd	r31, Z+5	; 0x05
     d4a:	e0 2d       	mov	r30, r0
     d4c:	04 80       	ldd	r0, Z+4	; 0x04
     d4e:	f5 81       	ldd	r31, Z+5	; 0x05
     d50:	e0 2d       	mov	r30, r0
     d52:	80 81       	ld	r24, Z
     d54:	90 e0       	ldi	r25, 0x00	; 0
		break;
     d56:	16 c0       	rjmp	.+44     	; 0xd84 <ctcGetOcr+0x62>
		case _DEF_TIM2:
		ret = *(p_ctc->h_tim8->Regs->OCRn);
     d58:	85 e1       	ldi	r24, 0x15	; 21
     d5a:	82 9f       	mul	r24, r18
     d5c:	f0 01       	movw	r30, r0
     d5e:	83 9f       	mul	r24, r19
     d60:	f0 0d       	add	r31, r0
     d62:	11 24       	eor	r1, r1
     d64:	e2 58       	subi	r30, 0x82	; 130
     d66:	fc 4f       	sbci	r31, 0xFC	; 252
     d68:	05 84       	ldd	r0, Z+13	; 0x0d
     d6a:	f6 85       	ldd	r31, Z+14	; 0x0e
     d6c:	e0 2d       	mov	r30, r0
     d6e:	04 80       	ldd	r0, Z+4	; 0x04
     d70:	f5 81       	ldd	r31, Z+5	; 0x05
     d72:	e0 2d       	mov	r30, r0
     d74:	04 80       	ldd	r0, Z+4	; 0x04
     d76:	f5 81       	ldd	r31, Z+5	; 0x05
     d78:	e0 2d       	mov	r30, r0
     d7a:	80 81       	ld	r24, Z
     d7c:	90 e0       	ldi	r25, 0x00	; 0
		break;
     d7e:	02 c0       	rjmp	.+4      	; 0xd84 <ctcGetOcr+0x62>
	return ret;
}

uint16_t ctcGetOcr(uint8_t ch_, uint8_t channel_)
{
	uint16_t ret = 0;
     d80:	80 e0       	ldi	r24, 0x00	; 0
     d82:	90 e0       	ldi	r25, 0x00	; 0
		break;
		default:
		break;
	}
	
	if (channel_ == _DEF_CH_A)
     d84:	61 30       	cpi	r22, 0x01	; 1
     d86:	c1 f4       	brne	.+48     	; 0xdb8 <ctcGetOcr+0x96>
	{
		ret = ((((*(p_ctc->h_tim16->Regs->OCRnAH)) << 8) & 0xFF00) | ((*(p_ctc->h_tim16->Regs->OCRnAL)) & 0xFF));
     d88:	85 e1       	ldi	r24, 0x15	; 21
     d8a:	82 9f       	mul	r24, r18
     d8c:	f0 01       	movw	r30, r0
     d8e:	83 9f       	mul	r24, r19
     d90:	f0 0d       	add	r31, r0
     d92:	11 24       	eor	r1, r1
     d94:	e2 58       	subi	r30, 0x82	; 130
     d96:	fc 4f       	sbci	r31, 0xFC	; 252
     d98:	07 84       	ldd	r0, Z+15	; 0x0f
     d9a:	f0 89       	ldd	r31, Z+16	; 0x10
     d9c:	e0 2d       	mov	r30, r0
     d9e:	06 80       	ldd	r0, Z+6	; 0x06
     da0:	f7 81       	ldd	r31, Z+7	; 0x07
     da2:	e0 2d       	mov	r30, r0
     da4:	a4 85       	ldd	r26, Z+12	; 0x0c
     da6:	b5 85       	ldd	r27, Z+13	; 0x0d
     da8:	2c 91       	ld	r18, X
     daa:	02 84       	ldd	r0, Z+10	; 0x0a
     dac:	f3 85       	ldd	r31, Z+11	; 0x0b
     dae:	e0 2d       	mov	r30, r0
     db0:	80 81       	ld	r24, Z
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	92 2b       	or	r25, r18
     db6:	08 95       	ret
	}
	else if (channel_ == _DEF_CH_B)
     db8:	62 30       	cpi	r22, 0x02	; 2
     dba:	b9 f4       	brne	.+46     	; 0xdea <ctcGetOcr+0xc8>
	{
		ret = ((((*(p_ctc->h_tim16->Regs->OCRnAH)) << 8) & 0xFF00) | ((*(p_ctc->h_tim16->Regs->OCRnAL)) & 0xFF));
     dbc:	85 e1       	ldi	r24, 0x15	; 21
     dbe:	82 9f       	mul	r24, r18
     dc0:	f0 01       	movw	r30, r0
     dc2:	83 9f       	mul	r24, r19
     dc4:	f0 0d       	add	r31, r0
     dc6:	11 24       	eor	r1, r1
     dc8:	e2 58       	subi	r30, 0x82	; 130
     dca:	fc 4f       	sbci	r31, 0xFC	; 252
     dcc:	07 84       	ldd	r0, Z+15	; 0x0f
     dce:	f0 89       	ldd	r31, Z+16	; 0x10
     dd0:	e0 2d       	mov	r30, r0
     dd2:	06 80       	ldd	r0, Z+6	; 0x06
     dd4:	f7 81       	ldd	r31, Z+7	; 0x07
     dd6:	e0 2d       	mov	r30, r0
     dd8:	a4 85       	ldd	r26, Z+12	; 0x0c
     dda:	b5 85       	ldd	r27, Z+13	; 0x0d
     ddc:	2c 91       	ld	r18, X
     dde:	02 84       	ldd	r0, Z+10	; 0x0a
     de0:	f3 85       	ldd	r31, Z+11	; 0x0b
     de2:	e0 2d       	mov	r30, r0
     de4:	80 81       	ld	r24, Z
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	92 2b       	or	r25, r18
	}
	
	return ret;
}
     dea:	08 95       	ret

00000dec <motorRun>:
	{
		return 3;
	}
#endif
	return 0;
}
     dec:	cf 93       	push	r28
     dee:	df 93       	push	r29
     df0:	c7 e2       	ldi	r28, 0x27	; 39
     df2:	d2 e0       	ldi	r29, 0x02	; 2
     df4:	ea 81       	ldd	r30, Y+2	; 0x02
     df6:	fb 81       	ldd	r31, Y+3	; 0x03
     df8:	80 e0       	ldi	r24, 0x00	; 0
     dfa:	09 95       	icall
     dfc:	ea 81       	ldd	r30, Y+2	; 0x02
     dfe:	fb 81       	ldd	r31, Y+3	; 0x03
     e00:	81 e0       	ldi	r24, 0x01	; 1
     e02:	09 95       	icall
     e04:	df 91       	pop	r29
     e06:	cf 91       	pop	r28
     e08:	08 95       	ret

00000e0a <motorBreak>:
     e0a:	cf 93       	push	r28
     e0c:	df 93       	push	r29
     e0e:	c7 e2       	ldi	r28, 0x27	; 39
     e10:	d2 e0       	ldi	r29, 0x02	; 2
     e12:	ee 81       	ldd	r30, Y+6	; 0x06
     e14:	ff 81       	ldd	r31, Y+7	; 0x07
     e16:	80 e0       	ldi	r24, 0x00	; 0
     e18:	09 95       	icall
     e1a:	ee 81       	ldd	r30, Y+6	; 0x06
     e1c:	ff 81       	ldd	r31, Y+7	; 0x07
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	09 95       	icall
     e22:	df 91       	pop	r29
     e24:	cf 91       	pop	r28
     e26:	08 95       	ret

00000e28 <motorSetSpeed>:
     e28:	0f 93       	push	r16
     e2a:	1f 93       	push	r17
     e2c:	cf 93       	push	r28
     e2e:	df 93       	push	r29
     e30:	85 36       	cpi	r24, 0x65	; 101
     e32:	f0 f4       	brcc	.+60     	; 0xe70 <motorSetSpeed+0x48>
     e34:	2f ef       	ldi	r18, 0xFF	; 255
     e36:	82 9f       	mul	r24, r18
     e38:	c0 01       	movw	r24, r0
     e3a:	11 24       	eor	r1, r1
     e3c:	68 e7       	ldi	r22, 0x78	; 120
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	0e 94 8f 12 	call	0x251e	; 0x251e <__divmodhi4>
     e44:	cf ef       	ldi	r28, 0xFF	; 255
     e46:	d0 e0       	ldi	r29, 0x00	; 0
     e48:	c6 1b       	sub	r28, r22
     e4a:	d7 0b       	sbc	r29, r23
     e4c:	07 e2       	ldi	r16, 0x27	; 39
     e4e:	12 e0       	ldi	r17, 0x02	; 2
     e50:	d8 01       	movw	r26, r16
     e52:	18 96       	adiw	r26, 0x08	; 8
     e54:	ed 91       	ld	r30, X+
     e56:	fc 91       	ld	r31, X
     e58:	19 97       	sbiw	r26, 0x09	; 9
     e5a:	6c 2f       	mov	r22, r28
     e5c:	80 e0       	ldi	r24, 0x00	; 0
     e5e:	09 95       	icall
     e60:	d8 01       	movw	r26, r16
     e62:	18 96       	adiw	r26, 0x08	; 8
     e64:	ed 91       	ld	r30, X+
     e66:	fc 91       	ld	r31, X
     e68:	19 97       	sbiw	r26, 0x09	; 9
     e6a:	6c 2f       	mov	r22, r28
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	09 95       	icall
     e70:	df 91       	pop	r29
     e72:	cf 91       	pop	r28
     e74:	1f 91       	pop	r17
     e76:	0f 91       	pop	r16
     e78:	08 95       	ret

00000e7a <motorSetMotionState>:
     e7a:	cf 93       	push	r28
     e7c:	df 93       	push	r29
     e7e:	81 30       	cpi	r24, 0x01	; 1
     e80:	99 f0       	breq	.+38     	; 0xea8 <motorSetMotionState+0x2e>
     e82:	28 f0       	brcs	.+10     	; 0xe8e <motorSetMotionState+0x14>
     e84:	82 30       	cpi	r24, 0x02	; 2
     e86:	e9 f0       	breq	.+58     	; 0xec2 <motorSetMotionState+0x48>
     e88:	83 30       	cpi	r24, 0x03	; 3
     e8a:	41 f1       	breq	.+80     	; 0xedc <motorSetMotionState+0x62>
     e8c:	33 c0       	rjmp	.+102    	; 0xef4 <motorSetMotionState+0x7a>
     e8e:	c7 e2       	ldi	r28, 0x27	; 39
     e90:	d2 e0       	ldi	r29, 0x02	; 2
     e92:	ec 85       	ldd	r30, Y+12	; 0x0c
     e94:	fd 85       	ldd	r31, Y+13	; 0x0d
     e96:	61 e0       	ldi	r22, 0x01	; 1
     e98:	80 e0       	ldi	r24, 0x00	; 0
     e9a:	09 95       	icall
     e9c:	ec 85       	ldd	r30, Y+12	; 0x0c
     e9e:	fd 85       	ldd	r31, Y+13	; 0x0d
     ea0:	60 e0       	ldi	r22, 0x00	; 0
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	09 95       	icall
     ea6:	26 c0       	rjmp	.+76     	; 0xef4 <motorSetMotionState+0x7a>
     ea8:	c7 e2       	ldi	r28, 0x27	; 39
     eaa:	d2 e0       	ldi	r29, 0x02	; 2
     eac:	ec 85       	ldd	r30, Y+12	; 0x0c
     eae:	fd 85       	ldd	r31, Y+13	; 0x0d
     eb0:	60 e0       	ldi	r22, 0x00	; 0
     eb2:	80 e0       	ldi	r24, 0x00	; 0
     eb4:	09 95       	icall
     eb6:	ec 85       	ldd	r30, Y+12	; 0x0c
     eb8:	fd 85       	ldd	r31, Y+13	; 0x0d
     eba:	60 e0       	ldi	r22, 0x00	; 0
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	09 95       	icall
     ec0:	19 c0       	rjmp	.+50     	; 0xef4 <motorSetMotionState+0x7a>
     ec2:	c7 e2       	ldi	r28, 0x27	; 39
     ec4:	d2 e0       	ldi	r29, 0x02	; 2
     ec6:	ec 85       	ldd	r30, Y+12	; 0x0c
     ec8:	fd 85       	ldd	r31, Y+13	; 0x0d
     eca:	60 e0       	ldi	r22, 0x00	; 0
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	09 95       	icall
     ed0:	ec 85       	ldd	r30, Y+12	; 0x0c
     ed2:	fd 85       	ldd	r31, Y+13	; 0x0d
     ed4:	61 e0       	ldi	r22, 0x01	; 1
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	09 95       	icall
     eda:	0c c0       	rjmp	.+24     	; 0xef4 <motorSetMotionState+0x7a>
     edc:	c7 e2       	ldi	r28, 0x27	; 39
     ede:	d2 e0       	ldi	r29, 0x02	; 2
     ee0:	ec 85       	ldd	r30, Y+12	; 0x0c
     ee2:	fd 85       	ldd	r31, Y+13	; 0x0d
     ee4:	61 e0       	ldi	r22, 0x01	; 1
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	09 95       	icall
     eea:	ec 85       	ldd	r30, Y+12	; 0x0c
     eec:	fd 85       	ldd	r31, Y+13	; 0x0d
     eee:	61 e0       	ldi	r22, 0x01	; 1
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	09 95       	icall
     ef4:	df 91       	pop	r29
     ef6:	cf 91       	pop	r28
     ef8:	08 95       	ret

00000efa <motorInit>:
     efa:	cf 93       	push	r28
     efc:	df 93       	push	r29
     efe:	80 e0       	ldi	r24, 0x00	; 0
     f00:	5f d0       	rcall	.+190    	; 0xfc0 <a4988Init>
     f02:	88 23       	and	r24, r24
     f04:	49 f0       	breq	.+18     	; 0xf18 <motorInit+0x1e>
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	5b d0       	rcall	.+182    	; 0xfc0 <a4988Init>
     f0a:	88 23       	and	r24, r24
     f0c:	29 f0       	breq	.+10     	; 0xf18 <motorInit+0x1e>
     f0e:	87 e2       	ldi	r24, 0x27	; 39
     f10:	92 e0       	ldi	r25, 0x02	; 2
     f12:	26 d1       	rcall	.+588    	; 0x1160 <a4988DriverInit>
     f14:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__data_end>
     f18:	c7 e2       	ldi	r28, 0x27	; 39
     f1a:	d2 e0       	ldi	r29, 0x02	; 2
     f1c:	e8 89       	ldd	r30, Y+16	; 0x10
     f1e:	f9 89       	ldd	r31, Y+17	; 0x11
     f20:	60 e0       	ldi	r22, 0x00	; 0
     f22:	70 e0       	ldi	r23, 0x00	; 0
     f24:	80 e0       	ldi	r24, 0x00	; 0
     f26:	09 95       	icall
     f28:	e8 89       	ldd	r30, Y+16	; 0x10
     f2a:	f9 89       	ldd	r31, Y+17	; 0x11
     f2c:	60 e0       	ldi	r22, 0x00	; 0
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	81 e0       	ldi	r24, 0x01	; 1
     f32:	09 95       	icall
     f34:	80 e0       	ldi	r24, 0x00	; 0
     f36:	a1 df       	rcall	.-190    	; 0xe7a <motorSetMotionState>
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	76 df       	rcall	.-276    	; 0xe28 <motorSetSpeed>
     f3c:	66 df       	rcall	.-308    	; 0xe0a <motorBreak>
     f3e:	81 e0       	ldi	r24, 0x01	; 1
     f40:	df 91       	pop	r29
     f42:	cf 91       	pop	r28
     f44:	08 95       	ret

00000f46 <motorAdvance>:

void motorAdvance(void)
{
#ifdef _USE_HW_A4988
	motorSetMotionState(0);
     f46:	80 e0       	ldi	r24, 0x00	; 0
     f48:	98 df       	rcall	.-208    	; 0xe7a <motorSetMotionState>
	motorRun();
     f4a:	50 cf       	rjmp	.-352    	; 0xdec <motorRun>
     f4c:	08 95       	ret

00000f4e <a4988GetDirection>:

bool a4988GetDirection(uint8_t ch_)
{
	bool ret;
	
	a4988_t *p_a4988 = &a4988_tbl[ch_];
     f4e:	90 e0       	ldi	r25, 0x00	; 0
		break;
		default:
		break;
	}
	*/
	if (p_a4988->h_a4988->direction)
     f50:	fc 01       	movw	r30, r24
     f52:	ee 0f       	add	r30, r30
     f54:	ff 1f       	adc	r31, r31
     f56:	ee 0f       	add	r30, r30
     f58:	ff 1f       	adc	r31, r31
     f5a:	e8 0f       	add	r30, r24
     f5c:	f9 1f       	adc	r31, r25
     f5e:	ed 50       	subi	r30, 0x0D	; 13
     f60:	fc 4f       	sbci	r31, 0xFC	; 252
     f62:	03 80       	ldd	r0, Z+3	; 0x03
     f64:	f4 81       	ldd	r31, Z+4	; 0x04
     f66:	e0 2d       	mov	r30, r0
     f68:	24 81       	ldd	r18, Z+4	; 0x04
     f6a:	22 23       	and	r18, r18
     f6c:	61 f0       	breq	.+24     	; 0xf86 <a4988GetDirection+0x38>
	{
		ret = p_a4988->normal_rotate;
     f6e:	fc 01       	movw	r30, r24
     f70:	ee 0f       	add	r30, r30
     f72:	ff 1f       	adc	r31, r31
     f74:	ee 0f       	add	r30, r30
     f76:	ff 1f       	adc	r31, r31
     f78:	8e 0f       	add	r24, r30
     f7a:	9f 1f       	adc	r25, r31
     f7c:	fc 01       	movw	r30, r24
     f7e:	ed 50       	subi	r30, 0x0D	; 13
     f80:	fc 4f       	sbci	r31, 0xFC	; 252
     f82:	81 81       	ldd	r24, Z+1	; 0x01
     f84:	08 95       	ret
	}
	else
	{
		ret = p_a4988->reverse_rotate;
     f86:	fc 01       	movw	r30, r24
     f88:	ee 0f       	add	r30, r30
     f8a:	ff 1f       	adc	r31, r31
     f8c:	ee 0f       	add	r30, r30
     f8e:	ff 1f       	adc	r31, r31
     f90:	8e 0f       	add	r24, r30
     f92:	9f 1f       	adc	r25, r31
     f94:	fc 01       	movw	r30, r24
     f96:	ed 50       	subi	r30, 0x0D	; 13
     f98:	fc 4f       	sbci	r31, 0xFC	; 252
     f9a:	82 81       	ldd	r24, Z+2	; 0x02
	}
	return ret;
}
     f9c:	08 95       	ret

00000f9e <a4988GetSpeed>:
uint8_t a4988GetSpeed(uint8_t ch_)
{
	uint8_t ret = 0;
	
	a4988_t *p_a4988 = &a4988_tbl[ch_];
	ret = p_a4988->h_a4988->speed;
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	fc 01       	movw	r30, r24
     fa2:	ee 0f       	add	r30, r30
     fa4:	ff 1f       	adc	r31, r31
     fa6:	ee 0f       	add	r30, r30
     fa8:	ff 1f       	adc	r31, r31
     faa:	8e 0f       	add	r24, r30
     fac:	9f 1f       	adc	r25, r31
     fae:	fc 01       	movw	r30, r24
     fb0:	ed 50       	subi	r30, 0x0D	; 13
     fb2:	fc 4f       	sbci	r31, 0xFC	; 252
     fb4:	03 80       	ldd	r0, Z+3	; 0x03
     fb6:	f4 81       	ldd	r31, Z+4	; 0x04
     fb8:	e0 2d       	mov	r30, r0
	return ret;
}
     fba:	85 81       	ldd	r24, Z+5	; 0x05
     fbc:	08 95       	ret

00000fbe <a4988SetCallBack>:

void a4988SetCallBack(uint8_t ch_, void (*p_func)(void))
{
     fbe:	08 95       	ret

00000fc0 <a4988Init>:

bool a4988Enable(void);
bool a4988Disable(void);

bool a4988Init(uint8_t ch_)
{
     fc0:	cf 93       	push	r28
     fc2:	df 93       	push	r29
	bool ret = false;
	
	
	a4988_t *p_a4988 = &a4988_tbl[ch_];
     fc4:	c8 2f       	mov	r28, r24
     fc6:	d0 e0       	ldi	r29, 0x00	; 0

	switch(ch_)
     fc8:	88 23       	and	r24, r24
     fca:	19 f0       	breq	.+6      	; 0xfd2 <a4988Init+0x12>
     fcc:	81 30       	cpi	r24, 0x01	; 1
     fce:	e9 f0       	breq	.+58     	; 0x100a <a4988Init+0x4a>
     fd0:	38 c0       	rjmp	.+112    	; 0x1042 <a4988Init+0x82>
	{
		case _DEF_A4988_0:
		p_a4988->h_a4988				= &h_a4988_1;
     fd2:	de 01       	movw	r26, r28
     fd4:	aa 0f       	add	r26, r26
     fd6:	bb 1f       	adc	r27, r27
     fd8:	aa 0f       	add	r26, r26
     fda:	bb 1f       	adc	r27, r27
     fdc:	ac 0f       	add	r26, r28
     fde:	bd 1f       	adc	r27, r29
     fe0:	ad 50       	subi	r26, 0x0D	; 13
     fe2:	bc 4f       	sbci	r27, 0xFC	; 252
     fe4:	e7 ee       	ldi	r30, 0xE7	; 231
     fe6:	f3 e0       	ldi	r31, 0x03	; 3
     fe8:	14 96       	adiw	r26, 0x04	; 4
     fea:	fc 93       	st	X, r31
     fec:	ee 93       	st	-X, r30
     fee:	13 97       	sbiw	r26, 0x03	; 3
		
		p_a4988->normal_rotate			= _DEF_CW;
     ff0:	11 96       	adiw	r26, 0x01	; 1
     ff2:	1c 92       	st	X, r1
     ff4:	11 97       	sbiw	r26, 0x01	; 1
		p_a4988->reverse_rotate			= _DEF_CCW;
     ff6:	81 e0       	ldi	r24, 0x01	; 1
     ff8:	12 96       	adiw	r26, 0x02	; 2
     ffa:	8c 93       	st	X, r24
		p_a4988->h_a4988->Init.ch		= _DEF_A4988_0;
     ffc:	10 82       	st	Z, r1
		p_a4988->h_a4988->Init.timer	= TIM0;
     ffe:	11 82       	std	Z+1, r1	; 0x01
		p_a4988->h_a4988->Init.phase	= A4988_FULL_STEP;
    1000:	12 82       	std	Z+2, r1	; 0x02
		p_a4988->h_a4988->enable		= false;
    1002:	13 82       	std	Z+3, r1	; 0x03
		p_a4988->h_a4988->direction		= _NORMAL_ROTATION;
    1004:	84 83       	std	Z+4, r24	; 0x04
		p_a4988->h_a4988->speed			= 0;
    1006:	15 82       	std	Z+5, r1	; 0x05
		
		break;
    1008:	1c c0       	rjmp	.+56     	; 0x1042 <a4988Init+0x82>
		case _DEF_A4988_1:
		p_a4988->h_a4988				= &h_a4988_2;
    100a:	de 01       	movw	r26, r28
    100c:	aa 0f       	add	r26, r26
    100e:	bb 1f       	adc	r27, r27
    1010:	aa 0f       	add	r26, r26
    1012:	bb 1f       	adc	r27, r27
    1014:	ac 0f       	add	r26, r28
    1016:	bd 1f       	adc	r27, r29
    1018:	ad 50       	subi	r26, 0x0D	; 13
    101a:	bc 4f       	sbci	r27, 0xFC	; 252
    101c:	ed ee       	ldi	r30, 0xED	; 237
    101e:	f3 e0       	ldi	r31, 0x03	; 3
    1020:	14 96       	adiw	r26, 0x04	; 4
    1022:	fc 93       	st	X, r31
    1024:	ee 93       	st	-X, r30
    1026:	13 97       	sbiw	r26, 0x03	; 3
		
		p_a4988->normal_rotate			= _DEF_CW;
    1028:	11 96       	adiw	r26, 0x01	; 1
    102a:	1c 92       	st	X, r1
    102c:	11 97       	sbiw	r26, 0x01	; 1
		p_a4988->reverse_rotate			= _DEF_CCW;
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	12 96       	adiw	r26, 0x02	; 2
    1032:	8c 93       	st	X, r24
		p_a4988->h_a4988->Init.ch		= _DEF_A4988_1;
    1034:	80 83       	st	Z, r24
		p_a4988->h_a4988->Init.timer	= TIM2;
    1036:	92 e0       	ldi	r25, 0x02	; 2
    1038:	91 83       	std	Z+1, r25	; 0x01
		p_a4988->h_a4988->Init.phase	= A4988_FULL_STEP;
    103a:	12 82       	std	Z+2, r1	; 0x02
		p_a4988->h_a4988->enable		= false;
    103c:	13 82       	std	Z+3, r1	; 0x03
		p_a4988->h_a4988->direction		= _NORMAL_ROTATION;
    103e:	84 83       	std	Z+4, r24	; 0x04
		p_a4988->h_a4988->speed			= 0;
    1040:	15 82       	std	Z+5, r1	; 0x05
		default:
		break;
	}
	
	
	if (ctcBegin(p_a4988->h_a4988->Init.timer) != true)
    1042:	fe 01       	movw	r30, r28
    1044:	ee 0f       	add	r30, r30
    1046:	ff 1f       	adc	r31, r31
    1048:	ee 0f       	add	r30, r30
    104a:	ff 1f       	adc	r31, r31
    104c:	ec 0f       	add	r30, r28
    104e:	fd 1f       	adc	r31, r29
    1050:	ed 50       	subi	r30, 0x0D	; 13
    1052:	fc 4f       	sbci	r31, 0xFC	; 252
    1054:	03 80       	ldd	r0, Z+3	; 0x03
    1056:	f4 81       	ldd	r31, Z+4	; 0x04
    1058:	e0 2d       	mov	r30, r0
    105a:	81 81       	ldd	r24, Z+1	; 0x01
    105c:	ee db       	rcall	.-2084   	; 0x83a <ctcBegin>
    105e:	88 23       	and	r24, r24
    1060:	61 f0       	breq	.+24     	; 0x107a <a4988Init+0xba>
	{
		ret = false;
	}
	else
	{
		p_a4988->is_open = true;
    1062:	ce 01       	movw	r24, r28
    1064:	88 0f       	add	r24, r24
    1066:	99 1f       	adc	r25, r25
    1068:	88 0f       	add	r24, r24
    106a:	99 1f       	adc	r25, r25
    106c:	c8 0f       	add	r28, r24
    106e:	d9 1f       	adc	r29, r25
    1070:	cd 50       	subi	r28, 0x0D	; 13
    1072:	dc 4f       	sbci	r29, 0xFC	; 252
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	88 83       	st	Y, r24
    1078:	01 c0       	rjmp	.+2      	; 0x107c <a4988Init+0xbc>
	}
	
	
	if (ctcBegin(p_a4988->h_a4988->Init.timer) != true)
	{
		ret = false;
    107a:	80 e0       	ldi	r24, 0x00	; 0
		p_a4988->is_open = true;
		ret = true;
	}
	
	return ret;
}
    107c:	df 91       	pop	r29
    107e:	cf 91       	pop	r28
    1080:	08 95       	ret

00001082 <a4988SetDirection>:
}

bool a4988SetDirection(uint8_t ch_, bool dir_)
{
	bool ret = true;
	a4988_t *p_a4988 = &a4988_tbl[ch_];
    1082:	28 2f       	mov	r18, r24
    1084:	30 e0       	ldi	r19, 0x00	; 0
	uint8_t side = 0;
	p_a4988->h_a4988->direction = dir_;
    1086:	f9 01       	movw	r30, r18
    1088:	ee 0f       	add	r30, r30
    108a:	ff 1f       	adc	r31, r31
    108c:	ee 0f       	add	r30, r30
    108e:	ff 1f       	adc	r31, r31
    1090:	e2 0f       	add	r30, r18
    1092:	f3 1f       	adc	r31, r19
    1094:	ed 50       	subi	r30, 0x0D	; 13
    1096:	fc 4f       	sbci	r31, 0xFC	; 252
    1098:	03 80       	ldd	r0, Z+3	; 0x03
    109a:	f4 81       	ldd	r31, Z+4	; 0x04
    109c:	e0 2d       	mov	r30, r0
    109e:	64 83       	std	Z+4, r22	; 0x04
	
	switch(ch_)
    10a0:	88 23       	and	r24, r24
    10a2:	19 f0       	breq	.+6      	; 0x10aa <a4988SetDirection+0x28>
    10a4:	81 30       	cpi	r24, 0x01	; 1
    10a6:	19 f0       	breq	.+6      	; 0x10ae <a4988SetDirection+0x2c>
    10a8:	04 c0       	rjmp	.+8      	; 0x10b2 <a4988SetDirection+0x30>
	{
		case _DEF_A4988_0:
		side = _PIN_GPIO_A4988_LDIR;
    10aa:	81 e0       	ldi	r24, 0x01	; 1
    10ac:	03 c0       	rjmp	.+6      	; 0x10b4 <a4988SetDirection+0x32>
		break;
		case _DEF_A4988_1:
		side = _PIN_GPIO_A4988_RDIR;
    10ae:	82 e0       	ldi	r24, 0x02	; 2
		break;
    10b0:	01 c0       	rjmp	.+2      	; 0x10b4 <a4988SetDirection+0x32>

bool a4988SetDirection(uint8_t ch_, bool dir_)
{
	bool ret = true;
	a4988_t *p_a4988 = &a4988_tbl[ch_];
	uint8_t side = 0;
    10b2:	80 e0       	ldi	r24, 0x00	; 0
		break;
		default:
		break;
	}
	
	if (p_a4988->h_a4988->direction)
    10b4:	f9 01       	movw	r30, r18
    10b6:	ee 0f       	add	r30, r30
    10b8:	ff 1f       	adc	r31, r31
    10ba:	ee 0f       	add	r30, r30
    10bc:	ff 1f       	adc	r31, r31
    10be:	e2 0f       	add	r30, r18
    10c0:	f3 1f       	adc	r31, r19
    10c2:	ed 50       	subi	r30, 0x0D	; 13
    10c4:	fc 4f       	sbci	r31, 0xFC	; 252
    10c6:	03 80       	ldd	r0, Z+3	; 0x03
    10c8:	f4 81       	ldd	r31, Z+4	; 0x04
    10ca:	e0 2d       	mov	r30, r0
    10cc:	94 81       	ldd	r25, Z+4	; 0x04
    10ce:	99 23       	and	r25, r25
    10d0:	69 f0       	breq	.+26     	; 0x10ec <a4988SetDirection+0x6a>
	{
		gpioPinWrite(side, p_a4988->normal_rotate);
    10d2:	f9 01       	movw	r30, r18
    10d4:	ee 0f       	add	r30, r30
    10d6:	ff 1f       	adc	r31, r31
    10d8:	ee 0f       	add	r30, r30
    10da:	ff 1f       	adc	r31, r31
    10dc:	2e 0f       	add	r18, r30
    10de:	3f 1f       	adc	r19, r31
    10e0:	f9 01       	movw	r30, r18
    10e2:	ed 50       	subi	r30, 0x0D	; 13
    10e4:	fc 4f       	sbci	r31, 0xFC	; 252
    10e6:	61 81       	ldd	r22, Z+1	; 0x01
    10e8:	db d0       	rcall	.+438    	; 0x12a0 <gpioPinWrite>
    10ea:	0c c0       	rjmp	.+24     	; 0x1104 <__stack+0x5>
	}
	else
	{
		gpioPinWrite(side, p_a4988->reverse_rotate);
    10ec:	f9 01       	movw	r30, r18
    10ee:	ee 0f       	add	r30, r30
    10f0:	ff 1f       	adc	r31, r31
    10f2:	ee 0f       	add	r30, r30
    10f4:	ff 1f       	adc	r31, r31
    10f6:	2e 0f       	add	r18, r30
    10f8:	3f 1f       	adc	r19, r31
    10fa:	f9 01       	movw	r30, r18
    10fc:	ed 50       	subi	r30, 0x0D	; 13
    10fe:	fc 4f       	sbci	r31, 0xFC	; 252
    1100:	62 81       	ldd	r22, Z+2	; 0x02
    1102:	ce d0       	rcall	.+412    	; 0x12a0 <gpioPinWrite>
	}
	return ret;
}
    1104:	81 e0       	ldi	r24, 0x01	; 1
    1106:	08 95       	ret

00001108 <a4988SetSpeed>:
	}
	return ret;
}

bool a4988SetSpeed(uint8_t ch_, uint8_t speed_)
{
    1108:	cf 93       	push	r28
    110a:	df 93       	push	r29
	bool ret = false;

	a4988_t *p_a4988 = &a4988_tbl[ch_];
    110c:	90 e0       	ldi	r25, 0x00	; 0
	
	p_a4988->h_a4988->speed = speed_;
    110e:	ec 01       	movw	r28, r24
    1110:	cc 0f       	add	r28, r28
    1112:	dd 1f       	adc	r29, r29
    1114:	cc 0f       	add	r28, r28
    1116:	dd 1f       	adc	r29, r29
    1118:	8c 0f       	add	r24, r28
    111a:	9d 1f       	adc	r25, r29
    111c:	ec 01       	movw	r28, r24
    111e:	cd 50       	subi	r28, 0x0D	; 13
    1120:	dc 4f       	sbci	r29, 0xFC	; 252
    1122:	eb 81       	ldd	r30, Y+3	; 0x03
    1124:	fc 81       	ldd	r31, Y+4	; 0x04
    1126:	65 83       	std	Z+5, r22	; 0x05
	
	ctcSetTcnt(p_a4988->h_a4988->Init.timer, 0);
    1128:	eb 81       	ldd	r30, Y+3	; 0x03
    112a:	fc 81       	ldd	r31, Y+4	; 0x04
    112c:	60 e0       	ldi	r22, 0x00	; 0
    112e:	70 e0       	ldi	r23, 0x00	; 0
    1130:	81 81       	ldd	r24, Z+1	; 0x01
    1132:	1c dd       	rcall	.-1480   	; 0xb6c <ctcSetTcnt>
	if (p_a4988->h_a4988->Init.timer == TIM0 || p_a4988->h_a4988->Init.timer == TIM2)
    1134:	eb 81       	ldd	r30, Y+3	; 0x03
    1136:	fc 81       	ldd	r31, Y+4	; 0x04
    1138:	81 81       	ldd	r24, Z+1	; 0x01
    113a:	98 2f       	mov	r25, r24
    113c:	9d 7f       	andi	r25, 0xFD	; 253
    113e:	29 f4       	brne	.+10     	; 0x114a <a4988SetSpeed+0x42>
	{
		ret = ctcSetOcr(p_a4988->h_a4988->Init.timer, p_a4988->h_a4988->speed, _DEF_CH_NONE);	
    1140:	65 81       	ldd	r22, Z+5	; 0x05
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	40 e0       	ldi	r20, 0x00	; 0
    1146:	80 dd       	rcall	.-1280   	; 0xc48 <ctcSetOcr>
    1148:	08 c0       	rjmp	.+16     	; 0x115a <a4988SetSpeed+0x52>
	}
	else if (p_a4988->h_a4988->Init.timer == TIM1 || p_a4988->h_a4988->Init.timer == TIM3)
    114a:	91 30       	cpi	r25, 0x01	; 1
    114c:	29 f4       	brne	.+10     	; 0x1158 <a4988SetSpeed+0x50>
	{
		ret = ctcSetOcr(p_a4988->h_a4988->Init.timer, p_a4988->h_a4988->speed, _DEF_CH_A);	
    114e:	65 81       	ldd	r22, Z+5	; 0x05
    1150:	70 e0       	ldi	r23, 0x00	; 0
    1152:	41 e0       	ldi	r20, 0x01	; 1
    1154:	79 dd       	rcall	.-1294   	; 0xc48 <ctcSetOcr>
    1156:	01 c0       	rjmp	.+2      	; 0x115a <a4988SetSpeed+0x52>
	return ret;
}

bool a4988SetSpeed(uint8_t ch_, uint8_t speed_)
{
	bool ret = false;
    1158:	80 e0       	ldi	r24, 0x00	; 0
	else if (p_a4988->h_a4988->Init.timer == TIM1 || p_a4988->h_a4988->Init.timer == TIM3)
	{
		ret = ctcSetOcr(p_a4988->h_a4988->Init.timer, p_a4988->h_a4988->speed, _DEF_CH_A);	
	}
	return ret;
}
    115a:	df 91       	pop	r29
    115c:	cf 91       	pop	r28
    115e:	08 95       	ret

00001160 <a4988DriverInit>:
	return ret;
}


bool a4988DriverInit(drivemotor_driver_t *p_driver)
{
    1160:	fc 01       	movw	r30, r24
	p_driver->init			= a4988Init;
    1162:	80 ee       	ldi	r24, 0xE0	; 224
    1164:	97 e0       	ldi	r25, 0x07	; 7
    1166:	91 83       	std	Z+1, r25	; 0x01
    1168:	80 83       	st	Z, r24
	p_driver->startMotor	= a4988Start;
    116a:	8c ed       	ldi	r24, 0xDC	; 220
    116c:	98 e0       	ldi	r25, 0x08	; 8
    116e:	93 83       	std	Z+3, r25	; 0x03
    1170:	82 83       	std	Z+2, r24	; 0x02
	p_driver->stopMotor		= a4988Stop;
    1172:	87 ef       	ldi	r24, 0xF7	; 247
    1174:	98 e0       	ldi	r25, 0x08	; 8
    1176:	95 83       	std	Z+5, r25	; 0x05
    1178:	84 83       	std	Z+4, r24	; 0x04
	p_driver->breakMotor	= a4988Hold;
    117a:	83 e1       	ldi	r24, 0x13	; 19
    117c:	99 e0       	ldi	r25, 0x09	; 9
    117e:	97 83       	std	Z+7, r25	; 0x07
    1180:	86 83       	std	Z+6, r24	; 0x06
	p_driver->setSpeed		= a4988SetSpeed;
    1182:	84 e8       	ldi	r24, 0x84	; 132
    1184:	98 e0       	ldi	r25, 0x08	; 8
    1186:	91 87       	std	Z+9, r25	; 0x09
    1188:	80 87       	std	Z+8, r24	; 0x08
	p_driver->getSpeed		= a4988GetSpeed;
    118a:	8f ec       	ldi	r24, 0xCF	; 207
    118c:	97 e0       	ldi	r25, 0x07	; 7
    118e:	93 87       	std	Z+11, r25	; 0x0b
    1190:	82 87       	std	Z+10, r24	; 0x0a
	p_driver->setDirection	= a4988SetDirection;
    1192:	81 e4       	ldi	r24, 0x41	; 65
    1194:	98 e0       	ldi	r25, 0x08	; 8
    1196:	95 87       	std	Z+13, r25	; 0x0d
    1198:	84 87       	std	Z+12, r24	; 0x0c
	p_driver->getDirection	= a4988GetDirection;
    119a:	87 ea       	ldi	r24, 0xA7	; 167
    119c:	97 e0       	ldi	r25, 0x07	; 7
    119e:	97 87       	std	Z+15, r25	; 0x0f
    11a0:	86 87       	std	Z+14, r24	; 0x0e
	p_driver->setCallBack	= a4988SetCallBack;
    11a2:	8f ed       	ldi	r24, 0xDF	; 223
    11a4:	97 e0       	ldi	r25, 0x07	; 7
    11a6:	91 8b       	std	Z+17, r25	; 0x11
    11a8:	80 8b       	std	Z+16, r24	; 0x10
	return true;
}
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	08 95       	ret

000011ae <a4988Enable>:
}

bool a4988Enable(void)
{
	bool ret = true;
	gpioPinWrite(_PIN_GPIO_A4988_EN, true);
    11ae:	61 e0       	ldi	r22, 0x01	; 1
    11b0:	80 e0       	ldi	r24, 0x00	; 0
    11b2:	76 d0       	rcall	.+236    	; 0x12a0 <gpioPinWrite>
	return ret;
}
    11b4:	81 e0       	ldi	r24, 0x01	; 1
    11b6:	08 95       	ret

000011b8 <a4988Start>:
	p_driver->setCallBack	= a4988SetCallBack;
	return true;
}

bool a4988Start(uint8_t ch_)
{
    11b8:	cf 93       	push	r28
	bool ret = false;
	a4988_t *p_a4988 = &a4988_tbl[ch_];
	
	if (ctcStart(p_a4988->h_a4988->Init.timer) != true)
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	fc 01       	movw	r30, r24
    11be:	ee 0f       	add	r30, r30
    11c0:	ff 1f       	adc	r31, r31
    11c2:	ee 0f       	add	r30, r30
    11c4:	ff 1f       	adc	r31, r31
    11c6:	8e 0f       	add	r24, r30
    11c8:	9f 1f       	adc	r25, r31
    11ca:	fc 01       	movw	r30, r24
    11cc:	ed 50       	subi	r30, 0x0D	; 13
    11ce:	fc 4f       	sbci	r31, 0xFC	; 252
    11d0:	03 80       	ldd	r0, Z+3	; 0x03
    11d2:	f4 81       	ldd	r31, Z+4	; 0x04
    11d4:	e0 2d       	mov	r30, r0
    11d6:	81 81       	ldd	r24, Z+1	; 0x01
    11d8:	2d dc       	rcall	.-1958   	; 0xa34 <ctcStart>
    11da:	c8 2f       	mov	r28, r24
	}
	else
	{
		ret = true;
	}
	a4988Enable();
    11dc:	e8 df       	rcall	.-48     	; 0x11ae <a4988Enable>
    11de:	8c 2f       	mov	r24, r28
	
	return ret;
}
    11e0:	cf 91       	pop	r28
    11e2:	08 95       	ret

000011e4 <a4988Disable>:
    11e4:	60 e0       	ldi	r22, 0x00	; 0
}

bool a4988Disable()
{
	bool ret = true;
	gpioPinWrite(_PIN_GPIO_A4988_EN, false);
    11e6:	80 e0       	ldi	r24, 0x00	; 0
    11e8:	5b d0       	rcall	.+182    	; 0x12a0 <gpioPinWrite>
	return ret;
}
    11ea:	81 e0       	ldi	r24, 0x01	; 1
    11ec:	08 95       	ret

000011ee <a4988Stop>:
	return ret;
}


bool a4988Stop(uint8_t ch_)
{
    11ee:	cf 93       	push	r28
	bool ret = false;
	a4988_t *p_a4988 = &a4988_tbl[ch_];
	
	if (ctcStop(p_a4988->h_a4988->Init.timer) != true)
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	fc 01       	movw	r30, r24
    11f4:	ee 0f       	add	r30, r30
    11f6:	ff 1f       	adc	r31, r31
    11f8:	ee 0f       	add	r30, r30
    11fa:	ff 1f       	adc	r31, r31
    11fc:	8e 0f       	add	r24, r30
    11fe:	9f 1f       	adc	r25, r31
    1200:	fc 01       	movw	r30, r24
    1202:	ed 50       	subi	r30, 0x0D	; 13
    1204:	fc 4f       	sbci	r31, 0xFC	; 252
    1206:	03 80       	ldd	r0, Z+3	; 0x03
    1208:	f4 81       	ldd	r31, Z+4	; 0x04
    120a:	e0 2d       	mov	r30, r0
    120c:	81 81       	ldd	r24, Z+1	; 0x01
    120e:	61 dc       	rcall	.-1854   	; 0xad2 <ctcStop>
    1210:	c8 2f       	mov	r28, r24
    1212:	8f ed       	ldi	r24, 0xDF	; 223
    1214:	9e e2       	ldi	r25, 0x2E	; 46
    1216:	01 97       	sbiw	r24, 0x01	; 1
    1218:	f1 f7       	brne	.-4      	; 0x1216 <a4988Stop+0x28>
    121a:	00 c0       	rjmp	.+0      	; 0x121c <a4988Stop+0x2e>
	else
	{
		ret = true;
	}
	_delay_ms(3);
	a4988Disable();
    121c:	00 00       	nop
    121e:	e2 df       	rcall	.-60     	; 0x11e4 <a4988Disable>
	return ret;
}
    1220:	8c 2f       	mov	r24, r28
    1222:	cf 91       	pop	r28
    1224:	08 95       	ret

00001226 <a4988Hold>:

bool a4988Hold(uint8_t ch_)
{
	bool ret = a4988Stop(ch_);
    1226:	e3 df       	rcall	.-58     	; 0x11ee <a4988Stop>
	ret = a4988Enable();
    1228:	c2 cf       	rjmp	.-124    	; 0x11ae <a4988Enable>
    122a:	08 95       	ret

0000122c <gpioPinMode>:
	
	return ret;
}
    122c:	cf 93       	push	r28
	}
	return ret;
}

bool gpioPinMode(uint8_t ch, uint8_t mode)
{
    122e:	df 93       	push	r29
    1230:	00 d0       	rcall	.+0      	; 0x1232 <gpioPinMode+0x6>
    1232:	cd b7       	in	r28, 0x3d	; 61
    1234:	de b7       	in	r29, 0x3e	; 62
	bool ret = false;
	
	GPIO_InitTypeDef GPIO_InitStruct = {0};
    1236:	1a 82       	std	Y+2, r1	; 0x02
    1238:	19 82       	std	Y+1, r1	; 0x01
	
	if (ch < 0 || ch >= GPIO_MAX_CH) return ret;
    123a:	85 30       	cpi	r24, 0x05	; 5
    123c:	b8 f4       	brcc	.+46     	; 0x126c <gpioPinMode+0x40>
	
	switch(mode)
    123e:	61 30       	cpi	r22, 0x01	; 1
    1240:	11 f4       	brne	.+4      	; 0x1246 <gpioPinMode+0x1a>
		case _DEF_INPUT:
			GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
		break;
		
		case _DEF_OUTPUT:
			GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT;
    1242:	91 e0       	ldi	r25, 0x01	; 1
    1244:	9a 83       	std	Y+2, r25	; 0x02
		break;
		default:
		break;
	}
	
	GPIO_InitStruct.Pin = gpio_tbl[ch].pin;
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	fc 01       	movw	r30, r24
    124a:	ee 0f       	add	r30, r30
    124c:	ff 1f       	adc	r31, r31
    124e:	ee 0f       	add	r30, r30
    1250:	ff 1f       	adc	r31, r31
    1252:	e8 0f       	add	r30, r24
    1254:	f9 1f       	adc	r31, r25
    1256:	e0 50       	subi	r30, 0x00	; 0
    1258:	ff 4f       	sbci	r31, 0xFF	; 255
    125a:	81 81       	ldd	r24, Z+1	; 0x01
    125c:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Init(gpio_tbl[ch].port, &GPIO_InitStruct);
    125e:	be 01       	movw	r22, r28
    1260:	6f 5f       	subi	r22, 0xFF	; 255
    1262:	7f 4f       	sbci	r23, 0xFF	; 255
    1264:	80 81       	ld	r24, Z
    1266:	2b d1       	rcall	.+598    	; 0x14be <GPIO_Init>
	ret = true;
	
	return ret;
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	01 c0       	rjmp	.+2      	; 0x126e <gpioPinMode+0x42>
{
	bool ret = false;
	
	GPIO_InitTypeDef GPIO_InitStruct = {0};
	
	if (ch < 0 || ch >= GPIO_MAX_CH) return ret;
    126c:	80 e0       	ldi	r24, 0x00	; 0
	GPIO_InitStruct.Pin = gpio_tbl[ch].pin;
	GPIO_Init(gpio_tbl[ch].port, &GPIO_InitStruct);
	ret = true;
	
	return ret;
}
    126e:	0f 90       	pop	r0
    1270:	0f 90       	pop	r0
    1272:	df 91       	pop	r29
    1274:	cf 91       	pop	r28
    1276:	08 95       	ret

00001278 <gpioInit>:
};

bool gpioPinMode(uint8_t ch, uint8_t mode);

bool gpioInit(void)
{
    1278:	0f 93       	push	r16
    127a:	1f 93       	push	r17
    127c:	cf 93       	push	r28
    127e:	00 e0       	ldi	r16, 0x00	; 0
    1280:	11 e0       	ldi	r17, 0x01	; 1
    1282:	c0 e0       	ldi	r28, 0x00	; 0
	bool ret = true;
	
	for(int i = 0; i < GPIO_MAX_CH; i++)
	{
		gpioPinMode(i, gpio_tbl[i].mode);
    1284:	f8 01       	movw	r30, r16
    1286:	62 81       	ldd	r22, Z+2	; 0x02
    1288:	8c 2f       	mov	r24, r28
    128a:	d0 df       	rcall	.-96     	; 0x122c <gpioPinMode>
    128c:	0b 5f       	subi	r16, 0xFB	; 251
    128e:	1f 4f       	sbci	r17, 0xFF	; 255
    1290:	cf 5f       	subi	r28, 0xFF	; 255

bool gpioInit(void)
{
	bool ret = true;
	
	for(int i = 0; i < GPIO_MAX_CH; i++)
    1292:	c5 30       	cpi	r28, 0x05	; 5
    1294:	b9 f7       	brne	.-18     	; 0x1284 <gpioInit+0xc>
	{
		gpioPinMode(i, gpio_tbl[i].mode);
	}
	return ret;
}
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	cf 91       	pop	r28
    129a:	1f 91       	pop	r17
    129c:	0f 91       	pop	r16
    129e:	08 95       	ret

000012a0 <gpioPinWrite>:
	return ret;
}

void gpioPinWrite(uint8_t ch, bool value)
{
	if (ch < 0 || ch >= GPIO_MAX_CH) return;
    12a0:	85 30       	cpi	r24, 0x05	; 5
    12a2:	00 f5       	brcc	.+64     	; 0x12e4 <gpioPinWrite+0x44>
	if (value)
    12a4:	66 23       	and	r22, r22
    12a6:	81 f0       	breq	.+32     	; 0x12c8 <gpioPinWrite+0x28>
	{
		GPIO_WritePin(gpio_tbl[ch].port, gpio_tbl[ch].pin, gpio_tbl[ch].on_state);
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	fc 01       	movw	r30, r24
    12ac:	ee 0f       	add	r30, r30
    12ae:	ff 1f       	adc	r31, r31
    12b0:	ee 0f       	add	r30, r30
    12b2:	ff 1f       	adc	r31, r31
    12b4:	8e 0f       	add	r24, r30
    12b6:	9f 1f       	adc	r25, r31
    12b8:	fc 01       	movw	r30, r24
    12ba:	e0 50       	subi	r30, 0x00	; 0
    12bc:	ff 4f       	sbci	r31, 0xFF	; 255
    12be:	43 81       	ldd	r20, Z+3	; 0x03
    12c0:	61 81       	ldd	r22, Z+1	; 0x01
    12c2:	80 81       	ld	r24, Z
    12c4:	37 c1       	rjmp	.+622    	; 0x1534 <GPIO_WritePin>
    12c6:	08 95       	ret
	}
	else
	{
		GPIO_WritePin(gpio_tbl[ch].port, gpio_tbl[ch].pin, gpio_tbl[ch].off_state);
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	fc 01       	movw	r30, r24
    12cc:	ee 0f       	add	r30, r30
    12ce:	ff 1f       	adc	r31, r31
    12d0:	ee 0f       	add	r30, r30
    12d2:	ff 1f       	adc	r31, r31
    12d4:	e8 0f       	add	r30, r24
    12d6:	f9 1f       	adc	r31, r25
    12d8:	e0 50       	subi	r30, 0x00	; 0
    12da:	ff 4f       	sbci	r31, 0xFF	; 255
    12dc:	44 81       	ldd	r20, Z+4	; 0x04
    12de:	61 81       	ldd	r22, Z+1	; 0x01
    12e0:	80 81       	ld	r24, Z
    12e2:	28 c1       	rjmp	.+592    	; 0x1534 <GPIO_WritePin>
    12e4:	08 95       	ret

000012e6 <pwmInit>:

pwm_t pwm_tbl[PWM_MAX_CH];


bool pwmInit(void)
{
    12e6:	ed ef       	ldi	r30, 0xFD	; 253
    12e8:	f3 e0       	ldi	r31, 0x03	; 3
    12ea:	81 e2       	ldi	r24, 0x21	; 33
    12ec:	94 e0       	ldi	r25, 0x04	; 4
	bool ret = true;
	
	for (int i = 0; i < PWM_MAX_CH; i++)
	{
		pwm_tbl[i].is_open		= false;
    12ee:	10 82       	st	Z, r1
		pwm_tbl[i].h_tim8		= NULL;
    12f0:	12 82       	std	Z+2, r1	; 0x02
    12f2:	11 82       	std	Z+1, r1	; 0x01
		pwm_tbl[i].h_tim16		= NULL;
    12f4:	14 82       	std	Z+4, r1	; 0x04
    12f6:	13 82       	std	Z+3, r1	; 0x03
		pwm_tbl[i].h_tim8_pwm	= NULL;
    12f8:	16 82       	std	Z+6, r1	; 0x06
    12fa:	15 82       	std	Z+5, r1	; 0x05
		pwm_tbl[i].h_tim16_pwm	= NULL;
    12fc:	10 86       	std	Z+8, r1	; 0x08
    12fe:	17 82       	std	Z+7, r1	; 0x07
    1300:	39 96       	adiw	r30, 0x09	; 9

bool pwmInit(void)
{
	bool ret = true;
	
	for (int i = 0; i < PWM_MAX_CH; i++)
    1302:	e8 17       	cp	r30, r24
    1304:	f9 07       	cpc	r31, r25
    1306:	99 f7       	brne	.-26     	; 0x12ee <pwmInit+0x8>
		pwm_tbl[i].h_tim8_pwm	= NULL;
		pwm_tbl[i].h_tim16_pwm	= NULL;
	}
	
	return ret;
}
    1308:	81 e0       	ldi	r24, 0x01	; 1
    130a:	08 95       	ret

0000130c <uartInit>:
		case _DEF_UART1:
		baud = huart2.Init.BaudRate;
		break;
	}
	return baud;
}
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	08 95       	ret

00001310 <uartOpen>:
    1310:	88 23       	and	r24, r24
    1312:	19 f0       	breq	.+6      	; 0x131a <uartOpen+0xa>
    1314:	81 30       	cpi	r24, 0x01	; 1
    1316:	41 f1       	breq	.+80     	; 0x1368 <uartOpen+0x58>
    1318:	4f c0       	rjmp	.+158    	; 0x13b8 <uartOpen+0xa8>
    131a:	e9 e3       	ldi	r30, 0x39	; 57
    131c:	f4 e0       	ldi	r31, 0x04	; 4
    131e:	10 82       	st	Z, r1
    1320:	41 83       	std	Z+1, r20	; 0x01
    1322:	52 83       	std	Z+2, r21	; 0x02
    1324:	63 83       	std	Z+3, r22	; 0x03
    1326:	74 83       	std	Z+4, r23	; 0x04
    1328:	16 82       	std	Z+6, r1	; 0x06
    132a:	17 82       	std	Z+7, r1	; 0x07
    132c:	15 82       	std	Z+5, r1	; 0x05
    132e:	82 e0       	ldi	r24, 0x02	; 2
    1330:	80 87       	std	Z+8, r24	; 0x08
    1332:	11 86       	std	Z+9, r1	; 0x09
    1334:	20 e0       	ldi	r18, 0x00	; 0
    1336:	31 e0       	ldi	r19, 0x01	; 1
    1338:	40 e0       	ldi	r20, 0x00	; 0
    133a:	50 e0       	ldi	r21, 0x00	; 0
    133c:	6b e3       	ldi	r22, 0x3B	; 59
    133e:	72 e0       	ldi	r23, 0x02	; 2
    1340:	8b e3       	ldi	r24, 0x3B	; 59
    1342:	93 e0       	ldi	r25, 0x03	; 3
    1344:	a4 d9       	rcall	.-3256   	; 0x68e <qbufferCreate>
    1346:	89 e3       	ldi	r24, 0x39	; 57
    1348:	94 e0       	ldi	r25, 0x04	; 4
    134a:	55 d4       	rcall	.+2218   	; 0x1bf6 <UART_Init>
    134c:	81 11       	cpse	r24, r1
    134e:	36 c0       	rjmp	.+108    	; 0x13bc <uartOpen+0xac>
    1350:	41 e0       	ldi	r20, 0x01	; 1
    1352:	50 e0       	ldi	r21, 0x00	; 0
    1354:	69 e3       	ldi	r22, 0x39	; 57
    1356:	72 e0       	ldi	r23, 0x02	; 2
    1358:	89 e3       	ldi	r24, 0x39	; 57
    135a:	94 e0       	ldi	r25, 0x04	; 4
    135c:	1e d7       	rcall	.+3644   	; 0x219a <UART_Receive_IT>
    135e:	91 e0       	ldi	r25, 0x01	; 1
    1360:	88 23       	and	r24, r24
    1362:	79 f1       	breq	.+94     	; 0x13c2 <uartOpen+0xb2>
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	2d c0       	rjmp	.+90     	; 0x13c2 <uartOpen+0xb2>
    1368:	e0 e5       	ldi	r30, 0x50	; 80
    136a:	f4 e0       	ldi	r31, 0x04	; 4
    136c:	81 e0       	ldi	r24, 0x01	; 1
    136e:	80 83       	st	Z, r24
    1370:	41 83       	std	Z+1, r20	; 0x01
    1372:	52 83       	std	Z+2, r21	; 0x02
    1374:	63 83       	std	Z+3, r22	; 0x03
    1376:	74 83       	std	Z+4, r23	; 0x04
    1378:	16 82       	std	Z+6, r1	; 0x06
    137a:	17 82       	std	Z+7, r1	; 0x07
    137c:	15 82       	std	Z+5, r1	; 0x05
    137e:	82 e0       	ldi	r24, 0x02	; 2
    1380:	80 87       	std	Z+8, r24	; 0x08
    1382:	11 86       	std	Z+9, r1	; 0x09
    1384:	20 e0       	ldi	r18, 0x00	; 0
    1386:	31 e0       	ldi	r19, 0x01	; 1
    1388:	40 e0       	ldi	r20, 0x00	; 0
    138a:	50 e0       	ldi	r21, 0x00	; 0
    138c:	6b e3       	ldi	r22, 0x3B	; 59
    138e:	72 e0       	ldi	r23, 0x02	; 2
    1390:	89 e4       	ldi	r24, 0x49	; 73
    1392:	93 e0       	ldi	r25, 0x03	; 3
    1394:	7c d9       	rcall	.-3336   	; 0x68e <qbufferCreate>
    1396:	80 e5       	ldi	r24, 0x50	; 80
    1398:	94 e0       	ldi	r25, 0x04	; 4
    139a:	2d d4       	rcall	.+2138   	; 0x1bf6 <UART_Init>
    139c:	81 11       	cpse	r24, r1
    139e:	10 c0       	rjmp	.+32     	; 0x13c0 <uartOpen+0xb0>
    13a0:	41 e0       	ldi	r20, 0x01	; 1
    13a2:	50 e0       	ldi	r21, 0x00	; 0
    13a4:	6a e3       	ldi	r22, 0x3A	; 58
    13a6:	72 e0       	ldi	r23, 0x02	; 2
    13a8:	80 e5       	ldi	r24, 0x50	; 80
    13aa:	94 e0       	ldi	r25, 0x04	; 4
    13ac:	f6 d6       	rcall	.+3564   	; 0x219a <UART_Receive_IT>
    13ae:	91 e0       	ldi	r25, 0x01	; 1
    13b0:	88 23       	and	r24, r24
    13b2:	39 f0       	breq	.+14     	; 0x13c2 <uartOpen+0xb2>
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	05 c0       	rjmp	.+10     	; 0x13c2 <uartOpen+0xb2>
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	03 c0       	rjmp	.+6      	; 0x13c2 <uartOpen+0xb2>
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	01 c0       	rjmp	.+2      	; 0x13c2 <uartOpen+0xb2>
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	89 2f       	mov	r24, r25
    13c4:	08 95       	ret

000013c6 <uartWrite>:
    13c6:	cf 92       	push	r12
    13c8:	df 92       	push	r13
    13ca:	ef 92       	push	r14
    13cc:	ff 92       	push	r15
    13ce:	0f 93       	push	r16
    13d0:	1f 93       	push	r17
    13d2:	69 01       	movw	r12, r18
    13d4:	7a 01       	movw	r14, r20
    13d6:	88 23       	and	r24, r24
    13d8:	19 f0       	breq	.+6      	; 0x13e0 <uartWrite+0x1a>
    13da:	81 30       	cpi	r24, 0x01	; 1
    13dc:	61 f0       	breq	.+24     	; 0x13f6 <uartWrite+0x30>
    13de:	16 c0       	rjmp	.+44     	; 0x140c <uartWrite+0x46>
    13e0:	04 e6       	ldi	r16, 0x64	; 100
    13e2:	10 e0       	ldi	r17, 0x00	; 0
    13e4:	20 e0       	ldi	r18, 0x00	; 0
    13e6:	30 e0       	ldi	r19, 0x00	; 0
    13e8:	a6 01       	movw	r20, r12
    13ea:	89 e3       	ldi	r24, 0x39	; 57
    13ec:	94 e0       	ldi	r25, 0x04	; 4
    13ee:	00 d6       	rcall	.+3072   	; 0x1ff0 <UART_Transmit>
    13f0:	81 11       	cpse	r24, r1
    13f2:	10 c0       	rjmp	.+32     	; 0x1414 <uartWrite+0x4e>
    13f4:	16 c0       	rjmp	.+44     	; 0x1422 <uartWrite+0x5c>
    13f6:	04 e6       	ldi	r16, 0x64	; 100
    13f8:	10 e0       	ldi	r17, 0x00	; 0
    13fa:	20 e0       	ldi	r18, 0x00	; 0
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	a6 01       	movw	r20, r12
    1400:	80 e5       	ldi	r24, 0x50	; 80
    1402:	94 e0       	ldi	r25, 0x04	; 4
    1404:	f5 d5       	rcall	.+3050   	; 0x1ff0 <UART_Transmit>
    1406:	88 23       	and	r24, r24
    1408:	61 f0       	breq	.+24     	; 0x1422 <uartWrite+0x5c>
    140a:	08 c0       	rjmp	.+16     	; 0x141c <uartWrite+0x56>
    140c:	c1 2c       	mov	r12, r1
    140e:	d1 2c       	mov	r13, r1
    1410:	76 01       	movw	r14, r12
    1412:	07 c0       	rjmp	.+14     	; 0x1422 <uartWrite+0x5c>
    1414:	c1 2c       	mov	r12, r1
    1416:	d1 2c       	mov	r13, r1
    1418:	76 01       	movw	r14, r12
    141a:	03 c0       	rjmp	.+6      	; 0x1422 <uartWrite+0x5c>
    141c:	c1 2c       	mov	r12, r1
    141e:	d1 2c       	mov	r13, r1
    1420:	76 01       	movw	r14, r12
    1422:	c7 01       	movw	r24, r14
    1424:	b6 01       	movw	r22, r12
    1426:	1f 91       	pop	r17
    1428:	0f 91       	pop	r16
    142a:	ff 90       	pop	r15
    142c:	ef 90       	pop	r14
    142e:	df 90       	pop	r13
    1430:	cf 90       	pop	r12
    1432:	08 95       	ret

00001434 <uartPrintf>:
    1434:	cf 93       	push	r28
    1436:	df 93       	push	r29
    1438:	cd b7       	in	r28, 0x3d	; 61
    143a:	de b7       	in	r29, 0x3e	; 62
    143c:	da 95       	dec	r29
    143e:	0f b6       	in	r0, 0x3f	; 63
    1440:	f8 94       	cli
    1442:	de bf       	out	0x3e, r29	; 62
    1444:	0f be       	out	0x3f, r0	; 63
    1446:	cd bf       	out	0x3d, r28	; 61
    1448:	9e 01       	movw	r18, r28
    144a:	28 5f       	subi	r18, 0xF8	; 248
    144c:	3e 4f       	sbci	r19, 0xFE	; 254
    144e:	ca 5f       	subi	r28, 0xFA	; 250
    1450:	de 4f       	sbci	r29, 0xFE	; 254
    1452:	48 81       	ld	r20, Y
    1454:	59 81       	ldd	r21, Y+1	; 0x01
    1456:	c6 50       	subi	r28, 0x06	; 6
    1458:	d1 40       	sbci	r29, 0x01	; 1
    145a:	60 e0       	ldi	r22, 0x00	; 0
    145c:	71 e0       	ldi	r23, 0x01	; 1
    145e:	ce 01       	movw	r24, r28
    1460:	01 96       	adiw	r24, 0x01	; 1
    1462:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <vsnprintf>
    1466:	9c 01       	movw	r18, r24
    1468:	99 0f       	add	r25, r25
    146a:	44 0b       	sbc	r20, r20
    146c:	55 0b       	sbc	r21, r21
    146e:	be 01       	movw	r22, r28
    1470:	6f 5f       	subi	r22, 0xFF	; 255
    1472:	7f 4f       	sbci	r23, 0xFF	; 255
    1474:	cb 5f       	subi	r28, 0xFB	; 251
    1476:	de 4f       	sbci	r29, 0xFE	; 254
    1478:	88 81       	ld	r24, Y
    147a:	c5 50       	subi	r28, 0x05	; 5
    147c:	d1 40       	sbci	r29, 0x01	; 1
    147e:	a3 df       	rcall	.-186    	; 0x13c6 <uartWrite>
    1480:	d3 95       	inc	r29
    1482:	0f b6       	in	r0, 0x3f	; 63
    1484:	f8 94       	cli
    1486:	de bf       	out	0x3e, r29	; 62
    1488:	0f be       	out	0x3f, r0	; 63
    148a:	cd bf       	out	0x3d, r28	; 61
    148c:	df 91       	pop	r29
    148e:	cf 91       	pop	r28
    1490:	08 95       	ret

00001492 <UART_TxCpltCallback>:


void UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
    1492:	08 95       	ret

00001494 <UART_RxCpltCallback>:
	return;
}

void UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	switch(huart->USARTn)
    1494:	fc 01       	movw	r30, r24
    1496:	20 81       	ld	r18, Z
    1498:	21 11       	cpse	r18, r1
    149a:	09 c0       	rjmp	.+18     	; 0x14ae <UART_RxCpltCallback+0x1a>
	{
		case USART0:
		qbufferWrite(&qbuffer[_DEF_UART0], huart->pRxBuffPtr, huart->RxXferSize);
    149c:	20 89       	ldd	r18, Z+16	; 0x10
    149e:	31 89       	ldd	r19, Z+17	; 0x11
    14a0:	40 e0       	ldi	r20, 0x00	; 0
    14a2:	50 e0       	ldi	r21, 0x00	; 0
    14a4:	64 85       	ldd	r22, Z+12	; 0x0c
    14a6:	75 85       	ldd	r23, Z+13	; 0x0d
    14a8:	8b e3       	ldi	r24, 0x3B	; 59
    14aa:	93 e0       	ldi	r25, 0x03	; 3
    14ac:	01 c9       	rjmp	.-3582   	; 0x6b0 <qbufferWrite>
    14ae:	08 95       	ret

000014b0 <hwInit>:
ï»¿#include "hw.h"

void hwInit(void)
{
	bspInit();
    14b0:	ed d8       	rcall	.-3622   	; 0x68c <bspInit>
	gpioInit();
    14b2:	e2 de       	rcall	.-572    	; 0x1278 <gpioInit>
	uartInit();
    14b4:	2b df       	rcall	.-426    	; 0x130c <uartInit>
	//timerInit();
	//a4988Init();
	ctcInit();
    14b6:	a2 d9       	rcall	.-3260   	; 0x7fc <ctcInit>
    14b8:	16 df       	rcall	.-468    	; 0x12e6 <pwmInit>
	pwmInit();
    14ba:	1f cd       	rjmp	.-1474   	; 0xefa <motorInit>
    14bc:	08 95       	ret

000014be <GPIO_Init>:
	motorInit();
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	db 01       	movw	r26, r22
    14c2:	11 96       	adiw	r26, 0x01	; 1
	GPIO_PinState ret = 0x00;
	GPIO_TypeDef *gpio = &GPIO_descripter[port];

	ret = READB(*(gpio->PINn), pin);
	return ret;
}
    14c4:	2c 91       	ld	r18, X
    14c6:	11 97       	sbiw	r26, 0x01	; 1
    14c8:	21 11       	cpse	r18, r1
    14ca:	19 c0       	rjmp	.+50     	; 0x14fe <GPIO_Init+0x40>
    14cc:	fc 01       	movw	r30, r24
    14ce:	ee 0f       	add	r30, r30
    14d0:	ff 1f       	adc	r31, r31
    14d2:	e8 0f       	add	r30, r24
    14d4:	f9 1f       	adc	r31, r25
    14d6:	ee 0f       	add	r30, r30
    14d8:	ff 1f       	adc	r31, r31
    14da:	e7 5e       	subi	r30, 0xE7	; 231
    14dc:	fe 4f       	sbci	r31, 0xFE	; 254
    14de:	01 90       	ld	r0, Z+
    14e0:	f0 81       	ld	r31, Z
    14e2:	e0 2d       	mov	r30, r0
    14e4:	20 81       	ld	r18, Z
    14e6:	81 e0       	ldi	r24, 0x01	; 1
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	0c 90       	ld	r0, X
    14ec:	02 c0       	rjmp	.+4      	; 0x14f2 <GPIO_Init+0x34>
    14ee:	88 0f       	add	r24, r24
    14f0:	99 1f       	adc	r25, r25
    14f2:	0a 94       	dec	r0
    14f4:	e2 f7       	brpl	.-8      	; 0x14ee <GPIO_Init+0x30>
    14f6:	80 95       	com	r24
    14f8:	82 23       	and	r24, r18
    14fa:	80 83       	st	Z, r24
    14fc:	08 95       	ret
    14fe:	21 30       	cpi	r18, 0x01	; 1
    1500:	c1 f4       	brne	.+48     	; 0x1532 <GPIO_Init+0x74>
    1502:	fc 01       	movw	r30, r24
    1504:	ee 0f       	add	r30, r30
    1506:	ff 1f       	adc	r31, r31
    1508:	e8 0f       	add	r30, r24
    150a:	f9 1f       	adc	r31, r25
    150c:	ee 0f       	add	r30, r30
    150e:	ff 1f       	adc	r31, r31
    1510:	e7 5e       	subi	r30, 0xE7	; 231
    1512:	fe 4f       	sbci	r31, 0xFE	; 254
    1514:	01 90       	ld	r0, Z+
    1516:	f0 81       	ld	r31, Z
    1518:	e0 2d       	mov	r30, r0
    151a:	20 81       	ld	r18, Z
    151c:	81 e0       	ldi	r24, 0x01	; 1
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	db 01       	movw	r26, r22
    1522:	0c 90       	ld	r0, X
    1524:	02 c0       	rjmp	.+4      	; 0x152a <GPIO_Init+0x6c>
    1526:	88 0f       	add	r24, r24
    1528:	99 1f       	adc	r25, r25
    152a:	0a 94       	dec	r0
    152c:	e2 f7       	brpl	.-8      	; 0x1526 <GPIO_Init+0x68>
    152e:	82 2b       	or	r24, r18
    1530:	80 83       	st	Z, r24
    1532:	08 95       	ret

00001534 <GPIO_WritePin>:

void GPIO_WritePin(uint8_t port, uint8_t pin, GPIO_PinState pinState)
{
	GPIO_TypeDef *gpio = &GPIO_descripter[port];
    1534:	90 e0       	ldi	r25, 0x00	; 0
	
	if(pinState == PIN_RESET)
    1536:	41 11       	cpse	r20, r1
    1538:	18 c0       	rjmp	.+48     	; 0x156a <GPIO_WritePin+0x36>
	{
		CLRB(*(gpio->PORTn), pin);
    153a:	fc 01       	movw	r30, r24
    153c:	ee 0f       	add	r30, r30
    153e:	ff 1f       	adc	r31, r31
    1540:	e8 0f       	add	r30, r24
    1542:	f9 1f       	adc	r31, r25
    1544:	ee 0f       	add	r30, r30
    1546:	ff 1f       	adc	r31, r31
    1548:	e7 5e       	subi	r30, 0xE7	; 231
    154a:	fe 4f       	sbci	r31, 0xFE	; 254
    154c:	02 80       	ldd	r0, Z+2	; 0x02
    154e:	f3 81       	ldd	r31, Z+3	; 0x03
    1550:	e0 2d       	mov	r30, r0
    1552:	20 81       	ld	r18, Z
    1554:	81 e0       	ldi	r24, 0x01	; 1
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	02 c0       	rjmp	.+4      	; 0x155e <GPIO_WritePin+0x2a>
    155a:	88 0f       	add	r24, r24
    155c:	99 1f       	adc	r25, r25
    155e:	6a 95       	dec	r22
    1560:	e2 f7       	brpl	.-8      	; 0x155a <GPIO_WritePin+0x26>
    1562:	80 95       	com	r24
    1564:	82 23       	and	r24, r18
    1566:	80 83       	st	Z, r24
    1568:	08 95       	ret
	}
	else if(pinState == PIN_SET)
    156a:	41 30       	cpi	r20, 0x01	; 1
    156c:	b1 f4       	brne	.+44     	; 0x159a <GPIO_WritePin+0x66>
	{
		SETB(*(gpio->PORTn), pin);
    156e:	fc 01       	movw	r30, r24
    1570:	ee 0f       	add	r30, r30
    1572:	ff 1f       	adc	r31, r31
    1574:	e8 0f       	add	r30, r24
    1576:	f9 1f       	adc	r31, r25
    1578:	ee 0f       	add	r30, r30
    157a:	ff 1f       	adc	r31, r31
    157c:	e7 5e       	subi	r30, 0xE7	; 231
    157e:	fe 4f       	sbci	r31, 0xFE	; 254
    1580:	02 80       	ldd	r0, Z+2	; 0x02
    1582:	f3 81       	ldd	r31, Z+3	; 0x03
    1584:	e0 2d       	mov	r30, r0
    1586:	20 81       	ld	r18, Z
    1588:	81 e0       	ldi	r24, 0x01	; 1
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	02 c0       	rjmp	.+4      	; 0x1592 <GPIO_WritePin+0x5e>
    158e:	88 0f       	add	r24, r24
    1590:	99 1f       	adc	r25, r25
    1592:	6a 95       	dec	r22
    1594:	e2 f7       	brpl	.-8      	; 0x158e <GPIO_WritePin+0x5a>
    1596:	82 2b       	or	r24, r18
    1598:	80 83       	st	Z, r24
    159a:	08 95       	ret

0000159c <TIM8_Base_Init>:
{
	TIM2_OVF_ElapsedCallback(htim);
}
void TIM3_OVF_IRQHandler(TIM16_HandleTypeDef *htim)
{
	TIM3_OVF_ElapsedCallback(htim);
    159c:	fc 01       	movw	r30, r24
    159e:	80 81       	ld	r24, Z
    15a0:	88 23       	and	r24, r24
    15a2:	09 f4       	brne	.+2      	; 0x15a6 <TIM8_Base_Init+0xa>
    15a4:	48 c0       	rjmp	.+144    	; 0x1636 <TIM8_Base_Init+0x9a>
    15a6:	82 30       	cpi	r24, 0x02	; 2
    15a8:	e9 f1       	breq	.+122    	; 0x1624 <TIM8_Base_Init+0x88>
    15aa:	38 c0       	rjmp	.+112    	; 0x161c <TIM8_Base_Init+0x80>
    15ac:	81 81       	ldd	r24, Z+1	; 0x01
    15ae:	81 30       	cpi	r24, 0x01	; 1
    15b0:	19 f0       	breq	.+6      	; 0x15b8 <TIM8_Base_Init+0x1c>
    15b2:	82 30       	cpi	r24, 0x02	; 2
    15b4:	d1 f0       	breq	.+52     	; 0x15ea <TIM8_Base_Init+0x4e>
    15b6:	34 c0       	rjmp	.+104    	; 0x1620 <TIM8_Base_Init+0x84>
    15b8:	ef e6       	ldi	r30, 0x6F	; 111
    15ba:	f1 e0       	ldi	r31, 0x01	; 1
    15bc:	a0 85       	ldd	r26, Z+8	; 0x08
    15be:	b1 85       	ldd	r27, Z+9	; 0x09
    15c0:	8c 91       	ld	r24, X
    15c2:	88 7f       	andi	r24, 0xF8	; 248
    15c4:	8c 93       	st	X, r24
    15c6:	a0 85       	ldd	r26, Z+8	; 0x08
    15c8:	b1 85       	ldd	r27, Z+9	; 0x09
    15ca:	8c 91       	ld	r24, X
    15cc:	84 60       	ori	r24, 0x04	; 4
    15ce:	8c 93       	st	X, r24
    15d0:	a0 85       	ldd	r26, Z+8	; 0x08
    15d2:	b1 85       	ldd	r27, Z+9	; 0x09
    15d4:	8c 91       	ld	r24, X
    15d6:	82 60       	ori	r24, 0x02	; 2
    15d8:	8c 93       	st	X, r24
    15da:	00 84       	ldd	r0, Z+8	; 0x08
    15dc:	f1 85       	ldd	r31, Z+9	; 0x09
    15de:	e0 2d       	mov	r30, r0
    15e0:	80 81       	ld	r24, Z
    15e2:	8e 7f       	andi	r24, 0xFE	; 254
    15e4:	80 83       	st	Z, r24
    15e6:	80 e0       	ldi	r24, 0x00	; 0
    15e8:	08 95       	ret
    15ea:	ef e6       	ldi	r30, 0x6F	; 111
    15ec:	f1 e0       	ldi	r31, 0x01	; 1
    15ee:	a0 85       	ldd	r26, Z+8	; 0x08
    15f0:	b1 85       	ldd	r27, Z+9	; 0x09
    15f2:	8c 91       	ld	r24, X
    15f4:	88 7f       	andi	r24, 0xF8	; 248
    15f6:	8c 93       	st	X, r24
    15f8:	a0 85       	ldd	r26, Z+8	; 0x08
    15fa:	b1 85       	ldd	r27, Z+9	; 0x09
    15fc:	8c 91       	ld	r24, X
    15fe:	84 60       	ori	r24, 0x04	; 4
    1600:	8c 93       	st	X, r24
    1602:	a0 85       	ldd	r26, Z+8	; 0x08
    1604:	b1 85       	ldd	r27, Z+9	; 0x09
    1606:	8c 91       	ld	r24, X
    1608:	82 60       	ori	r24, 0x02	; 2
    160a:	8c 93       	st	X, r24
    160c:	00 84       	ldd	r0, Z+8	; 0x08
    160e:	f1 85       	ldd	r31, Z+9	; 0x09
    1610:	e0 2d       	mov	r30, r0
    1612:	80 81       	ld	r24, Z
    1614:	81 60       	ori	r24, 0x01	; 1
    1616:	80 83       	st	Z, r24
    1618:	80 e0       	ldi	r24, 0x00	; 0
    161a:	08 95       	ret
    161c:	81 e0       	ldi	r24, 0x01	; 1
    161e:	08 95       	ret
    1620:	80 e0       	ldi	r24, 0x00	; 0
    1622:	08 95       	ret
    1624:	27 e7       	ldi	r18, 0x77	; 119
    1626:	31 e0       	ldi	r19, 0x01	; 1
    1628:	35 83       	std	Z+5, r19	; 0x05
    162a:	24 83       	std	Z+4, r18	; 0x04
    162c:	82 30       	cpi	r24, 0x02	; 2
    162e:	09 f4       	brne	.+2      	; 0x1632 <TIM8_Base_Init+0x96>
    1630:	bd cf       	rjmp	.-134    	; 0x15ac <TIM8_Base_Init+0x10>
    1632:	80 e0       	ldi	r24, 0x00	; 0
    1634:	08 95       	ret
    1636:	8f e6       	ldi	r24, 0x6F	; 111
    1638:	91 e0       	ldi	r25, 0x01	; 1
    163a:	95 83       	std	Z+5, r25	; 0x05
    163c:	84 83       	std	Z+4, r24	; 0x04
    163e:	80 e0       	ldi	r24, 0x00	; 0
    1640:	08 95       	ret

00001642 <TIM8_OC_Init>:
    1642:	0f 93       	push	r16
    1644:	1f 93       	push	r17
    1646:	cf 93       	push	r28
    1648:	df 93       	push	r29
    164a:	dc 01       	movw	r26, r24
    164c:	2c 91       	ld	r18, X
    164e:	22 23       	and	r18, r18
    1650:	09 f4       	brne	.+2      	; 0x1654 <TIM8_OC_Init+0x12>
    1652:	7f c0       	rjmp	.+254    	; 0x1752 <TIM8_OC_Init+0x110>
    1654:	22 30       	cpi	r18, 0x02	; 2
    1656:	09 f0       	breq	.+2      	; 0x165a <TIM8_OC_Init+0x18>
    1658:	7a c0       	rjmp	.+244    	; 0x174e <TIM8_OC_Init+0x10c>
    165a:	07 e7       	ldi	r16, 0x77	; 119
    165c:	11 e0       	ldi	r17, 0x01	; 1
    165e:	7b c0       	rjmp	.+246    	; 0x1756 <TIM8_OC_Init+0x114>
    1660:	d8 01       	movw	r26, r16
    1662:	ed 91       	ld	r30, X+
    1664:	fc 91       	ld	r31, X
    1666:	11 97       	sbiw	r26, 0x01	; 1
    1668:	80 81       	ld	r24, Z
    166a:	8f 7b       	andi	r24, 0xBF	; 191
    166c:	80 83       	st	Z, r24
    166e:	ed 91       	ld	r30, X+
    1670:	fc 91       	ld	r31, X
    1672:	80 81       	ld	r24, Z
    1674:	87 7f       	andi	r24, 0xF7	; 247
    1676:	80 83       	st	Z, r24
    1678:	0c c0       	rjmp	.+24     	; 0x1692 <TIM8_OC_Init+0x50>
    167a:	d8 01       	movw	r26, r16
    167c:	ed 91       	ld	r30, X+
    167e:	fc 91       	ld	r31, X
    1680:	11 97       	sbiw	r26, 0x01	; 1
    1682:	80 81       	ld	r24, Z
    1684:	8f 7b       	andi	r24, 0xBF	; 191
    1686:	80 83       	st	Z, r24
    1688:	ed 91       	ld	r30, X+
    168a:	fc 91       	ld	r31, X
    168c:	80 81       	ld	r24, Z
    168e:	88 60       	ori	r24, 0x08	; 8
    1690:	80 83       	st	Z, r24
    1692:	89 81       	ldd	r24, Y+1	; 0x01
    1694:	88 23       	and	r24, r24
    1696:	19 f0       	breq	.+6      	; 0x169e <TIM8_OC_Init+0x5c>
    1698:	81 30       	cpi	r24, 0x01	; 1
    169a:	41 f0       	breq	.+16     	; 0x16ac <TIM8_OC_Init+0x6a>
    169c:	0d c0       	rjmp	.+26     	; 0x16b8 <TIM8_OC_Init+0x76>
    169e:	d8 01       	movw	r26, r16
    16a0:	ed 91       	ld	r30, X+
    16a2:	fc 91       	ld	r31, X
    16a4:	80 81       	ld	r24, Z
    16a6:	8f 77       	andi	r24, 0x7F	; 127
    16a8:	80 83       	st	Z, r24
    16aa:	06 c0       	rjmp	.+12     	; 0x16b8 <TIM8_OC_Init+0x76>
    16ac:	d8 01       	movw	r26, r16
    16ae:	ed 91       	ld	r30, X+
    16b0:	fc 91       	ld	r31, X
    16b2:	80 81       	ld	r24, Z
    16b4:	80 68       	ori	r24, 0x80	; 128
    16b6:	80 83       	st	Z, r24
    16b8:	8a 81       	ldd	r24, Y+2	; 0x02
    16ba:	81 30       	cpi	r24, 0x01	; 1
    16bc:	99 f0       	breq	.+38     	; 0x16e4 <TIM8_OC_Init+0xa2>
    16be:	28 f0       	brcs	.+10     	; 0x16ca <TIM8_OC_Init+0x88>
    16c0:	82 30       	cpi	r24, 0x02	; 2
    16c2:	e9 f0       	breq	.+58     	; 0x16fe <TIM8_OC_Init+0xbc>
    16c4:	83 30       	cpi	r24, 0x03	; 3
    16c6:	41 f1       	breq	.+80     	; 0x1718 <TIM8_OC_Init+0xd6>
    16c8:	33 c0       	rjmp	.+102    	; 0x1730 <TIM8_OC_Init+0xee>
    16ca:	d8 01       	movw	r26, r16
    16cc:	ed 91       	ld	r30, X+
    16ce:	fc 91       	ld	r31, X
    16d0:	11 97       	sbiw	r26, 0x01	; 1
    16d2:	80 81       	ld	r24, Z
    16d4:	8f 7e       	andi	r24, 0xEF	; 239
    16d6:	80 83       	st	Z, r24
    16d8:	ed 91       	ld	r30, X+
    16da:	fc 91       	ld	r31, X
    16dc:	80 81       	ld	r24, Z
    16de:	8f 7d       	andi	r24, 0xDF	; 223
    16e0:	80 83       	st	Z, r24
    16e2:	26 c0       	rjmp	.+76     	; 0x1730 <TIM8_OC_Init+0xee>
    16e4:	d8 01       	movw	r26, r16
    16e6:	ed 91       	ld	r30, X+
    16e8:	fc 91       	ld	r31, X
    16ea:	11 97       	sbiw	r26, 0x01	; 1
    16ec:	80 81       	ld	r24, Z
    16ee:	80 61       	ori	r24, 0x10	; 16
    16f0:	80 83       	st	Z, r24
    16f2:	ed 91       	ld	r30, X+
    16f4:	fc 91       	ld	r31, X
    16f6:	80 81       	ld	r24, Z
    16f8:	8f 7d       	andi	r24, 0xDF	; 223
    16fa:	80 83       	st	Z, r24
    16fc:	19 c0       	rjmp	.+50     	; 0x1730 <TIM8_OC_Init+0xee>
    16fe:	d8 01       	movw	r26, r16
    1700:	ed 91       	ld	r30, X+
    1702:	fc 91       	ld	r31, X
    1704:	11 97       	sbiw	r26, 0x01	; 1
    1706:	80 81       	ld	r24, Z
    1708:	8f 7e       	andi	r24, 0xEF	; 239
    170a:	80 83       	st	Z, r24
    170c:	ed 91       	ld	r30, X+
    170e:	fc 91       	ld	r31, X
    1710:	80 81       	ld	r24, Z
    1712:	80 62       	ori	r24, 0x20	; 32
    1714:	80 83       	st	Z, r24
    1716:	0c c0       	rjmp	.+24     	; 0x1730 <TIM8_OC_Init+0xee>
    1718:	d8 01       	movw	r26, r16
    171a:	ed 91       	ld	r30, X+
    171c:	fc 91       	ld	r31, X
    171e:	11 97       	sbiw	r26, 0x01	; 1
    1720:	80 81       	ld	r24, Z
    1722:	80 61       	ori	r24, 0x10	; 16
    1724:	80 83       	st	Z, r24
    1726:	ed 91       	ld	r30, X+
    1728:	fc 91       	ld	r31, X
    172a:	80 81       	ld	r24, Z
    172c:	80 62       	ori	r24, 0x20	; 32
    172e:	80 83       	st	Z, r24
    1730:	d8 01       	movw	r26, r16
    1732:	14 96       	adiw	r26, 0x04	; 4
    1734:	ed 91       	ld	r30, X+
    1736:	fc 91       	ld	r31, X
    1738:	15 97       	sbiw	r26, 0x05	; 5
    173a:	8c 81       	ldd	r24, Y+4	; 0x04
    173c:	80 83       	st	Z, r24
    173e:	12 96       	adiw	r26, 0x02	; 2
    1740:	ed 91       	ld	r30, X+
    1742:	fc 91       	ld	r31, X
    1744:	13 97       	sbiw	r26, 0x03	; 3
    1746:	8b 81       	ldd	r24, Y+3	; 0x03
    1748:	80 83       	st	Z, r24
    174a:	80 e0       	ldi	r24, 0x00	; 0
    174c:	0e c0       	rjmp	.+28     	; 0x176a <TIM8_OC_Init+0x128>
    174e:	81 e0       	ldi	r24, 0x01	; 1
    1750:	0c c0       	rjmp	.+24     	; 0x176a <TIM8_OC_Init+0x128>
    1752:	0f e6       	ldi	r16, 0x6F	; 111
    1754:	11 e0       	ldi	r17, 0x01	; 1
    1756:	eb 01       	movw	r28, r22
    1758:	21 df       	rcall	.-446    	; 0x159c <TIM8_Base_Init>
    175a:	88 81       	ld	r24, Y
    175c:	88 23       	and	r24, r24
    175e:	09 f4       	brne	.+2      	; 0x1762 <TIM8_OC_Init+0x120>
    1760:	7f cf       	rjmp	.-258    	; 0x1660 <TIM8_OC_Init+0x1e>
    1762:	81 30       	cpi	r24, 0x01	; 1
    1764:	09 f4       	brne	.+2      	; 0x1768 <TIM8_OC_Init+0x126>
    1766:	89 cf       	rjmp	.-238    	; 0x167a <TIM8_OC_Init+0x38>
    1768:	94 cf       	rjmp	.-216    	; 0x1692 <TIM8_OC_Init+0x50>
    176a:	df 91       	pop	r29
    176c:	cf 91       	pop	r28
    176e:	1f 91       	pop	r17
    1770:	0f 91       	pop	r16
    1772:	08 95       	ret

00001774 <TIM8_OC_Stop>:
    1774:	fc 01       	movw	r30, r24
    1776:	80 81       	ld	r24, Z
    1778:	88 23       	and	r24, r24
    177a:	39 f0       	breq	.+14     	; 0x178a <TIM8_OC_Stop+0x16>
    177c:	82 30       	cpi	r24, 0x02	; 2
    177e:	19 f4       	brne	.+6      	; 0x1786 <TIM8_OC_Stop+0x12>
    1780:	e7 e7       	ldi	r30, 0x77	; 119
    1782:	f1 e0       	ldi	r31, 0x01	; 1
    1784:	04 c0       	rjmp	.+8      	; 0x178e <TIM8_OC_Stop+0x1a>
    1786:	81 e0       	ldi	r24, 0x01	; 1
    1788:	08 95       	ret
    178a:	ef e6       	ldi	r30, 0x6F	; 111
    178c:	f1 e0       	ldi	r31, 0x01	; 1
    178e:	01 90       	ld	r0, Z+
    1790:	f0 81       	ld	r31, Z
    1792:	e0 2d       	mov	r30, r0
    1794:	80 81       	ld	r24, Z
    1796:	88 7f       	andi	r24, 0xF8	; 248
    1798:	80 83       	st	Z, r24
    179a:	80 e0       	ldi	r24, 0x00	; 0
    179c:	08 95       	ret

0000179e <TIM16_OC_Stop>:
    179e:	fc 01       	movw	r30, r24
    17a0:	80 81       	ld	r24, Z
    17a2:	81 30       	cpi	r24, 0x01	; 1
    17a4:	39 f0       	breq	.+14     	; 0x17b4 <TIM16_OC_Stop+0x16>
    17a6:	83 30       	cpi	r24, 0x03	; 3
    17a8:	19 f4       	brne	.+6      	; 0x17b0 <TIM16_OC_Stop+0x12>
    17aa:	e9 e5       	ldi	r30, 0x59	; 89
    17ac:	f1 e0       	ldi	r31, 0x01	; 1
    17ae:	04 c0       	rjmp	.+8      	; 0x17b8 <TIM16_OC_Stop+0x1a>
    17b0:	81 e0       	ldi	r24, 0x01	; 1
    17b2:	08 95       	ret
    17b4:	e3 e4       	ldi	r30, 0x43	; 67
    17b6:	f1 e0       	ldi	r31, 0x01	; 1
    17b8:	02 80       	ldd	r0, Z+2	; 0x02
    17ba:	f3 81       	ldd	r31, Z+3	; 0x03
    17bc:	e0 2d       	mov	r30, r0
    17be:	80 81       	ld	r24, Z
    17c0:	88 7f       	andi	r24, 0xF8	; 248
    17c2:	80 83       	st	Z, r24
    17c4:	80 e0       	ldi	r24, 0x00	; 0
    17c6:	08 95       	ret

000017c8 <TIM0_CLK_Configuration>:
    17c8:	dc 01       	movw	r26, r24
    17ca:	12 96       	adiw	r26, 0x02	; 2
    17cc:	ec 91       	ld	r30, X
    17ce:	8e 2f       	mov	r24, r30
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	87 30       	cpi	r24, 0x07	; 7
    17d4:	91 05       	cpc	r25, r1
    17d6:	08 f0       	brcs	.+2      	; 0x17da <TIM0_CLK_Configuration+0x12>
    17d8:	88 c0       	rjmp	.+272    	; 0x18ea <TIM0_CLK_Configuration+0x122>
    17da:	fc 01       	movw	r30, r24
    17dc:	ea 5b       	subi	r30, 0xBA	; 186
    17de:	ff 4f       	sbci	r31, 0xFF	; 255
    17e0:	d3 c6       	rjmp	.+3494   	; 0x2588 <__tablejump2__>
    17e2:	ef e6       	ldi	r30, 0x6F	; 111
    17e4:	f1 e0       	ldi	r31, 0x01	; 1
    17e6:	a0 81       	ld	r26, Z
    17e8:	b1 81       	ldd	r27, Z+1	; 0x01
    17ea:	8c 91       	ld	r24, X
    17ec:	8b 7f       	andi	r24, 0xFB	; 251
    17ee:	8c 93       	st	X, r24
    17f0:	a0 81       	ld	r26, Z
    17f2:	b1 81       	ldd	r27, Z+1	; 0x01
    17f4:	8c 91       	ld	r24, X
    17f6:	8d 7f       	andi	r24, 0xFD	; 253
    17f8:	8c 93       	st	X, r24
    17fa:	01 90       	ld	r0, Z+
    17fc:	f0 81       	ld	r31, Z
    17fe:	e0 2d       	mov	r30, r0
    1800:	80 81       	ld	r24, Z
    1802:	81 60       	ori	r24, 0x01	; 1
    1804:	80 83       	st	Z, r24
    1806:	08 95       	ret
    1808:	ef e6       	ldi	r30, 0x6F	; 111
    180a:	f1 e0       	ldi	r31, 0x01	; 1
    180c:	a0 81       	ld	r26, Z
    180e:	b1 81       	ldd	r27, Z+1	; 0x01
    1810:	8c 91       	ld	r24, X
    1812:	8b 7f       	andi	r24, 0xFB	; 251
    1814:	8c 93       	st	X, r24
    1816:	a0 81       	ld	r26, Z
    1818:	b1 81       	ldd	r27, Z+1	; 0x01
    181a:	8c 91       	ld	r24, X
    181c:	82 60       	ori	r24, 0x02	; 2
    181e:	8c 93       	st	X, r24
    1820:	01 90       	ld	r0, Z+
    1822:	f0 81       	ld	r31, Z
    1824:	e0 2d       	mov	r30, r0
    1826:	80 81       	ld	r24, Z
    1828:	8e 7f       	andi	r24, 0xFE	; 254
    182a:	80 83       	st	Z, r24
    182c:	08 95       	ret
    182e:	ef e6       	ldi	r30, 0x6F	; 111
    1830:	f1 e0       	ldi	r31, 0x01	; 1
    1832:	a0 81       	ld	r26, Z
    1834:	b1 81       	ldd	r27, Z+1	; 0x01
    1836:	8c 91       	ld	r24, X
    1838:	8b 7f       	andi	r24, 0xFB	; 251
    183a:	8c 93       	st	X, r24
    183c:	a0 81       	ld	r26, Z
    183e:	b1 81       	ldd	r27, Z+1	; 0x01
    1840:	8c 91       	ld	r24, X
    1842:	82 60       	ori	r24, 0x02	; 2
    1844:	8c 93       	st	X, r24
    1846:	01 90       	ld	r0, Z+
    1848:	f0 81       	ld	r31, Z
    184a:	e0 2d       	mov	r30, r0
    184c:	80 81       	ld	r24, Z
    184e:	81 60       	ori	r24, 0x01	; 1
    1850:	80 83       	st	Z, r24
    1852:	08 95       	ret
    1854:	ef e6       	ldi	r30, 0x6F	; 111
    1856:	f1 e0       	ldi	r31, 0x01	; 1
    1858:	a0 81       	ld	r26, Z
    185a:	b1 81       	ldd	r27, Z+1	; 0x01
    185c:	8c 91       	ld	r24, X
    185e:	84 60       	ori	r24, 0x04	; 4
    1860:	8c 93       	st	X, r24
    1862:	a0 81       	ld	r26, Z
    1864:	b1 81       	ldd	r27, Z+1	; 0x01
    1866:	8c 91       	ld	r24, X
    1868:	8d 7f       	andi	r24, 0xFD	; 253
    186a:	8c 93       	st	X, r24
    186c:	01 90       	ld	r0, Z+
    186e:	f0 81       	ld	r31, Z
    1870:	e0 2d       	mov	r30, r0
    1872:	80 81       	ld	r24, Z
    1874:	8e 7f       	andi	r24, 0xFE	; 254
    1876:	80 83       	st	Z, r24
    1878:	08 95       	ret
    187a:	ef e6       	ldi	r30, 0x6F	; 111
    187c:	f1 e0       	ldi	r31, 0x01	; 1
    187e:	a0 81       	ld	r26, Z
    1880:	b1 81       	ldd	r27, Z+1	; 0x01
    1882:	8c 91       	ld	r24, X
    1884:	84 60       	ori	r24, 0x04	; 4
    1886:	8c 93       	st	X, r24
    1888:	a0 81       	ld	r26, Z
    188a:	b1 81       	ldd	r27, Z+1	; 0x01
    188c:	8c 91       	ld	r24, X
    188e:	8d 7f       	andi	r24, 0xFD	; 253
    1890:	8c 93       	st	X, r24
    1892:	01 90       	ld	r0, Z+
    1894:	f0 81       	ld	r31, Z
    1896:	e0 2d       	mov	r30, r0
    1898:	80 81       	ld	r24, Z
    189a:	81 60       	ori	r24, 0x01	; 1
    189c:	80 83       	st	Z, r24
    189e:	08 95       	ret
    18a0:	ef e6       	ldi	r30, 0x6F	; 111
    18a2:	f1 e0       	ldi	r31, 0x01	; 1
    18a4:	a0 81       	ld	r26, Z
    18a6:	b1 81       	ldd	r27, Z+1	; 0x01
    18a8:	8c 91       	ld	r24, X
    18aa:	84 60       	ori	r24, 0x04	; 4
    18ac:	8c 93       	st	X, r24
    18ae:	a0 81       	ld	r26, Z
    18b0:	b1 81       	ldd	r27, Z+1	; 0x01
    18b2:	8c 91       	ld	r24, X
    18b4:	82 60       	ori	r24, 0x02	; 2
    18b6:	8c 93       	st	X, r24
    18b8:	01 90       	ld	r0, Z+
    18ba:	f0 81       	ld	r31, Z
    18bc:	e0 2d       	mov	r30, r0
    18be:	80 81       	ld	r24, Z
    18c0:	8e 7f       	andi	r24, 0xFE	; 254
    18c2:	80 83       	st	Z, r24
    18c4:	08 95       	ret
    18c6:	ef e6       	ldi	r30, 0x6F	; 111
    18c8:	f1 e0       	ldi	r31, 0x01	; 1
    18ca:	a0 81       	ld	r26, Z
    18cc:	b1 81       	ldd	r27, Z+1	; 0x01
    18ce:	8c 91       	ld	r24, X
    18d0:	84 60       	ori	r24, 0x04	; 4
    18d2:	8c 93       	st	X, r24
    18d4:	a0 81       	ld	r26, Z
    18d6:	b1 81       	ldd	r27, Z+1	; 0x01
    18d8:	8c 91       	ld	r24, X
    18da:	82 60       	ori	r24, 0x02	; 2
    18dc:	8c 93       	st	X, r24
    18de:	01 90       	ld	r0, Z+
    18e0:	f0 81       	ld	r31, Z
    18e2:	e0 2d       	mov	r30, r0
    18e4:	80 81       	ld	r24, Z
    18e6:	81 60       	ori	r24, 0x01	; 1
    18e8:	80 83       	st	Z, r24
    18ea:	08 95       	ret

000018ec <TIM2_CLK_Configuration>:
    18ec:	e0 91 77 01 	lds	r30, 0x0177	; 0x800177 <TIM8_descripter+0x8>
    18f0:	f0 91 78 01 	lds	r31, 0x0178	; 0x800178 <TIM8_descripter+0x9>
    18f4:	20 81       	ld	r18, Z
    18f6:	20 81       	ld	r18, Z
    18f8:	dc 01       	movw	r26, r24
    18fa:	12 96       	adiw	r26, 0x02	; 2
    18fc:	8c 91       	ld	r24, X
    18fe:	83 30       	cpi	r24, 0x03	; 3
    1900:	71 f1       	breq	.+92     	; 0x195e <TIM2_CLK_Configuration+0x72>
    1902:	28 f4       	brcc	.+10     	; 0x190e <TIM2_CLK_Configuration+0x22>
    1904:	88 23       	and	r24, r24
    1906:	49 f0       	breq	.+18     	; 0x191a <TIM2_CLK_Configuration+0x2e>
    1908:	81 30       	cpi	r24, 0x01	; 1
    190a:	c1 f0       	breq	.+48     	; 0x193c <TIM2_CLK_Configuration+0x50>
    190c:	08 95       	ret
    190e:	85 30       	cpi	r24, 0x05	; 5
    1910:	b9 f1       	breq	.+110    	; 0x1980 <TIM2_CLK_Configuration+0x94>
    1912:	86 30       	cpi	r24, 0x06	; 6
    1914:	09 f4       	brne	.+2      	; 0x1918 <TIM2_CLK_Configuration+0x2c>
    1916:	45 c0       	rjmp	.+138    	; 0x19a2 <TIM2_CLK_Configuration+0xb6>
    1918:	08 95       	ret
    191a:	80 81       	ld	r24, Z
    191c:	8b 7f       	andi	r24, 0xFB	; 251
    191e:	80 83       	st	Z, r24
    1920:	ef e6       	ldi	r30, 0x6F	; 111
    1922:	f1 e0       	ldi	r31, 0x01	; 1
    1924:	a0 85       	ldd	r26, Z+8	; 0x08
    1926:	b1 85       	ldd	r27, Z+9	; 0x09
    1928:	8c 91       	ld	r24, X
    192a:	8d 7f       	andi	r24, 0xFD	; 253
    192c:	8c 93       	st	X, r24
    192e:	00 84       	ldd	r0, Z+8	; 0x08
    1930:	f1 85       	ldd	r31, Z+9	; 0x09
    1932:	e0 2d       	mov	r30, r0
    1934:	80 81       	ld	r24, Z
    1936:	81 60       	ori	r24, 0x01	; 1
    1938:	80 83       	st	Z, r24
    193a:	08 95       	ret
    193c:	80 81       	ld	r24, Z
    193e:	8b 7f       	andi	r24, 0xFB	; 251
    1940:	80 83       	st	Z, r24
    1942:	ef e6       	ldi	r30, 0x6F	; 111
    1944:	f1 e0       	ldi	r31, 0x01	; 1
    1946:	a0 85       	ldd	r26, Z+8	; 0x08
    1948:	b1 85       	ldd	r27, Z+9	; 0x09
    194a:	8c 91       	ld	r24, X
    194c:	82 60       	ori	r24, 0x02	; 2
    194e:	8c 93       	st	X, r24
    1950:	00 84       	ldd	r0, Z+8	; 0x08
    1952:	f1 85       	ldd	r31, Z+9	; 0x09
    1954:	e0 2d       	mov	r30, r0
    1956:	80 81       	ld	r24, Z
    1958:	8e 7f       	andi	r24, 0xFE	; 254
    195a:	80 83       	st	Z, r24
    195c:	08 95       	ret
    195e:	80 81       	ld	r24, Z
    1960:	8b 7f       	andi	r24, 0xFB	; 251
    1962:	80 83       	st	Z, r24
    1964:	ef e6       	ldi	r30, 0x6F	; 111
    1966:	f1 e0       	ldi	r31, 0x01	; 1
    1968:	a0 85       	ldd	r26, Z+8	; 0x08
    196a:	b1 85       	ldd	r27, Z+9	; 0x09
    196c:	8c 91       	ld	r24, X
    196e:	82 60       	ori	r24, 0x02	; 2
    1970:	8c 93       	st	X, r24
    1972:	00 84       	ldd	r0, Z+8	; 0x08
    1974:	f1 85       	ldd	r31, Z+9	; 0x09
    1976:	e0 2d       	mov	r30, r0
    1978:	80 81       	ld	r24, Z
    197a:	81 60       	ori	r24, 0x01	; 1
    197c:	80 83       	st	Z, r24
    197e:	08 95       	ret
    1980:	80 81       	ld	r24, Z
    1982:	84 60       	ori	r24, 0x04	; 4
    1984:	80 83       	st	Z, r24
    1986:	ef e6       	ldi	r30, 0x6F	; 111
    1988:	f1 e0       	ldi	r31, 0x01	; 1
    198a:	a0 85       	ldd	r26, Z+8	; 0x08
    198c:	b1 85       	ldd	r27, Z+9	; 0x09
    198e:	8c 91       	ld	r24, X
    1990:	8d 7f       	andi	r24, 0xFD	; 253
    1992:	8c 93       	st	X, r24
    1994:	00 84       	ldd	r0, Z+8	; 0x08
    1996:	f1 85       	ldd	r31, Z+9	; 0x09
    1998:	e0 2d       	mov	r30, r0
    199a:	80 81       	ld	r24, Z
    199c:	8e 7f       	andi	r24, 0xFE	; 254
    199e:	80 83       	st	Z, r24
    19a0:	08 95       	ret
    19a2:	80 81       	ld	r24, Z
    19a4:	84 60       	ori	r24, 0x04	; 4
    19a6:	80 83       	st	Z, r24
    19a8:	ef e6       	ldi	r30, 0x6F	; 111
    19aa:	f1 e0       	ldi	r31, 0x01	; 1
    19ac:	a0 85       	ldd	r26, Z+8	; 0x08
    19ae:	b1 85       	ldd	r27, Z+9	; 0x09
    19b0:	8c 91       	ld	r24, X
    19b2:	8d 7f       	andi	r24, 0xFD	; 253
    19b4:	8c 93       	st	X, r24
    19b6:	00 84       	ldd	r0, Z+8	; 0x08
    19b8:	f1 85       	ldd	r31, Z+9	; 0x09
    19ba:	e0 2d       	mov	r30, r0
    19bc:	80 81       	ld	r24, Z
    19be:	81 60       	ori	r24, 0x01	; 1
    19c0:	80 83       	st	Z, r24
    19c2:	08 95       	ret

000019c4 <TIM8_OC_Start>:
    19c4:	fc 01       	movw	r30, r24
    19c6:	20 81       	ld	r18, Z
    19c8:	22 23       	and	r18, r18
    19ca:	89 f0       	breq	.+34     	; 0x19ee <TIM8_OC_Start+0x2a>
    19cc:	22 30       	cpi	r18, 0x02	; 2
    19ce:	59 f4       	brne	.+22     	; 0x19e6 <TIM8_OC_Start+0x22>
    19d0:	a7 e7       	ldi	r26, 0x77	; 119
    19d2:	b1 e0       	ldi	r27, 0x01	; 1
    19d4:	0e c0       	rjmp	.+28     	; 0x19f2 <TIM8_OC_Start+0x2e>
    19d6:	cf 01       	movw	r24, r30
    19d8:	f7 de       	rcall	.-530    	; 0x17c8 <TIM0_CLK_Configuration>
    19da:	80 e0       	ldi	r24, 0x00	; 0
    19dc:	08 95       	ret
    19de:	cf 01       	movw	r24, r30
    19e0:	85 df       	rcall	.-246    	; 0x18ec <TIM2_CLK_Configuration>
    19e2:	80 e0       	ldi	r24, 0x00	; 0
    19e4:	08 95       	ret
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	08 95       	ret
    19ea:	80 e0       	ldi	r24, 0x00	; 0
    19ec:	08 95       	ret
    19ee:	af e6       	ldi	r26, 0x6F	; 111
    19f0:	b1 e0       	ldi	r27, 0x01	; 1
    19f2:	fc 01       	movw	r30, r24
    19f4:	12 96       	adiw	r26, 0x02	; 2
    19f6:	0d 90       	ld	r0, X+
    19f8:	bc 91       	ld	r27, X
    19fa:	a0 2d       	mov	r26, r0
    19fc:	83 81       	ldd	r24, Z+3	; 0x03
    19fe:	8c 93       	st	X, r24
    1a00:	80 81       	ld	r24, Z
    1a02:	88 23       	and	r24, r24
    1a04:	41 f3       	breq	.-48     	; 0x19d6 <TIM8_OC_Start+0x12>
    1a06:	82 30       	cpi	r24, 0x02	; 2
    1a08:	51 f3       	breq	.-44     	; 0x19de <TIM8_OC_Start+0x1a>
    1a0a:	ef cf       	rjmp	.-34     	; 0x19ea <TIM8_OC_Start+0x26>

00001a0c <TIM1_CLK_Configuration>:
    1a0c:	e0 91 45 01 	lds	r30, 0x0145	; 0x800145 <TIM16_descripter+0x2>
    1a10:	f0 91 46 01 	lds	r31, 0x0146	; 0x800146 <TIM16_descripter+0x3>
    1a14:	20 81       	ld	r18, Z
    1a16:	20 81       	ld	r18, Z
    1a18:	dc 01       	movw	r26, r24
    1a1a:	12 96       	adiw	r26, 0x02	; 2
    1a1c:	8c 91       	ld	r24, X
    1a1e:	83 30       	cpi	r24, 0x03	; 3
    1a20:	71 f1       	breq	.+92     	; 0x1a7e <TIM1_CLK_Configuration+0x72>
    1a22:	28 f4       	brcc	.+10     	; 0x1a2e <TIM1_CLK_Configuration+0x22>
    1a24:	88 23       	and	r24, r24
    1a26:	49 f0       	breq	.+18     	; 0x1a3a <TIM1_CLK_Configuration+0x2e>
    1a28:	81 30       	cpi	r24, 0x01	; 1
    1a2a:	c1 f0       	breq	.+48     	; 0x1a5c <TIM1_CLK_Configuration+0x50>
    1a2c:	08 95       	ret
    1a2e:	85 30       	cpi	r24, 0x05	; 5
    1a30:	b9 f1       	breq	.+110    	; 0x1aa0 <TIM1_CLK_Configuration+0x94>
    1a32:	86 30       	cpi	r24, 0x06	; 6
    1a34:	09 f4       	brne	.+2      	; 0x1a38 <TIM1_CLK_Configuration+0x2c>
    1a36:	45 c0       	rjmp	.+138    	; 0x1ac2 <TIM1_CLK_Configuration+0xb6>
    1a38:	08 95       	ret
    1a3a:	80 81       	ld	r24, Z
    1a3c:	8b 7f       	andi	r24, 0xFB	; 251
    1a3e:	80 83       	st	Z, r24
    1a40:	e3 e4       	ldi	r30, 0x43	; 67
    1a42:	f1 e0       	ldi	r31, 0x01	; 1
    1a44:	a2 81       	ldd	r26, Z+2	; 0x02
    1a46:	b3 81       	ldd	r27, Z+3	; 0x03
    1a48:	8c 91       	ld	r24, X
    1a4a:	8d 7f       	andi	r24, 0xFD	; 253
    1a4c:	8c 93       	st	X, r24
    1a4e:	02 80       	ldd	r0, Z+2	; 0x02
    1a50:	f3 81       	ldd	r31, Z+3	; 0x03
    1a52:	e0 2d       	mov	r30, r0
    1a54:	80 81       	ld	r24, Z
    1a56:	81 60       	ori	r24, 0x01	; 1
    1a58:	80 83       	st	Z, r24
    1a5a:	08 95       	ret
    1a5c:	80 81       	ld	r24, Z
    1a5e:	8b 7f       	andi	r24, 0xFB	; 251
    1a60:	80 83       	st	Z, r24
    1a62:	e3 e4       	ldi	r30, 0x43	; 67
    1a64:	f1 e0       	ldi	r31, 0x01	; 1
    1a66:	a2 81       	ldd	r26, Z+2	; 0x02
    1a68:	b3 81       	ldd	r27, Z+3	; 0x03
    1a6a:	8c 91       	ld	r24, X
    1a6c:	82 60       	ori	r24, 0x02	; 2
    1a6e:	8c 93       	st	X, r24
    1a70:	02 80       	ldd	r0, Z+2	; 0x02
    1a72:	f3 81       	ldd	r31, Z+3	; 0x03
    1a74:	e0 2d       	mov	r30, r0
    1a76:	80 81       	ld	r24, Z
    1a78:	8e 7f       	andi	r24, 0xFE	; 254
    1a7a:	80 83       	st	Z, r24
    1a7c:	08 95       	ret
    1a7e:	80 81       	ld	r24, Z
    1a80:	8b 7f       	andi	r24, 0xFB	; 251
    1a82:	80 83       	st	Z, r24
    1a84:	e3 e4       	ldi	r30, 0x43	; 67
    1a86:	f1 e0       	ldi	r31, 0x01	; 1
    1a88:	a2 81       	ldd	r26, Z+2	; 0x02
    1a8a:	b3 81       	ldd	r27, Z+3	; 0x03
    1a8c:	8c 91       	ld	r24, X
    1a8e:	82 60       	ori	r24, 0x02	; 2
    1a90:	8c 93       	st	X, r24
    1a92:	02 80       	ldd	r0, Z+2	; 0x02
    1a94:	f3 81       	ldd	r31, Z+3	; 0x03
    1a96:	e0 2d       	mov	r30, r0
    1a98:	80 81       	ld	r24, Z
    1a9a:	81 60       	ori	r24, 0x01	; 1
    1a9c:	80 83       	st	Z, r24
    1a9e:	08 95       	ret
    1aa0:	80 81       	ld	r24, Z
    1aa2:	84 60       	ori	r24, 0x04	; 4
    1aa4:	80 83       	st	Z, r24
    1aa6:	e3 e4       	ldi	r30, 0x43	; 67
    1aa8:	f1 e0       	ldi	r31, 0x01	; 1
    1aaa:	a2 81       	ldd	r26, Z+2	; 0x02
    1aac:	b3 81       	ldd	r27, Z+3	; 0x03
    1aae:	8c 91       	ld	r24, X
    1ab0:	8d 7f       	andi	r24, 0xFD	; 253
    1ab2:	8c 93       	st	X, r24
    1ab4:	02 80       	ldd	r0, Z+2	; 0x02
    1ab6:	f3 81       	ldd	r31, Z+3	; 0x03
    1ab8:	e0 2d       	mov	r30, r0
    1aba:	80 81       	ld	r24, Z
    1abc:	8e 7f       	andi	r24, 0xFE	; 254
    1abe:	80 83       	st	Z, r24
    1ac0:	08 95       	ret
    1ac2:	80 81       	ld	r24, Z
    1ac4:	84 60       	ori	r24, 0x04	; 4
    1ac6:	80 83       	st	Z, r24
    1ac8:	e3 e4       	ldi	r30, 0x43	; 67
    1aca:	f1 e0       	ldi	r31, 0x01	; 1
    1acc:	a2 81       	ldd	r26, Z+2	; 0x02
    1ace:	b3 81       	ldd	r27, Z+3	; 0x03
    1ad0:	8c 91       	ld	r24, X
    1ad2:	8d 7f       	andi	r24, 0xFD	; 253
    1ad4:	8c 93       	st	X, r24
    1ad6:	02 80       	ldd	r0, Z+2	; 0x02
    1ad8:	f3 81       	ldd	r31, Z+3	; 0x03
    1ada:	e0 2d       	mov	r30, r0
    1adc:	80 81       	ld	r24, Z
    1ade:	81 60       	ori	r24, 0x01	; 1
    1ae0:	80 83       	st	Z, r24
    1ae2:	08 95       	ret

00001ae4 <TIM3_CLK_Configuration>:
    1ae4:	e0 91 5b 01 	lds	r30, 0x015B	; 0x80015b <TIM16_descripter+0x18>
    1ae8:	f0 91 5c 01 	lds	r31, 0x015C	; 0x80015c <TIM16_descripter+0x19>
    1aec:	20 81       	ld	r18, Z
    1aee:	20 81       	ld	r18, Z
    1af0:	dc 01       	movw	r26, r24
    1af2:	12 96       	adiw	r26, 0x02	; 2
    1af4:	8c 91       	ld	r24, X
    1af6:	83 30       	cpi	r24, 0x03	; 3
    1af8:	71 f1       	breq	.+92     	; 0x1b56 <TIM3_CLK_Configuration+0x72>
    1afa:	28 f4       	brcc	.+10     	; 0x1b06 <TIM3_CLK_Configuration+0x22>
    1afc:	88 23       	and	r24, r24
    1afe:	49 f0       	breq	.+18     	; 0x1b12 <TIM3_CLK_Configuration+0x2e>
    1b00:	81 30       	cpi	r24, 0x01	; 1
    1b02:	c1 f0       	breq	.+48     	; 0x1b34 <TIM3_CLK_Configuration+0x50>
    1b04:	08 95       	ret
    1b06:	85 30       	cpi	r24, 0x05	; 5
    1b08:	b9 f1       	breq	.+110    	; 0x1b78 <TIM3_CLK_Configuration+0x94>
    1b0a:	86 30       	cpi	r24, 0x06	; 6
    1b0c:	09 f4       	brne	.+2      	; 0x1b10 <TIM3_CLK_Configuration+0x2c>
    1b0e:	45 c0       	rjmp	.+138    	; 0x1b9a <TIM3_CLK_Configuration+0xb6>
    1b10:	08 95       	ret
    1b12:	80 81       	ld	r24, Z
    1b14:	8b 7f       	andi	r24, 0xFB	; 251
    1b16:	80 83       	st	Z, r24
    1b18:	e3 e4       	ldi	r30, 0x43	; 67
    1b1a:	f1 e0       	ldi	r31, 0x01	; 1
    1b1c:	a0 8d       	ldd	r26, Z+24	; 0x18
    1b1e:	b1 8d       	ldd	r27, Z+25	; 0x19
    1b20:	8c 91       	ld	r24, X
    1b22:	8d 7f       	andi	r24, 0xFD	; 253
    1b24:	8c 93       	st	X, r24
    1b26:	00 8c       	ldd	r0, Z+24	; 0x18
    1b28:	f1 8d       	ldd	r31, Z+25	; 0x19
    1b2a:	e0 2d       	mov	r30, r0
    1b2c:	80 81       	ld	r24, Z
    1b2e:	81 60       	ori	r24, 0x01	; 1
    1b30:	80 83       	st	Z, r24
    1b32:	08 95       	ret
    1b34:	80 81       	ld	r24, Z
    1b36:	8b 7f       	andi	r24, 0xFB	; 251
    1b38:	80 83       	st	Z, r24
    1b3a:	e3 e4       	ldi	r30, 0x43	; 67
    1b3c:	f1 e0       	ldi	r31, 0x01	; 1
    1b3e:	a0 8d       	ldd	r26, Z+24	; 0x18
    1b40:	b1 8d       	ldd	r27, Z+25	; 0x19
    1b42:	8c 91       	ld	r24, X
    1b44:	82 60       	ori	r24, 0x02	; 2
    1b46:	8c 93       	st	X, r24
    1b48:	00 8c       	ldd	r0, Z+24	; 0x18
    1b4a:	f1 8d       	ldd	r31, Z+25	; 0x19
    1b4c:	e0 2d       	mov	r30, r0
    1b4e:	80 81       	ld	r24, Z
    1b50:	8e 7f       	andi	r24, 0xFE	; 254
    1b52:	80 83       	st	Z, r24
    1b54:	08 95       	ret
    1b56:	80 81       	ld	r24, Z
    1b58:	8b 7f       	andi	r24, 0xFB	; 251
    1b5a:	80 83       	st	Z, r24
    1b5c:	e3 e4       	ldi	r30, 0x43	; 67
    1b5e:	f1 e0       	ldi	r31, 0x01	; 1
    1b60:	a0 8d       	ldd	r26, Z+24	; 0x18
    1b62:	b1 8d       	ldd	r27, Z+25	; 0x19
    1b64:	8c 91       	ld	r24, X
    1b66:	82 60       	ori	r24, 0x02	; 2
    1b68:	8c 93       	st	X, r24
    1b6a:	00 8c       	ldd	r0, Z+24	; 0x18
    1b6c:	f1 8d       	ldd	r31, Z+25	; 0x19
    1b6e:	e0 2d       	mov	r30, r0
    1b70:	80 81       	ld	r24, Z
    1b72:	81 60       	ori	r24, 0x01	; 1
    1b74:	80 83       	st	Z, r24
    1b76:	08 95       	ret
    1b78:	80 81       	ld	r24, Z
    1b7a:	84 60       	ori	r24, 0x04	; 4
    1b7c:	80 83       	st	Z, r24
    1b7e:	e3 e4       	ldi	r30, 0x43	; 67
    1b80:	f1 e0       	ldi	r31, 0x01	; 1
    1b82:	a0 8d       	ldd	r26, Z+24	; 0x18
    1b84:	b1 8d       	ldd	r27, Z+25	; 0x19
    1b86:	8c 91       	ld	r24, X
    1b88:	8d 7f       	andi	r24, 0xFD	; 253
    1b8a:	8c 93       	st	X, r24
    1b8c:	00 8c       	ldd	r0, Z+24	; 0x18
    1b8e:	f1 8d       	ldd	r31, Z+25	; 0x19
    1b90:	e0 2d       	mov	r30, r0
    1b92:	80 81       	ld	r24, Z
    1b94:	8e 7f       	andi	r24, 0xFE	; 254
    1b96:	80 83       	st	Z, r24
    1b98:	08 95       	ret
    1b9a:	80 81       	ld	r24, Z
    1b9c:	84 60       	ori	r24, 0x04	; 4
    1b9e:	80 83       	st	Z, r24
    1ba0:	e3 e4       	ldi	r30, 0x43	; 67
    1ba2:	f1 e0       	ldi	r31, 0x01	; 1
    1ba4:	a0 8d       	ldd	r26, Z+24	; 0x18
    1ba6:	b1 8d       	ldd	r27, Z+25	; 0x19
    1ba8:	8c 91       	ld	r24, X
    1baa:	8d 7f       	andi	r24, 0xFD	; 253
    1bac:	8c 93       	st	X, r24
    1bae:	00 8c       	ldd	r0, Z+24	; 0x18
    1bb0:	f1 8d       	ldd	r31, Z+25	; 0x19
    1bb2:	e0 2d       	mov	r30, r0
    1bb4:	80 81       	ld	r24, Z
    1bb6:	81 60       	ori	r24, 0x01	; 1
    1bb8:	80 83       	st	Z, r24
    1bba:	08 95       	ret

00001bbc <TIM16_OC_Start>:
    1bbc:	fc 01       	movw	r30, r24
    1bbe:	90 81       	ld	r25, Z
    1bc0:	91 30       	cpi	r25, 0x01	; 1
    1bc2:	19 f0       	breq	.+6      	; 0x1bca <TIM16_OC_Start+0xe>
    1bc4:	93 30       	cpi	r25, 0x03	; 3
    1bc6:	29 f0       	breq	.+10     	; 0x1bd2 <TIM16_OC_Start+0x16>
    1bc8:	08 c0       	rjmp	.+16     	; 0x1bda <TIM16_OC_Start+0x1e>
    1bca:	cf 01       	movw	r24, r30
    1bcc:	1f df       	rcall	.-450    	; 0x1a0c <TIM1_CLK_Configuration>
    1bce:	80 e0       	ldi	r24, 0x00	; 0
    1bd0:	08 95       	ret
    1bd2:	cf 01       	movw	r24, r30
    1bd4:	87 df       	rcall	.-242    	; 0x1ae4 <TIM3_CLK_Configuration>
    1bd6:	80 e0       	ldi	r24, 0x00	; 0
    1bd8:	08 95       	ret
    1bda:	81 e0       	ldi	r24, 0x01	; 1
    1bdc:	08 95       	ret

00001bde <TIM0_OVF_ElapsedCallback>:
    1bde:	08 95       	ret

00001be0 <TIM0_OVF_IRQHandler>:
    1be0:	fe cf       	rjmp	.-4      	; 0x1bde <TIM0_OVF_ElapsedCallback>
    1be2:	08 95       	ret

00001be4 <TIM2_OVF_ElapsedCallback>:
    1be4:	08 95       	ret

00001be6 <TIM2_OVF_IRQHandler>:
    1be6:	fe cf       	rjmp	.-4      	; 0x1be4 <TIM2_OVF_ElapsedCallback>
    1be8:	08 95       	ret

00001bea <TIM0_OC_ElapsedCallback>:
{
	UNUSED(htim);
}

__attribute__((weak)) void TIM0_OC_ElapsedCallback(TIM8_HandleTypeDef *htim)
{
    1bea:	08 95       	ret

00001bec <TIM0_OC_IRQHandler>:
	TIM3_OVF_ElapsedCallback(htim);
}

void TIM0_OC_IRQHandler(TIM8_HandleTypeDef *htim)
{
	TIM0_OC_ElapsedCallback(htim);	
    1bec:	fe cf       	rjmp	.-4      	; 0x1bea <TIM0_OC_ElapsedCallback>
    1bee:	08 95       	ret

00001bf0 <TIM2_OC_ElapsedCallback>:
{
	UNUSED(htim);
}

__attribute__((weak)) void TIM2_OC_ElapsedCallback(TIM8_HandleTypeDef *htim)
{
    1bf0:	08 95       	ret

00001bf2 <TIM2_OC_IRQHandler>:
	TIM0_OC_ElapsedCallback(htim);	
}

void TIM2_OC_IRQHandler(TIM8_HandleTypeDef *htim)
{
	TIM2_OC_ElapsedCallback(htim);
    1bf2:	fe cf       	rjmp	.-4      	; 0x1bf0 <TIM2_OC_ElapsedCallback>
    1bf4:	08 95       	ret

00001bf6 <UART_Init>:
{
	UNUSED(huart);
}

__attribute__((weak)) void UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
    1bf6:	cf 92       	push	r12
    1bf8:	df 92       	push	r13
    1bfa:	ef 92       	push	r14
    1bfc:	ff 92       	push	r15
    1bfe:	0f 93       	push	r16
    1c00:	1f 93       	push	r17
    1c02:	cf 93       	push	r28
    1c04:	df 93       	push	r29
    1c06:	fc 01       	movw	r30, r24
    1c08:	c0 81       	ld	r28, Z
    1c0a:	d0 e0       	ldi	r29, 0x00	; 0
    1c0c:	00 97       	sbiw	r24, 0x00	; 0
    1c0e:	09 f4       	brne	.+2      	; 0x1c12 <UART_Init+0x1c>
    1c10:	e3 c1       	rjmp	.+966    	; 0x1fd8 <UART_Init+0x3e2>
    1c12:	8c 01       	movw	r16, r24
    1c14:	81 85       	ldd	r24, Z+9	; 0x09
    1c16:	88 23       	and	r24, r24
    1c18:	21 f0       	breq	.+8      	; 0x1c22 <UART_Init+0x2c>
    1c1a:	81 30       	cpi	r24, 0x01	; 1
    1c1c:	09 f4       	brne	.+2      	; 0x1c20 <UART_Init+0x2a>
    1c1e:	41 c0       	rjmp	.+130    	; 0x1ca2 <UART_Init+0xac>
    1c20:	7b c0       	rjmp	.+246    	; 0x1d18 <UART_Init+0x122>
    1c22:	81 81       	ldd	r24, Z+1	; 0x01
    1c24:	92 81       	ldd	r25, Z+2	; 0x02
    1c26:	a3 81       	ldd	r26, Z+3	; 0x03
    1c28:	b4 81       	ldd	r27, Z+4	; 0x04
    1c2a:	88 0f       	add	r24, r24
    1c2c:	99 1f       	adc	r25, r25
    1c2e:	aa 1f       	adc	r26, r26
    1c30:	bb 1f       	adc	r27, r27
    1c32:	88 0f       	add	r24, r24
    1c34:	99 1f       	adc	r25, r25
    1c36:	aa 1f       	adc	r26, r26
    1c38:	bb 1f       	adc	r27, r27
    1c3a:	bc 01       	movw	r22, r24
    1c3c:	cd 01       	movw	r24, r26
    1c3e:	66 0f       	add	r22, r22
    1c40:	77 1f       	adc	r23, r23
    1c42:	88 1f       	adc	r24, r24
    1c44:	99 1f       	adc	r25, r25
    1c46:	66 0f       	add	r22, r22
    1c48:	77 1f       	adc	r23, r23
    1c4a:	88 1f       	adc	r24, r24
    1c4c:	99 1f       	adc	r25, r25
    1c4e:	d9 d3       	rcall	.+1970   	; 0x2402 <__floatunsisf>
    1c50:	9b 01       	movw	r18, r22
    1c52:	ac 01       	movw	r20, r24
    1c54:	60 e0       	ldi	r22, 0x00	; 0
    1c56:	74 e2       	ldi	r23, 0x24	; 36
    1c58:	84 e7       	ldi	r24, 0x74	; 116
    1c5a:	9b e4       	ldi	r25, 0x4B	; 75
    1c5c:	3e d3       	rcall	.+1660   	; 0x22da <__divsf3>
    1c5e:	20 e0       	ldi	r18, 0x00	; 0
    1c60:	30 e0       	ldi	r19, 0x00	; 0
    1c62:	40 e0       	ldi	r20, 0x00	; 0
    1c64:	5f e3       	ldi	r21, 0x3F	; 63
    1c66:	d4 d2       	rcall	.+1448   	; 0x2210 <__subsf3>
    1c68:	a0 d3       	rcall	.+1856   	; 0x23aa <__fixunssfsi>
    1c6a:	fe 01       	movw	r30, r28
    1c6c:	ee 0f       	add	r30, r30
    1c6e:	ff 1f       	adc	r31, r31
    1c70:	ec 0f       	add	r30, r28
    1c72:	fd 1f       	adc	r31, r29
    1c74:	ee 0f       	add	r30, r30
    1c76:	ff 1f       	adc	r31, r31
    1c78:	ee 0f       	add	r30, r30
    1c7a:	ff 1f       	adc	r31, r31
    1c7c:	e1 58       	subi	r30, 0x81	; 129
    1c7e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c80:	a0 85       	ldd	r26, Z+8	; 0x08
    1c82:	b1 85       	ldd	r27, Z+9	; 0x09
    1c84:	c7 2e       	mov	r12, r23
    1c86:	d8 2e       	mov	r13, r24
    1c88:	e9 2e       	mov	r14, r25
    1c8a:	ff 24       	eor	r15, r15
    1c8c:	cc 92       	st	X, r12
    1c8e:	a2 85       	ldd	r26, Z+10	; 0x0a
    1c90:	b3 85       	ldd	r27, Z+11	; 0x0b
    1c92:	6c 93       	st	X, r22
    1c94:	02 80       	ldd	r0, Z+2	; 0x02
    1c96:	f3 81       	ldd	r31, Z+3	; 0x03
    1c98:	e0 2d       	mov	r30, r0
    1c9a:	80 81       	ld	r24, Z
    1c9c:	8d 7f       	andi	r24, 0xFD	; 253
    1c9e:	80 83       	st	Z, r24
    1ca0:	3b c0       	rjmp	.+118    	; 0x1d18 <UART_Init+0x122>
    1ca2:	81 81       	ldd	r24, Z+1	; 0x01
    1ca4:	92 81       	ldd	r25, Z+2	; 0x02
    1ca6:	a3 81       	ldd	r26, Z+3	; 0x03
    1ca8:	b4 81       	ldd	r27, Z+4	; 0x04
    1caa:	88 0f       	add	r24, r24
    1cac:	99 1f       	adc	r25, r25
    1cae:	aa 1f       	adc	r26, r26
    1cb0:	bb 1f       	adc	r27, r27
    1cb2:	88 0f       	add	r24, r24
    1cb4:	99 1f       	adc	r25, r25
    1cb6:	aa 1f       	adc	r26, r26
    1cb8:	bb 1f       	adc	r27, r27
    1cba:	bc 01       	movw	r22, r24
    1cbc:	cd 01       	movw	r24, r26
    1cbe:	66 0f       	add	r22, r22
    1cc0:	77 1f       	adc	r23, r23
    1cc2:	88 1f       	adc	r24, r24
    1cc4:	99 1f       	adc	r25, r25
    1cc6:	9d d3       	rcall	.+1850   	; 0x2402 <__floatunsisf>
    1cc8:	9b 01       	movw	r18, r22
    1cca:	ac 01       	movw	r20, r24
    1ccc:	60 e0       	ldi	r22, 0x00	; 0
    1cce:	74 e2       	ldi	r23, 0x24	; 36
    1cd0:	84 e7       	ldi	r24, 0x74	; 116
    1cd2:	9b e4       	ldi	r25, 0x4B	; 75
    1cd4:	02 d3       	rcall	.+1540   	; 0x22da <__divsf3>
    1cd6:	20 e0       	ldi	r18, 0x00	; 0
    1cd8:	30 e0       	ldi	r19, 0x00	; 0
    1cda:	40 e0       	ldi	r20, 0x00	; 0
    1cdc:	5f e3       	ldi	r21, 0x3F	; 63
    1cde:	98 d2       	rcall	.+1328   	; 0x2210 <__subsf3>
    1ce0:	64 d3       	rcall	.+1736   	; 0x23aa <__fixunssfsi>
    1ce2:	fe 01       	movw	r30, r28
    1ce4:	ee 0f       	add	r30, r30
    1ce6:	ff 1f       	adc	r31, r31
    1ce8:	ec 0f       	add	r30, r28
    1cea:	fd 1f       	adc	r31, r29
    1cec:	ee 0f       	add	r30, r30
    1cee:	ff 1f       	adc	r31, r31
    1cf0:	ee 0f       	add	r30, r30
    1cf2:	ff 1f       	adc	r31, r31
    1cf4:	e1 58       	subi	r30, 0x81	; 129
    1cf6:	fe 4f       	sbci	r31, 0xFE	; 254
    1cf8:	a0 85       	ldd	r26, Z+8	; 0x08
    1cfa:	b1 85       	ldd	r27, Z+9	; 0x09
    1cfc:	c7 2e       	mov	r12, r23
    1cfe:	d8 2e       	mov	r13, r24
    1d00:	e9 2e       	mov	r14, r25
    1d02:	ff 24       	eor	r15, r15
    1d04:	cc 92       	st	X, r12
    1d06:	a2 85       	ldd	r26, Z+10	; 0x0a
    1d08:	b3 85       	ldd	r27, Z+11	; 0x0b
    1d0a:	6c 93       	st	X, r22
    1d0c:	02 80       	ldd	r0, Z+2	; 0x02
    1d0e:	f3 81       	ldd	r31, Z+3	; 0x03
    1d10:	e0 2d       	mov	r30, r0
    1d12:	80 81       	ld	r24, Z
    1d14:	82 60       	ori	r24, 0x02	; 2
    1d16:	80 83       	st	Z, r24
    1d18:	f8 01       	movw	r30, r16
    1d1a:	85 81       	ldd	r24, Z+5	; 0x05
    1d1c:	82 30       	cpi	r24, 0x02	; 2
    1d1e:	09 f4       	brne	.+2      	; 0x1d22 <UART_Init+0x12c>
    1d20:	45 c0       	rjmp	.+138    	; 0x1dac <UART_Init+0x1b6>
    1d22:	28 f4       	brcc	.+10     	; 0x1d2e <UART_Init+0x138>
    1d24:	88 23       	and	r24, r24
    1d26:	51 f0       	breq	.+20     	; 0x1d3c <UART_Init+0x146>
    1d28:	81 30       	cpi	r24, 0x01	; 1
    1d2a:	21 f1       	breq	.+72     	; 0x1d74 <UART_Init+0x17e>
    1d2c:	92 c0       	rjmp	.+292    	; 0x1e52 <UART_Init+0x25c>
    1d2e:	83 30       	cpi	r24, 0x03	; 3
    1d30:	09 f4       	brne	.+2      	; 0x1d34 <UART_Init+0x13e>
    1d32:	58 c0       	rjmp	.+176    	; 0x1de4 <UART_Init+0x1ee>
    1d34:	84 30       	cpi	r24, 0x04	; 4
    1d36:	09 f4       	brne	.+2      	; 0x1d3a <UART_Init+0x144>
    1d38:	71 c0       	rjmp	.+226    	; 0x1e1c <UART_Init+0x226>
    1d3a:	8b c0       	rjmp	.+278    	; 0x1e52 <UART_Init+0x25c>
    1d3c:	fe 01       	movw	r30, r28
    1d3e:	ee 0f       	add	r30, r30
    1d40:	ff 1f       	adc	r31, r31
    1d42:	ec 0f       	add	r30, r28
    1d44:	fd 1f       	adc	r31, r29
    1d46:	ee 0f       	add	r30, r30
    1d48:	ff 1f       	adc	r31, r31
    1d4a:	ee 0f       	add	r30, r30
    1d4c:	ff 1f       	adc	r31, r31
    1d4e:	e1 58       	subi	r30, 0x81	; 129
    1d50:	fe 4f       	sbci	r31, 0xFE	; 254
    1d52:	a4 81       	ldd	r26, Z+4	; 0x04
    1d54:	b5 81       	ldd	r27, Z+5	; 0x05
    1d56:	8c 91       	ld	r24, X
    1d58:	8b 7f       	andi	r24, 0xFB	; 251
    1d5a:	8c 93       	st	X, r24
    1d5c:	a6 81       	ldd	r26, Z+6	; 0x06
    1d5e:	b7 81       	ldd	r27, Z+7	; 0x07
    1d60:	8c 91       	ld	r24, X
    1d62:	84 60       	ori	r24, 0x04	; 4
    1d64:	8c 93       	st	X, r24
    1d66:	06 80       	ldd	r0, Z+6	; 0x06
    1d68:	f7 81       	ldd	r31, Z+7	; 0x07
    1d6a:	e0 2d       	mov	r30, r0
    1d6c:	80 81       	ld	r24, Z
    1d6e:	82 60       	ori	r24, 0x02	; 2
    1d70:	80 83       	st	Z, r24
    1d72:	6f c0       	rjmp	.+222    	; 0x1e52 <UART_Init+0x25c>
    1d74:	fe 01       	movw	r30, r28
    1d76:	ee 0f       	add	r30, r30
    1d78:	ff 1f       	adc	r31, r31
    1d7a:	ec 0f       	add	r30, r28
    1d7c:	fd 1f       	adc	r31, r29
    1d7e:	ee 0f       	add	r30, r30
    1d80:	ff 1f       	adc	r31, r31
    1d82:	ee 0f       	add	r30, r30
    1d84:	ff 1f       	adc	r31, r31
    1d86:	e1 58       	subi	r30, 0x81	; 129
    1d88:	fe 4f       	sbci	r31, 0xFE	; 254
    1d8a:	a4 81       	ldd	r26, Z+4	; 0x04
    1d8c:	b5 81       	ldd	r27, Z+5	; 0x05
    1d8e:	8c 91       	ld	r24, X
    1d90:	8b 7f       	andi	r24, 0xFB	; 251
    1d92:	8c 93       	st	X, r24
    1d94:	a6 81       	ldd	r26, Z+6	; 0x06
    1d96:	b7 81       	ldd	r27, Z+7	; 0x07
    1d98:	8c 91       	ld	r24, X
    1d9a:	8b 7f       	andi	r24, 0xFB	; 251
    1d9c:	8c 93       	st	X, r24
    1d9e:	06 80       	ldd	r0, Z+6	; 0x06
    1da0:	f7 81       	ldd	r31, Z+7	; 0x07
    1da2:	e0 2d       	mov	r30, r0
    1da4:	80 81       	ld	r24, Z
    1da6:	8d 7f       	andi	r24, 0xFD	; 253
    1da8:	80 83       	st	Z, r24
    1daa:	53 c0       	rjmp	.+166    	; 0x1e52 <UART_Init+0x25c>
    1dac:	fe 01       	movw	r30, r28
    1dae:	ee 0f       	add	r30, r30
    1db0:	ff 1f       	adc	r31, r31
    1db2:	ec 0f       	add	r30, r28
    1db4:	fd 1f       	adc	r31, r29
    1db6:	ee 0f       	add	r30, r30
    1db8:	ff 1f       	adc	r31, r31
    1dba:	ee 0f       	add	r30, r30
    1dbc:	ff 1f       	adc	r31, r31
    1dbe:	e1 58       	subi	r30, 0x81	; 129
    1dc0:	fe 4f       	sbci	r31, 0xFE	; 254
    1dc2:	a4 81       	ldd	r26, Z+4	; 0x04
    1dc4:	b5 81       	ldd	r27, Z+5	; 0x05
    1dc6:	8c 91       	ld	r24, X
    1dc8:	8b 7f       	andi	r24, 0xFB	; 251
    1dca:	8c 93       	st	X, r24
    1dcc:	a6 81       	ldd	r26, Z+6	; 0x06
    1dce:	b7 81       	ldd	r27, Z+7	; 0x07
    1dd0:	8c 91       	ld	r24, X
    1dd2:	8b 7f       	andi	r24, 0xFB	; 251
    1dd4:	8c 93       	st	X, r24
    1dd6:	06 80       	ldd	r0, Z+6	; 0x06
    1dd8:	f7 81       	ldd	r31, Z+7	; 0x07
    1dda:	e0 2d       	mov	r30, r0
    1ddc:	80 81       	ld	r24, Z
    1dde:	82 60       	ori	r24, 0x02	; 2
    1de0:	80 83       	st	Z, r24
    1de2:	37 c0       	rjmp	.+110    	; 0x1e52 <UART_Init+0x25c>
    1de4:	fe 01       	movw	r30, r28
    1de6:	ee 0f       	add	r30, r30
    1de8:	ff 1f       	adc	r31, r31
    1dea:	ec 0f       	add	r30, r28
    1dec:	fd 1f       	adc	r31, r29
    1dee:	ee 0f       	add	r30, r30
    1df0:	ff 1f       	adc	r31, r31
    1df2:	ee 0f       	add	r30, r30
    1df4:	ff 1f       	adc	r31, r31
    1df6:	e1 58       	subi	r30, 0x81	; 129
    1df8:	fe 4f       	sbci	r31, 0xFE	; 254
    1dfa:	a4 81       	ldd	r26, Z+4	; 0x04
    1dfc:	b5 81       	ldd	r27, Z+5	; 0x05
    1dfe:	8c 91       	ld	r24, X
    1e00:	8b 7f       	andi	r24, 0xFB	; 251
    1e02:	8c 93       	st	X, r24
    1e04:	a6 81       	ldd	r26, Z+6	; 0x06
    1e06:	b7 81       	ldd	r27, Z+7	; 0x07
    1e08:	8c 91       	ld	r24, X
    1e0a:	84 60       	ori	r24, 0x04	; 4
    1e0c:	8c 93       	st	X, r24
    1e0e:	06 80       	ldd	r0, Z+6	; 0x06
    1e10:	f7 81       	ldd	r31, Z+7	; 0x07
    1e12:	e0 2d       	mov	r30, r0
    1e14:	80 81       	ld	r24, Z
    1e16:	8d 7f       	andi	r24, 0xFD	; 253
    1e18:	80 83       	st	Z, r24
    1e1a:	1b c0       	rjmp	.+54     	; 0x1e52 <UART_Init+0x25c>
    1e1c:	fe 01       	movw	r30, r28
    1e1e:	ee 0f       	add	r30, r30
    1e20:	ff 1f       	adc	r31, r31
    1e22:	ec 0f       	add	r30, r28
    1e24:	fd 1f       	adc	r31, r29
    1e26:	ee 0f       	add	r30, r30
    1e28:	ff 1f       	adc	r31, r31
    1e2a:	ee 0f       	add	r30, r30
    1e2c:	ff 1f       	adc	r31, r31
    1e2e:	e1 58       	subi	r30, 0x81	; 129
    1e30:	fe 4f       	sbci	r31, 0xFE	; 254
    1e32:	a4 81       	ldd	r26, Z+4	; 0x04
    1e34:	b5 81       	ldd	r27, Z+5	; 0x05
    1e36:	8c 91       	ld	r24, X
    1e38:	84 60       	ori	r24, 0x04	; 4
    1e3a:	8c 93       	st	X, r24
    1e3c:	a6 81       	ldd	r26, Z+6	; 0x06
    1e3e:	b7 81       	ldd	r27, Z+7	; 0x07
    1e40:	8c 91       	ld	r24, X
    1e42:	84 60       	ori	r24, 0x04	; 4
    1e44:	8c 93       	st	X, r24
    1e46:	06 80       	ldd	r0, Z+6	; 0x06
    1e48:	f7 81       	ldd	r31, Z+7	; 0x07
    1e4a:	e0 2d       	mov	r30, r0
    1e4c:	80 81       	ld	r24, Z
    1e4e:	82 60       	ori	r24, 0x02	; 2
    1e50:	80 83       	st	Z, r24
    1e52:	f8 01       	movw	r30, r16
    1e54:	86 81       	ldd	r24, Z+6	; 0x06
    1e56:	88 23       	and	r24, r24
    1e58:	19 f0       	breq	.+6      	; 0x1e60 <UART_Init+0x26a>
    1e5a:	81 30       	cpi	r24, 0x01	; 1
    1e5c:	99 f0       	breq	.+38     	; 0x1e84 <UART_Init+0x28e>
    1e5e:	23 c0       	rjmp	.+70     	; 0x1ea6 <UART_Init+0x2b0>
    1e60:	fe 01       	movw	r30, r28
    1e62:	ee 0f       	add	r30, r30
    1e64:	ff 1f       	adc	r31, r31
    1e66:	ec 0f       	add	r30, r28
    1e68:	fd 1f       	adc	r31, r29
    1e6a:	ee 0f       	add	r30, r30
    1e6c:	ff 1f       	adc	r31, r31
    1e6e:	ee 0f       	add	r30, r30
    1e70:	ff 1f       	adc	r31, r31
    1e72:	e1 58       	subi	r30, 0x81	; 129
    1e74:	fe 4f       	sbci	r31, 0xFE	; 254
    1e76:	06 80       	ldd	r0, Z+6	; 0x06
    1e78:	f7 81       	ldd	r31, Z+7	; 0x07
    1e7a:	e0 2d       	mov	r30, r0
    1e7c:	80 81       	ld	r24, Z
    1e7e:	8f 7e       	andi	r24, 0xEF	; 239
    1e80:	80 83       	st	Z, r24
    1e82:	11 c0       	rjmp	.+34     	; 0x1ea6 <UART_Init+0x2b0>
    1e84:	fe 01       	movw	r30, r28
    1e86:	ee 0f       	add	r30, r30
    1e88:	ff 1f       	adc	r31, r31
    1e8a:	ec 0f       	add	r30, r28
    1e8c:	fd 1f       	adc	r31, r29
    1e8e:	ee 0f       	add	r30, r30
    1e90:	ff 1f       	adc	r31, r31
    1e92:	ee 0f       	add	r30, r30
    1e94:	ff 1f       	adc	r31, r31
    1e96:	e1 58       	subi	r30, 0x81	; 129
    1e98:	fe 4f       	sbci	r31, 0xFE	; 254
    1e9a:	06 80       	ldd	r0, Z+6	; 0x06
    1e9c:	f7 81       	ldd	r31, Z+7	; 0x07
    1e9e:	e0 2d       	mov	r30, r0
    1ea0:	80 81       	ld	r24, Z
    1ea2:	80 61       	ori	r24, 0x10	; 16
    1ea4:	80 83       	st	Z, r24
    1ea6:	f8 01       	movw	r30, r16
    1ea8:	87 81       	ldd	r24, Z+7	; 0x07
    1eaa:	81 30       	cpi	r24, 0x01	; 1
    1eac:	d9 f0       	breq	.+54     	; 0x1ee4 <UART_Init+0x2ee>
    1eae:	18 f0       	brcs	.+6      	; 0x1eb6 <UART_Init+0x2c0>
    1eb0:	82 30       	cpi	r24, 0x02	; 2
    1eb2:	79 f1       	breq	.+94     	; 0x1f12 <UART_Init+0x31c>
    1eb4:	44 c0       	rjmp	.+136    	; 0x1f3e <UART_Init+0x348>
    1eb6:	fe 01       	movw	r30, r28
    1eb8:	ee 0f       	add	r30, r30
    1eba:	ff 1f       	adc	r31, r31
    1ebc:	ec 0f       	add	r30, r28
    1ebe:	fd 1f       	adc	r31, r29
    1ec0:	ee 0f       	add	r30, r30
    1ec2:	ff 1f       	adc	r31, r31
    1ec4:	ee 0f       	add	r30, r30
    1ec6:	ff 1f       	adc	r31, r31
    1ec8:	e1 58       	subi	r30, 0x81	; 129
    1eca:	fe 4f       	sbci	r31, 0xFE	; 254
    1ecc:	a6 81       	ldd	r26, Z+6	; 0x06
    1ece:	b7 81       	ldd	r27, Z+7	; 0x07
    1ed0:	8c 91       	ld	r24, X
    1ed2:	8f 7b       	andi	r24, 0xBF	; 191
    1ed4:	8c 93       	st	X, r24
    1ed6:	06 80       	ldd	r0, Z+6	; 0x06
    1ed8:	f7 81       	ldd	r31, Z+7	; 0x07
    1eda:	e0 2d       	mov	r30, r0
    1edc:	80 81       	ld	r24, Z
    1ede:	8f 7d       	andi	r24, 0xDF	; 223
    1ee0:	80 83       	st	Z, r24
    1ee2:	2d c0       	rjmp	.+90     	; 0x1f3e <UART_Init+0x348>
    1ee4:	fe 01       	movw	r30, r28
    1ee6:	ee 0f       	add	r30, r30
    1ee8:	ff 1f       	adc	r31, r31
    1eea:	ec 0f       	add	r30, r28
    1eec:	fd 1f       	adc	r31, r29
    1eee:	ee 0f       	add	r30, r30
    1ef0:	ff 1f       	adc	r31, r31
    1ef2:	ee 0f       	add	r30, r30
    1ef4:	ff 1f       	adc	r31, r31
    1ef6:	e1 58       	subi	r30, 0x81	; 129
    1ef8:	fe 4f       	sbci	r31, 0xFE	; 254
    1efa:	a6 81       	ldd	r26, Z+6	; 0x06
    1efc:	b7 81       	ldd	r27, Z+7	; 0x07
    1efe:	8c 91       	ld	r24, X
    1f00:	80 64       	ori	r24, 0x40	; 64
    1f02:	8c 93       	st	X, r24
    1f04:	06 80       	ldd	r0, Z+6	; 0x06
    1f06:	f7 81       	ldd	r31, Z+7	; 0x07
    1f08:	e0 2d       	mov	r30, r0
    1f0a:	80 81       	ld	r24, Z
    1f0c:	8f 7d       	andi	r24, 0xDF	; 223
    1f0e:	80 83       	st	Z, r24
    1f10:	16 c0       	rjmp	.+44     	; 0x1f3e <UART_Init+0x348>
    1f12:	fe 01       	movw	r30, r28
    1f14:	ee 0f       	add	r30, r30
    1f16:	ff 1f       	adc	r31, r31
    1f18:	ec 0f       	add	r30, r28
    1f1a:	fd 1f       	adc	r31, r29
    1f1c:	ee 0f       	add	r30, r30
    1f1e:	ff 1f       	adc	r31, r31
    1f20:	ee 0f       	add	r30, r30
    1f22:	ff 1f       	adc	r31, r31
    1f24:	e1 58       	subi	r30, 0x81	; 129
    1f26:	fe 4f       	sbci	r31, 0xFE	; 254
    1f28:	a6 81       	ldd	r26, Z+6	; 0x06
    1f2a:	b7 81       	ldd	r27, Z+7	; 0x07
    1f2c:	8c 91       	ld	r24, X
    1f2e:	80 64       	ori	r24, 0x40	; 64
    1f30:	8c 93       	st	X, r24
    1f32:	06 80       	ldd	r0, Z+6	; 0x06
    1f34:	f7 81       	ldd	r31, Z+7	; 0x07
    1f36:	e0 2d       	mov	r30, r0
    1f38:	80 81       	ld	r24, Z
    1f3a:	80 62       	ori	r24, 0x20	; 32
    1f3c:	80 83       	st	Z, r24
    1f3e:	f8 01       	movw	r30, r16
    1f40:	80 85       	ldd	r24, Z+8	; 0x08
    1f42:	81 30       	cpi	r24, 0x01	; 1
    1f44:	b1 f0       	breq	.+44     	; 0x1f72 <UART_Init+0x37c>
    1f46:	18 f0       	brcs	.+6      	; 0x1f4e <UART_Init+0x358>
    1f48:	82 30       	cpi	r24, 0x02	; 2
    1f4a:	29 f1       	breq	.+74     	; 0x1f96 <UART_Init+0x3a0>
    1f4c:	47 c0       	rjmp	.+142    	; 0x1fdc <UART_Init+0x3e6>
    1f4e:	ce 01       	movw	r24, r28
    1f50:	88 0f       	add	r24, r24
    1f52:	99 1f       	adc	r25, r25
    1f54:	c8 0f       	add	r28, r24
    1f56:	d9 1f       	adc	r29, r25
    1f58:	cc 0f       	add	r28, r28
    1f5a:	dd 1f       	adc	r29, r29
    1f5c:	cc 0f       	add	r28, r28
    1f5e:	dd 1f       	adc	r29, r29
    1f60:	c1 58       	subi	r28, 0x81	; 129
    1f62:	de 4f       	sbci	r29, 0xFE	; 254
    1f64:	ec 81       	ldd	r30, Y+4	; 0x04
    1f66:	fd 81       	ldd	r31, Y+5	; 0x05
    1f68:	80 81       	ld	r24, Z
    1f6a:	80 61       	ori	r24, 0x10	; 16
    1f6c:	80 83       	st	Z, r24
    1f6e:	80 e0       	ldi	r24, 0x00	; 0
    1f70:	36 c0       	rjmp	.+108    	; 0x1fde <UART_Init+0x3e8>
    1f72:	ce 01       	movw	r24, r28
    1f74:	88 0f       	add	r24, r24
    1f76:	99 1f       	adc	r25, r25
    1f78:	c8 0f       	add	r28, r24
    1f7a:	d9 1f       	adc	r29, r25
    1f7c:	cc 0f       	add	r28, r28
    1f7e:	dd 1f       	adc	r29, r29
    1f80:	cc 0f       	add	r28, r28
    1f82:	dd 1f       	adc	r29, r29
    1f84:	c1 58       	subi	r28, 0x81	; 129
    1f86:	de 4f       	sbci	r29, 0xFE	; 254
    1f88:	ec 81       	ldd	r30, Y+4	; 0x04
    1f8a:	fd 81       	ldd	r31, Y+5	; 0x05
    1f8c:	80 81       	ld	r24, Z
    1f8e:	88 60       	ori	r24, 0x08	; 8
    1f90:	80 83       	st	Z, r24
    1f92:	80 e0       	ldi	r24, 0x00	; 0
    1f94:	24 c0       	rjmp	.+72     	; 0x1fde <UART_Init+0x3e8>
    1f96:	9e 01       	movw	r18, r28
    1f98:	22 0f       	add	r18, r18
    1f9a:	33 1f       	adc	r19, r19
    1f9c:	f9 01       	movw	r30, r18
    1f9e:	ec 0f       	add	r30, r28
    1fa0:	fd 1f       	adc	r31, r29
    1fa2:	ee 0f       	add	r30, r30
    1fa4:	ff 1f       	adc	r31, r31
    1fa6:	ee 0f       	add	r30, r30
    1fa8:	ff 1f       	adc	r31, r31
    1faa:	e1 58       	subi	r30, 0x81	; 129
    1fac:	fe 4f       	sbci	r31, 0xFE	; 254
    1fae:	04 80       	ldd	r0, Z+4	; 0x04
    1fb0:	f5 81       	ldd	r31, Z+5	; 0x05
    1fb2:	e0 2d       	mov	r30, r0
    1fb4:	80 81       	ld	r24, Z
    1fb6:	88 60       	ori	r24, 0x08	; 8
    1fb8:	80 83       	st	Z, r24
    1fba:	c2 0f       	add	r28, r18
    1fbc:	d3 1f       	adc	r29, r19
    1fbe:	cc 0f       	add	r28, r28
    1fc0:	dd 1f       	adc	r29, r29
    1fc2:	cc 0f       	add	r28, r28
    1fc4:	dd 1f       	adc	r29, r29
    1fc6:	c1 58       	subi	r28, 0x81	; 129
    1fc8:	de 4f       	sbci	r29, 0xFE	; 254
    1fca:	ec 81       	ldd	r30, Y+4	; 0x04
    1fcc:	fd 81       	ldd	r31, Y+5	; 0x05
    1fce:	80 81       	ld	r24, Z
    1fd0:	80 61       	ori	r24, 0x10	; 16
    1fd2:	80 83       	st	Z, r24
    1fd4:	80 e0       	ldi	r24, 0x00	; 0
    1fd6:	03 c0       	rjmp	.+6      	; 0x1fde <UART_Init+0x3e8>
    1fd8:	81 e0       	ldi	r24, 0x01	; 1
    1fda:	01 c0       	rjmp	.+2      	; 0x1fde <UART_Init+0x3e8>
    1fdc:	80 e0       	ldi	r24, 0x00	; 0
    1fde:	df 91       	pop	r29
    1fe0:	cf 91       	pop	r28
    1fe2:	1f 91       	pop	r17
    1fe4:	0f 91       	pop	r16
    1fe6:	ff 90       	pop	r15
    1fe8:	ef 90       	pop	r14
    1fea:	df 90       	pop	r13
    1fec:	cf 90       	pop	r12
    1fee:	08 95       	ret

00001ff0 <UART_Transmit>:
    1ff0:	af 92       	push	r10
    1ff2:	bf 92       	push	r11
    1ff4:	cf 92       	push	r12
    1ff6:	df 92       	push	r13
    1ff8:	ef 92       	push	r14
    1ffa:	ff 92       	push	r15
    1ffc:	0f 93       	push	r16
    1ffe:	1f 93       	push	r17
    2000:	cf 93       	push	r28
    2002:	df 93       	push	r29
    2004:	8c 01       	movw	r16, r24
    2006:	ec 01       	movw	r28, r24
    2008:	88 81       	ld	r24, Y
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	1e 8a       	std	Y+22, r1	; 0x16
    200e:	5f 87       	std	Y+15, r21	; 0x0f
    2010:	4e 87       	std	Y+14, r20	; 0x0e
    2012:	5b 8b       	std	Y+19, r21	; 0x13
    2014:	4a 8b       	std	Y+18, r20	; 0x12
    2016:	2d 81       	ldd	r18, Y+5	; 0x05
    2018:	24 30       	cpi	r18, 0x04	; 4
    201a:	41 f4       	brne	.+16     	; 0x202c <UART_Transmit+0x3c>
    201c:	2f 81       	ldd	r18, Y+7	; 0x07
    201e:	21 11       	cpse	r18, r1
    2020:	08 c0       	rjmp	.+16     	; 0x2032 <UART_Transmit+0x42>
    2022:	e6 2e       	mov	r14, r22
    2024:	f7 2e       	mov	r15, r23
    2026:	60 e0       	ldi	r22, 0x00	; 0
    2028:	70 e0       	ldi	r23, 0x00	; 0
    202a:	05 c0       	rjmp	.+10     	; 0x2036 <UART_Transmit+0x46>
    202c:	e1 2c       	mov	r14, r1
    202e:	f1 2c       	mov	r15, r1
    2030:	02 c0       	rjmp	.+4      	; 0x2036 <UART_Transmit+0x46>
    2032:	e1 2c       	mov	r14, r1
    2034:	f1 2c       	mov	r15, r1
    2036:	45 2b       	or	r20, r21
    2038:	a9 f1       	breq	.+106    	; 0x20a4 <UART_Transmit+0xb4>
    203a:	a6 2e       	mov	r10, r22
    203c:	b7 2e       	mov	r11, r23
    203e:	d7 01       	movw	r26, r14
    2040:	20 e0       	ldi	r18, 0x00	; 0
    2042:	30 e0       	ldi	r19, 0x00	; 0
    2044:	bc 01       	movw	r22, r24
    2046:	66 0f       	add	r22, r22
    2048:	77 1f       	adc	r23, r23
    204a:	68 0f       	add	r22, r24
    204c:	79 1f       	adc	r23, r25
    204e:	66 0f       	add	r22, r22
    2050:	77 1f       	adc	r23, r23
    2052:	66 0f       	add	r22, r22
    2054:	77 1f       	adc	r23, r23
    2056:	61 58       	subi	r22, 0x81	; 129
    2058:	7e 4f       	sbci	r23, 0xFE	; 254
    205a:	6b 01       	movw	r12, r22
    205c:	d2 e0       	ldi	r29, 0x02	; 2
    205e:	cd 0e       	add	r12, r29
    2060:	d1 1c       	adc	r13, r1
    2062:	e6 01       	movw	r28, r12
    2064:	e8 81       	ld	r30, Y
    2066:	f9 81       	ldd	r31, Y+1	; 0x01
    2068:	90 81       	ld	r25, Z
    206a:	95 ff       	sbrs	r25, 5
    206c:	fd cf       	rjmp	.-6      	; 0x2068 <UART_Transmit+0x78>
    206e:	e1 14       	cp	r14, r1
    2070:	f1 04       	cpc	r15, r1
    2072:	39 f4       	brne	.+14     	; 0x2082 <UART_Transmit+0x92>
    2074:	eb 01       	movw	r28, r22
    2076:	e8 81       	ld	r30, Y
    2078:	f9 81       	ldd	r31, Y+1	; 0x01
    207a:	e5 01       	movw	r28, r10
    207c:	88 81       	ld	r24, Y
    207e:	80 83       	st	Z, r24
    2080:	05 c0       	rjmp	.+10     	; 0x208c <UART_Transmit+0x9c>
    2082:	eb 01       	movw	r28, r22
    2084:	e8 81       	ld	r30, Y
    2086:	f9 81       	ldd	r31, Y+1	; 0x01
    2088:	8c 91       	ld	r24, X
    208a:	80 83       	st	Z, r24
    208c:	2f 5f       	subi	r18, 0xFF	; 255
    208e:	3f 4f       	sbci	r19, 0xFF	; 255
    2090:	df ef       	ldi	r29, 0xFF	; 255
    2092:	ad 1a       	sub	r10, r29
    2094:	bd 0a       	sbc	r11, r29
    2096:	12 96       	adiw	r26, 0x02	; 2
    2098:	f8 01       	movw	r30, r16
    209a:	42 89       	ldd	r20, Z+18	; 0x12
    209c:	53 89       	ldd	r21, Z+19	; 0x13
    209e:	24 17       	cp	r18, r20
    20a0:	35 07       	cpc	r19, r21
    20a2:	f8 f2       	brcs	.-66     	; 0x2062 <UART_Transmit+0x72>
    20a4:	80 e0       	ldi	r24, 0x00	; 0
    20a6:	df 91       	pop	r29
    20a8:	cf 91       	pop	r28
    20aa:	1f 91       	pop	r17
    20ac:	0f 91       	pop	r16
    20ae:	ff 90       	pop	r15
    20b0:	ef 90       	pop	r14
    20b2:	df 90       	pop	r13
    20b4:	cf 90       	pop	r12
    20b6:	bf 90       	pop	r11
    20b8:	af 90       	pop	r10
    20ba:	08 95       	ret

000020bc <UART_Receive>:
    20bc:	af 92       	push	r10
    20be:	bf 92       	push	r11
    20c0:	cf 92       	push	r12
    20c2:	df 92       	push	r13
    20c4:	ef 92       	push	r14
    20c6:	ff 92       	push	r15
    20c8:	0f 93       	push	r16
    20ca:	1f 93       	push	r17
    20cc:	cf 93       	push	r28
    20ce:	df 93       	push	r29
    20d0:	8c 01       	movw	r16, r24
    20d2:	ec 01       	movw	r28, r24
    20d4:	88 81       	ld	r24, Y
    20d6:	90 e0       	ldi	r25, 0x00	; 0
    20d8:	1e 8a       	std	Y+22, r1	; 0x16
    20da:	59 8b       	std	Y+17, r21	; 0x11
    20dc:	48 8b       	std	Y+16, r20	; 0x10
    20de:	5d 8b       	std	Y+21, r21	; 0x15
    20e0:	4c 8b       	std	Y+20, r20	; 0x14
    20e2:	2d 81       	ldd	r18, Y+5	; 0x05
    20e4:	24 30       	cpi	r18, 0x04	; 4
    20e6:	41 f4       	brne	.+16     	; 0x20f8 <UART_Receive+0x3c>
    20e8:	2f 81       	ldd	r18, Y+7	; 0x07
    20ea:	21 11       	cpse	r18, r1
    20ec:	08 c0       	rjmp	.+16     	; 0x20fe <UART_Receive+0x42>
    20ee:	e6 2e       	mov	r14, r22
    20f0:	f7 2e       	mov	r15, r23
    20f2:	60 e0       	ldi	r22, 0x00	; 0
    20f4:	70 e0       	ldi	r23, 0x00	; 0
    20f6:	05 c0       	rjmp	.+10     	; 0x2102 <UART_Receive+0x46>
    20f8:	e1 2c       	mov	r14, r1
    20fa:	f1 2c       	mov	r15, r1
    20fc:	02 c0       	rjmp	.+4      	; 0x2102 <UART_Receive+0x46>
    20fe:	e1 2c       	mov	r14, r1
    2100:	f1 2c       	mov	r15, r1
    2102:	f8 01       	movw	r30, r16
    2104:	22 89       	ldd	r18, Z+18	; 0x12
    2106:	33 89       	ldd	r19, Z+19	; 0x13
    2108:	23 2b       	or	r18, r19
    210a:	d9 f1       	breq	.+118    	; 0x2182 <UART_Receive+0xc6>
    210c:	a6 2e       	mov	r10, r22
    210e:	b7 2e       	mov	r11, r23
    2110:	d7 01       	movw	r26, r14
    2112:	40 e0       	ldi	r20, 0x00	; 0
    2114:	50 e0       	ldi	r21, 0x00	; 0
    2116:	bc 01       	movw	r22, r24
    2118:	66 0f       	add	r22, r22
    211a:	77 1f       	adc	r23, r23
    211c:	68 0f       	add	r22, r24
    211e:	79 1f       	adc	r23, r25
    2120:	66 0f       	add	r22, r22
    2122:	77 1f       	adc	r23, r23
    2124:	66 0f       	add	r22, r22
    2126:	77 1f       	adc	r23, r23
    2128:	61 58       	subi	r22, 0x81	; 129
    212a:	7e 4f       	sbci	r23, 0xFE	; 254
    212c:	6b 01       	movw	r12, r22
    212e:	f2 e0       	ldi	r31, 0x02	; 2
    2130:	cf 0e       	add	r12, r31
    2132:	d1 1c       	adc	r13, r1
    2134:	e6 01       	movw	r28, r12
    2136:	e8 81       	ld	r30, Y
    2138:	f9 81       	ldd	r31, Y+1	; 0x01
    213a:	90 81       	ld	r25, Z
    213c:	99 23       	and	r25, r25
    213e:	1c f0       	brlt	.+6      	; 0x2146 <UART_Receive+0x8a>
    2140:	90 81       	ld	r25, Z
    2142:	95 ff       	sbrs	r25, 5
    2144:	fa cf       	rjmp	.-12     	; 0x213a <UART_Receive+0x7e>
    2146:	e1 14       	cp	r14, r1
    2148:	f1 04       	cpc	r15, r1
    214a:	39 f4       	brne	.+14     	; 0x215a <UART_Receive+0x9e>
    214c:	eb 01       	movw	r28, r22
    214e:	e8 81       	ld	r30, Y
    2150:	f9 81       	ldd	r31, Y+1	; 0x01
    2152:	80 81       	ld	r24, Z
    2154:	f5 01       	movw	r30, r10
    2156:	80 83       	st	Z, r24
    2158:	08 c0       	rjmp	.+16     	; 0x216a <UART_Receive+0xae>
    215a:	eb 01       	movw	r28, r22
    215c:	e8 81       	ld	r30, Y
    215e:	f9 81       	ldd	r31, Y+1	; 0x01
    2160:	20 81       	ld	r18, Z
    2162:	30 e0       	ldi	r19, 0x00	; 0
    2164:	11 96       	adiw	r26, 0x01	; 1
    2166:	3c 93       	st	X, r19
    2168:	2e 93       	st	-X, r18
    216a:	4f 5f       	subi	r20, 0xFF	; 255
    216c:	5f 4f       	sbci	r21, 0xFF	; 255
    216e:	df ef       	ldi	r29, 0xFF	; 255
    2170:	ad 1a       	sub	r10, r29
    2172:	bd 0a       	sbc	r11, r29
    2174:	12 96       	adiw	r26, 0x02	; 2
    2176:	f8 01       	movw	r30, r16
    2178:	82 89       	ldd	r24, Z+18	; 0x12
    217a:	93 89       	ldd	r25, Z+19	; 0x13
    217c:	48 17       	cp	r20, r24
    217e:	59 07       	cpc	r21, r25
    2180:	c8 f2       	brcs	.-78     	; 0x2134 <UART_Receive+0x78>
    2182:	80 e0       	ldi	r24, 0x00	; 0
    2184:	df 91       	pop	r29
    2186:	cf 91       	pop	r28
    2188:	1f 91       	pop	r17
    218a:	0f 91       	pop	r16
    218c:	ff 90       	pop	r15
    218e:	ef 90       	pop	r14
    2190:	df 90       	pop	r13
    2192:	cf 90       	pop	r12
    2194:	bf 90       	pop	r11
    2196:	af 90       	pop	r10
    2198:	08 95       	ret

0000219a <UART_Receive_IT>:
    219a:	fc 01       	movw	r30, r24
    219c:	20 81       	ld	r18, Z
    219e:	30 e0       	ldi	r19, 0x00	; 0
    21a0:	75 87       	std	Z+13, r23	; 0x0d
    21a2:	64 87       	std	Z+12, r22	; 0x0c
    21a4:	51 8b       	std	Z+17, r21	; 0x11
    21a6:	40 8b       	std	Z+16, r20	; 0x10
    21a8:	55 8b       	std	Z+21, r21	; 0x15
    21aa:	44 8b       	std	Z+20, r20	; 0x14
    21ac:	f9 01       	movw	r30, r18
    21ae:	ee 0f       	add	r30, r30
    21b0:	ff 1f       	adc	r31, r31
    21b2:	e2 0f       	add	r30, r18
    21b4:	f3 1f       	adc	r31, r19
    21b6:	ee 0f       	add	r30, r30
    21b8:	ff 1f       	adc	r31, r31
    21ba:	ee 0f       	add	r30, r30
    21bc:	ff 1f       	adc	r31, r31
    21be:	e1 58       	subi	r30, 0x81	; 129
    21c0:	fe 4f       	sbci	r31, 0xFE	; 254
    21c2:	04 80       	ldd	r0, Z+4	; 0x04
    21c4:	f5 81       	ldd	r31, Z+5	; 0x05
    21c6:	e0 2d       	mov	r30, r0
    21c8:	80 81       	ld	r24, Z
    21ca:	80 68       	ori	r24, 0x80	; 128
    21cc:	80 83       	st	Z, r24
    21ce:	80 e0       	ldi	r24, 0x00	; 0
    21d0:	08 95       	ret

000021d2 <UART_TxIRQHandler>:
    21d2:	5f c9       	rjmp	.-3394   	; 0x1492 <UART_TxCpltCallback>
    21d4:	08 95       	ret

000021d6 <UART_RxIRQHandler>:
{
	UART_TxCpltCallback(huart);
}

void UART_RxIRQHandler(UART_HandleTypeDef *huart)
{
    21d6:	0f 93       	push	r16
    21d8:	1f 93       	push	r17
    21da:	cf 93       	push	r28
    21dc:	df 93       	push	r29
    21de:	ec 01       	movw	r28, r24
	UART_Receive(huart, huart->pRxBuffPtr, huart->RxXferSize, 100);
    21e0:	48 89       	ldd	r20, Y+16	; 0x10
    21e2:	59 89       	ldd	r21, Y+17	; 0x11
    21e4:	6c 85       	ldd	r22, Y+12	; 0x0c
    21e6:	7d 85       	ldd	r23, Y+13	; 0x0d
    21e8:	04 e6       	ldi	r16, 0x64	; 100
    21ea:	10 e0       	ldi	r17, 0x00	; 0
    21ec:	20 e0       	ldi	r18, 0x00	; 0
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	65 df       	rcall	.-310    	; 0x20bc <UART_Receive>
	UART_RxCpltCallback(huart);
    21f2:	ce 01       	movw	r24, r28
    21f4:	4f d9       	rcall	.-3426   	; 0x1494 <UART_RxCpltCallback>
}
    21f6:	df 91       	pop	r29
    21f8:	cf 91       	pop	r28
    21fa:	1f 91       	pop	r17
    21fc:	0f 91       	pop	r16
    21fe:	08 95       	ret

00002200 <main>:
#include "main.h"


int main(void)
{
    hwInit();
    2200:	57 d9       	rcall	.-3410   	; 0x14b0 <hwInit>
	apInit();
    2202:	0e 94 6d 00 	call	0xda	; 0xda <apInit>
	
	apMain();
    2206:	0e 94 77 00 	call	0xee	; 0xee <apMain>
}
    220a:	80 e0       	ldi	r24, 0x00	; 0
    220c:	90 e0       	ldi	r25, 0x00	; 0
    220e:	08 95       	ret

00002210 <__subsf3>:
    2210:	50 58       	subi	r21, 0x80	; 128

00002212 <__addsf3>:
    2212:	bb 27       	eor	r27, r27
    2214:	aa 27       	eor	r26, r26
    2216:	0e d0       	rcall	.+28     	; 0x2234 <__addsf3x>
    2218:	48 c1       	rjmp	.+656    	; 0x24aa <__fp_round>
    221a:	39 d1       	rcall	.+626    	; 0x248e <__fp_pscA>
    221c:	30 f0       	brcs	.+12     	; 0x222a <__addsf3+0x18>
    221e:	3e d1       	rcall	.+636    	; 0x249c <__fp_pscB>
    2220:	20 f0       	brcs	.+8      	; 0x222a <__addsf3+0x18>
    2222:	31 f4       	brne	.+12     	; 0x2230 <__addsf3+0x1e>
    2224:	9f 3f       	cpi	r25, 0xFF	; 255
    2226:	11 f4       	brne	.+4      	; 0x222c <__addsf3+0x1a>
    2228:	1e f4       	brtc	.+6      	; 0x2230 <__addsf3+0x1e>
    222a:	2e c1       	rjmp	.+604    	; 0x2488 <__fp_nan>
    222c:	0e f4       	brtc	.+2      	; 0x2230 <__addsf3+0x1e>
    222e:	e0 95       	com	r30
    2230:	e7 fb       	bst	r30, 7
    2232:	24 c1       	rjmp	.+584    	; 0x247c <__fp_inf>

00002234 <__addsf3x>:
    2234:	e9 2f       	mov	r30, r25
    2236:	4a d1       	rcall	.+660    	; 0x24cc <__fp_split3>
    2238:	80 f3       	brcs	.-32     	; 0x221a <__addsf3+0x8>
    223a:	ba 17       	cp	r27, r26
    223c:	62 07       	cpc	r22, r18
    223e:	73 07       	cpc	r23, r19
    2240:	84 07       	cpc	r24, r20
    2242:	95 07       	cpc	r25, r21
    2244:	18 f0       	brcs	.+6      	; 0x224c <__addsf3x+0x18>
    2246:	71 f4       	brne	.+28     	; 0x2264 <__addsf3x+0x30>
    2248:	9e f5       	brtc	.+102    	; 0x22b0 <__addsf3x+0x7c>
    224a:	62 c1       	rjmp	.+708    	; 0x2510 <__fp_zero>
    224c:	0e f4       	brtc	.+2      	; 0x2250 <__addsf3x+0x1c>
    224e:	e0 95       	com	r30
    2250:	0b 2e       	mov	r0, r27
    2252:	ba 2f       	mov	r27, r26
    2254:	a0 2d       	mov	r26, r0
    2256:	0b 01       	movw	r0, r22
    2258:	b9 01       	movw	r22, r18
    225a:	90 01       	movw	r18, r0
    225c:	0c 01       	movw	r0, r24
    225e:	ca 01       	movw	r24, r20
    2260:	a0 01       	movw	r20, r0
    2262:	11 24       	eor	r1, r1
    2264:	ff 27       	eor	r31, r31
    2266:	59 1b       	sub	r21, r25
    2268:	99 f0       	breq	.+38     	; 0x2290 <__addsf3x+0x5c>
    226a:	59 3f       	cpi	r21, 0xF9	; 249
    226c:	50 f4       	brcc	.+20     	; 0x2282 <__addsf3x+0x4e>
    226e:	50 3e       	cpi	r21, 0xE0	; 224
    2270:	68 f1       	brcs	.+90     	; 0x22cc <__addsf3x+0x98>
    2272:	1a 16       	cp	r1, r26
    2274:	f0 40       	sbci	r31, 0x00	; 0
    2276:	a2 2f       	mov	r26, r18
    2278:	23 2f       	mov	r18, r19
    227a:	34 2f       	mov	r19, r20
    227c:	44 27       	eor	r20, r20
    227e:	58 5f       	subi	r21, 0xF8	; 248
    2280:	f3 cf       	rjmp	.-26     	; 0x2268 <__addsf3x+0x34>
    2282:	46 95       	lsr	r20
    2284:	37 95       	ror	r19
    2286:	27 95       	ror	r18
    2288:	a7 95       	ror	r26
    228a:	f0 40       	sbci	r31, 0x00	; 0
    228c:	53 95       	inc	r21
    228e:	c9 f7       	brne	.-14     	; 0x2282 <__addsf3x+0x4e>
    2290:	7e f4       	brtc	.+30     	; 0x22b0 <__addsf3x+0x7c>
    2292:	1f 16       	cp	r1, r31
    2294:	ba 0b       	sbc	r27, r26
    2296:	62 0b       	sbc	r22, r18
    2298:	73 0b       	sbc	r23, r19
    229a:	84 0b       	sbc	r24, r20
    229c:	ba f0       	brmi	.+46     	; 0x22cc <__addsf3x+0x98>
    229e:	91 50       	subi	r25, 0x01	; 1
    22a0:	a1 f0       	breq	.+40     	; 0x22ca <__addsf3x+0x96>
    22a2:	ff 0f       	add	r31, r31
    22a4:	bb 1f       	adc	r27, r27
    22a6:	66 1f       	adc	r22, r22
    22a8:	77 1f       	adc	r23, r23
    22aa:	88 1f       	adc	r24, r24
    22ac:	c2 f7       	brpl	.-16     	; 0x229e <__addsf3x+0x6a>
    22ae:	0e c0       	rjmp	.+28     	; 0x22cc <__addsf3x+0x98>
    22b0:	ba 0f       	add	r27, r26
    22b2:	62 1f       	adc	r22, r18
    22b4:	73 1f       	adc	r23, r19
    22b6:	84 1f       	adc	r24, r20
    22b8:	48 f4       	brcc	.+18     	; 0x22cc <__addsf3x+0x98>
    22ba:	87 95       	ror	r24
    22bc:	77 95       	ror	r23
    22be:	67 95       	ror	r22
    22c0:	b7 95       	ror	r27
    22c2:	f7 95       	ror	r31
    22c4:	9e 3f       	cpi	r25, 0xFE	; 254
    22c6:	08 f0       	brcs	.+2      	; 0x22ca <__addsf3x+0x96>
    22c8:	b3 cf       	rjmp	.-154    	; 0x2230 <__addsf3+0x1e>
    22ca:	93 95       	inc	r25
    22cc:	88 0f       	add	r24, r24
    22ce:	08 f0       	brcs	.+2      	; 0x22d2 <__addsf3x+0x9e>
    22d0:	99 27       	eor	r25, r25
    22d2:	ee 0f       	add	r30, r30
    22d4:	97 95       	ror	r25
    22d6:	87 95       	ror	r24
    22d8:	08 95       	ret

000022da <__divsf3>:
    22da:	0c d0       	rcall	.+24     	; 0x22f4 <__divsf3x>
    22dc:	e6 c0       	rjmp	.+460    	; 0x24aa <__fp_round>
    22de:	de d0       	rcall	.+444    	; 0x249c <__fp_pscB>
    22e0:	40 f0       	brcs	.+16     	; 0x22f2 <__divsf3+0x18>
    22e2:	d5 d0       	rcall	.+426    	; 0x248e <__fp_pscA>
    22e4:	30 f0       	brcs	.+12     	; 0x22f2 <__divsf3+0x18>
    22e6:	21 f4       	brne	.+8      	; 0x22f0 <__divsf3+0x16>
    22e8:	5f 3f       	cpi	r21, 0xFF	; 255
    22ea:	19 f0       	breq	.+6      	; 0x22f2 <__divsf3+0x18>
    22ec:	c7 c0       	rjmp	.+398    	; 0x247c <__fp_inf>
    22ee:	51 11       	cpse	r21, r1
    22f0:	10 c1       	rjmp	.+544    	; 0x2512 <__fp_szero>
    22f2:	ca c0       	rjmp	.+404    	; 0x2488 <__fp_nan>

000022f4 <__divsf3x>:
    22f4:	eb d0       	rcall	.+470    	; 0x24cc <__fp_split3>
    22f6:	98 f3       	brcs	.-26     	; 0x22de <__divsf3+0x4>

000022f8 <__divsf3_pse>:
    22f8:	99 23       	and	r25, r25
    22fa:	c9 f3       	breq	.-14     	; 0x22ee <__divsf3+0x14>
    22fc:	55 23       	and	r21, r21
    22fe:	b1 f3       	breq	.-20     	; 0x22ec <__divsf3+0x12>
    2300:	95 1b       	sub	r25, r21
    2302:	55 0b       	sbc	r21, r21
    2304:	bb 27       	eor	r27, r27
    2306:	aa 27       	eor	r26, r26
    2308:	62 17       	cp	r22, r18
    230a:	73 07       	cpc	r23, r19
    230c:	84 07       	cpc	r24, r20
    230e:	38 f0       	brcs	.+14     	; 0x231e <__divsf3_pse+0x26>
    2310:	9f 5f       	subi	r25, 0xFF	; 255
    2312:	5f 4f       	sbci	r21, 0xFF	; 255
    2314:	22 0f       	add	r18, r18
    2316:	33 1f       	adc	r19, r19
    2318:	44 1f       	adc	r20, r20
    231a:	aa 1f       	adc	r26, r26
    231c:	a9 f3       	breq	.-22     	; 0x2308 <__divsf3_pse+0x10>
    231e:	33 d0       	rcall	.+102    	; 0x2386 <__divsf3_pse+0x8e>
    2320:	0e 2e       	mov	r0, r30
    2322:	3a f0       	brmi	.+14     	; 0x2332 <__divsf3_pse+0x3a>
    2324:	e0 e8       	ldi	r30, 0x80	; 128
    2326:	30 d0       	rcall	.+96     	; 0x2388 <__divsf3_pse+0x90>
    2328:	91 50       	subi	r25, 0x01	; 1
    232a:	50 40       	sbci	r21, 0x00	; 0
    232c:	e6 95       	lsr	r30
    232e:	00 1c       	adc	r0, r0
    2330:	ca f7       	brpl	.-14     	; 0x2324 <__divsf3_pse+0x2c>
    2332:	29 d0       	rcall	.+82     	; 0x2386 <__divsf3_pse+0x8e>
    2334:	fe 2f       	mov	r31, r30
    2336:	27 d0       	rcall	.+78     	; 0x2386 <__divsf3_pse+0x8e>
    2338:	66 0f       	add	r22, r22
    233a:	77 1f       	adc	r23, r23
    233c:	88 1f       	adc	r24, r24
    233e:	bb 1f       	adc	r27, r27
    2340:	26 17       	cp	r18, r22
    2342:	37 07       	cpc	r19, r23
    2344:	48 07       	cpc	r20, r24
    2346:	ab 07       	cpc	r26, r27
    2348:	b0 e8       	ldi	r27, 0x80	; 128
    234a:	09 f0       	breq	.+2      	; 0x234e <__divsf3_pse+0x56>
    234c:	bb 0b       	sbc	r27, r27
    234e:	80 2d       	mov	r24, r0
    2350:	bf 01       	movw	r22, r30
    2352:	ff 27       	eor	r31, r31
    2354:	93 58       	subi	r25, 0x83	; 131
    2356:	5f 4f       	sbci	r21, 0xFF	; 255
    2358:	2a f0       	brmi	.+10     	; 0x2364 <__divsf3_pse+0x6c>
    235a:	9e 3f       	cpi	r25, 0xFE	; 254
    235c:	51 05       	cpc	r21, r1
    235e:	68 f0       	brcs	.+26     	; 0x237a <__divsf3_pse+0x82>
    2360:	8d c0       	rjmp	.+282    	; 0x247c <__fp_inf>
    2362:	d7 c0       	rjmp	.+430    	; 0x2512 <__fp_szero>
    2364:	5f 3f       	cpi	r21, 0xFF	; 255
    2366:	ec f3       	brlt	.-6      	; 0x2362 <__divsf3_pse+0x6a>
    2368:	98 3e       	cpi	r25, 0xE8	; 232
    236a:	dc f3       	brlt	.-10     	; 0x2362 <__divsf3_pse+0x6a>
    236c:	86 95       	lsr	r24
    236e:	77 95       	ror	r23
    2370:	67 95       	ror	r22
    2372:	b7 95       	ror	r27
    2374:	f7 95       	ror	r31
    2376:	9f 5f       	subi	r25, 0xFF	; 255
    2378:	c9 f7       	brne	.-14     	; 0x236c <__divsf3_pse+0x74>
    237a:	88 0f       	add	r24, r24
    237c:	91 1d       	adc	r25, r1
    237e:	96 95       	lsr	r25
    2380:	87 95       	ror	r24
    2382:	97 f9       	bld	r25, 7
    2384:	08 95       	ret
    2386:	e1 e0       	ldi	r30, 0x01	; 1
    2388:	66 0f       	add	r22, r22
    238a:	77 1f       	adc	r23, r23
    238c:	88 1f       	adc	r24, r24
    238e:	bb 1f       	adc	r27, r27
    2390:	62 17       	cp	r22, r18
    2392:	73 07       	cpc	r23, r19
    2394:	84 07       	cpc	r24, r20
    2396:	ba 07       	cpc	r27, r26
    2398:	20 f0       	brcs	.+8      	; 0x23a2 <__divsf3_pse+0xaa>
    239a:	62 1b       	sub	r22, r18
    239c:	73 0b       	sbc	r23, r19
    239e:	84 0b       	sbc	r24, r20
    23a0:	ba 0b       	sbc	r27, r26
    23a2:	ee 1f       	adc	r30, r30
    23a4:	88 f7       	brcc	.-30     	; 0x2388 <__divsf3_pse+0x90>
    23a6:	e0 95       	com	r30
    23a8:	08 95       	ret

000023aa <__fixunssfsi>:
    23aa:	98 d0       	rcall	.+304    	; 0x24dc <__fp_splitA>
    23ac:	88 f0       	brcs	.+34     	; 0x23d0 <__fixunssfsi+0x26>
    23ae:	9f 57       	subi	r25, 0x7F	; 127
    23b0:	90 f0       	brcs	.+36     	; 0x23d6 <__fixunssfsi+0x2c>
    23b2:	b9 2f       	mov	r27, r25
    23b4:	99 27       	eor	r25, r25
    23b6:	b7 51       	subi	r27, 0x17	; 23
    23b8:	a0 f0       	brcs	.+40     	; 0x23e2 <__fixunssfsi+0x38>
    23ba:	d1 f0       	breq	.+52     	; 0x23f0 <__fixunssfsi+0x46>
    23bc:	66 0f       	add	r22, r22
    23be:	77 1f       	adc	r23, r23
    23c0:	88 1f       	adc	r24, r24
    23c2:	99 1f       	adc	r25, r25
    23c4:	1a f0       	brmi	.+6      	; 0x23cc <__fixunssfsi+0x22>
    23c6:	ba 95       	dec	r27
    23c8:	c9 f7       	brne	.-14     	; 0x23bc <__fixunssfsi+0x12>
    23ca:	12 c0       	rjmp	.+36     	; 0x23f0 <__fixunssfsi+0x46>
    23cc:	b1 30       	cpi	r27, 0x01	; 1
    23ce:	81 f0       	breq	.+32     	; 0x23f0 <__fixunssfsi+0x46>
    23d0:	9f d0       	rcall	.+318    	; 0x2510 <__fp_zero>
    23d2:	b1 e0       	ldi	r27, 0x01	; 1
    23d4:	08 95       	ret
    23d6:	9c c0       	rjmp	.+312    	; 0x2510 <__fp_zero>
    23d8:	67 2f       	mov	r22, r23
    23da:	78 2f       	mov	r23, r24
    23dc:	88 27       	eor	r24, r24
    23de:	b8 5f       	subi	r27, 0xF8	; 248
    23e0:	39 f0       	breq	.+14     	; 0x23f0 <__fixunssfsi+0x46>
    23e2:	b9 3f       	cpi	r27, 0xF9	; 249
    23e4:	cc f3       	brlt	.-14     	; 0x23d8 <__fixunssfsi+0x2e>
    23e6:	86 95       	lsr	r24
    23e8:	77 95       	ror	r23
    23ea:	67 95       	ror	r22
    23ec:	b3 95       	inc	r27
    23ee:	d9 f7       	brne	.-10     	; 0x23e6 <__fixunssfsi+0x3c>
    23f0:	3e f4       	brtc	.+14     	; 0x2400 <__fixunssfsi+0x56>
    23f2:	90 95       	com	r25
    23f4:	80 95       	com	r24
    23f6:	70 95       	com	r23
    23f8:	61 95       	neg	r22
    23fa:	7f 4f       	sbci	r23, 0xFF	; 255
    23fc:	8f 4f       	sbci	r24, 0xFF	; 255
    23fe:	9f 4f       	sbci	r25, 0xFF	; 255
    2400:	08 95       	ret

00002402 <__floatunsisf>:
    2402:	e8 94       	clt
    2404:	09 c0       	rjmp	.+18     	; 0x2418 <__floatsisf+0x12>

00002406 <__floatsisf>:
    2406:	97 fb       	bst	r25, 7
    2408:	3e f4       	brtc	.+14     	; 0x2418 <__floatsisf+0x12>
    240a:	90 95       	com	r25
    240c:	80 95       	com	r24
    240e:	70 95       	com	r23
    2410:	61 95       	neg	r22
    2412:	7f 4f       	sbci	r23, 0xFF	; 255
    2414:	8f 4f       	sbci	r24, 0xFF	; 255
    2416:	9f 4f       	sbci	r25, 0xFF	; 255
    2418:	99 23       	and	r25, r25
    241a:	a9 f0       	breq	.+42     	; 0x2446 <__floatsisf+0x40>
    241c:	f9 2f       	mov	r31, r25
    241e:	96 e9       	ldi	r25, 0x96	; 150
    2420:	bb 27       	eor	r27, r27
    2422:	93 95       	inc	r25
    2424:	f6 95       	lsr	r31
    2426:	87 95       	ror	r24
    2428:	77 95       	ror	r23
    242a:	67 95       	ror	r22
    242c:	b7 95       	ror	r27
    242e:	f1 11       	cpse	r31, r1
    2430:	f8 cf       	rjmp	.-16     	; 0x2422 <__floatsisf+0x1c>
    2432:	fa f4       	brpl	.+62     	; 0x2472 <__floatsisf+0x6c>
    2434:	bb 0f       	add	r27, r27
    2436:	11 f4       	brne	.+4      	; 0x243c <__floatsisf+0x36>
    2438:	60 ff       	sbrs	r22, 0
    243a:	1b c0       	rjmp	.+54     	; 0x2472 <__floatsisf+0x6c>
    243c:	6f 5f       	subi	r22, 0xFF	; 255
    243e:	7f 4f       	sbci	r23, 0xFF	; 255
    2440:	8f 4f       	sbci	r24, 0xFF	; 255
    2442:	9f 4f       	sbci	r25, 0xFF	; 255
    2444:	16 c0       	rjmp	.+44     	; 0x2472 <__floatsisf+0x6c>
    2446:	88 23       	and	r24, r24
    2448:	11 f0       	breq	.+4      	; 0x244e <__floatsisf+0x48>
    244a:	96 e9       	ldi	r25, 0x96	; 150
    244c:	11 c0       	rjmp	.+34     	; 0x2470 <__floatsisf+0x6a>
    244e:	77 23       	and	r23, r23
    2450:	21 f0       	breq	.+8      	; 0x245a <__floatsisf+0x54>
    2452:	9e e8       	ldi	r25, 0x8E	; 142
    2454:	87 2f       	mov	r24, r23
    2456:	76 2f       	mov	r23, r22
    2458:	05 c0       	rjmp	.+10     	; 0x2464 <__floatsisf+0x5e>
    245a:	66 23       	and	r22, r22
    245c:	71 f0       	breq	.+28     	; 0x247a <__floatsisf+0x74>
    245e:	96 e8       	ldi	r25, 0x86	; 134
    2460:	86 2f       	mov	r24, r22
    2462:	70 e0       	ldi	r23, 0x00	; 0
    2464:	60 e0       	ldi	r22, 0x00	; 0
    2466:	2a f0       	brmi	.+10     	; 0x2472 <__floatsisf+0x6c>
    2468:	9a 95       	dec	r25
    246a:	66 0f       	add	r22, r22
    246c:	77 1f       	adc	r23, r23
    246e:	88 1f       	adc	r24, r24
    2470:	da f7       	brpl	.-10     	; 0x2468 <__floatsisf+0x62>
    2472:	88 0f       	add	r24, r24
    2474:	96 95       	lsr	r25
    2476:	87 95       	ror	r24
    2478:	97 f9       	bld	r25, 7
    247a:	08 95       	ret

0000247c <__fp_inf>:
    247c:	97 f9       	bld	r25, 7
    247e:	9f 67       	ori	r25, 0x7F	; 127
    2480:	80 e8       	ldi	r24, 0x80	; 128
    2482:	70 e0       	ldi	r23, 0x00	; 0
    2484:	60 e0       	ldi	r22, 0x00	; 0
    2486:	08 95       	ret

00002488 <__fp_nan>:
    2488:	9f ef       	ldi	r25, 0xFF	; 255
    248a:	80 ec       	ldi	r24, 0xC0	; 192
    248c:	08 95       	ret

0000248e <__fp_pscA>:
    248e:	00 24       	eor	r0, r0
    2490:	0a 94       	dec	r0
    2492:	16 16       	cp	r1, r22
    2494:	17 06       	cpc	r1, r23
    2496:	18 06       	cpc	r1, r24
    2498:	09 06       	cpc	r0, r25
    249a:	08 95       	ret

0000249c <__fp_pscB>:
    249c:	00 24       	eor	r0, r0
    249e:	0a 94       	dec	r0
    24a0:	12 16       	cp	r1, r18
    24a2:	13 06       	cpc	r1, r19
    24a4:	14 06       	cpc	r1, r20
    24a6:	05 06       	cpc	r0, r21
    24a8:	08 95       	ret

000024aa <__fp_round>:
    24aa:	09 2e       	mov	r0, r25
    24ac:	03 94       	inc	r0
    24ae:	00 0c       	add	r0, r0
    24b0:	11 f4       	brne	.+4      	; 0x24b6 <__fp_round+0xc>
    24b2:	88 23       	and	r24, r24
    24b4:	52 f0       	brmi	.+20     	; 0x24ca <__fp_round+0x20>
    24b6:	bb 0f       	add	r27, r27
    24b8:	40 f4       	brcc	.+16     	; 0x24ca <__fp_round+0x20>
    24ba:	bf 2b       	or	r27, r31
    24bc:	11 f4       	brne	.+4      	; 0x24c2 <__fp_round+0x18>
    24be:	60 ff       	sbrs	r22, 0
    24c0:	04 c0       	rjmp	.+8      	; 0x24ca <__fp_round+0x20>
    24c2:	6f 5f       	subi	r22, 0xFF	; 255
    24c4:	7f 4f       	sbci	r23, 0xFF	; 255
    24c6:	8f 4f       	sbci	r24, 0xFF	; 255
    24c8:	9f 4f       	sbci	r25, 0xFF	; 255
    24ca:	08 95       	ret

000024cc <__fp_split3>:
    24cc:	57 fd       	sbrc	r21, 7
    24ce:	90 58       	subi	r25, 0x80	; 128
    24d0:	44 0f       	add	r20, r20
    24d2:	55 1f       	adc	r21, r21
    24d4:	59 f0       	breq	.+22     	; 0x24ec <__fp_splitA+0x10>
    24d6:	5f 3f       	cpi	r21, 0xFF	; 255
    24d8:	71 f0       	breq	.+28     	; 0x24f6 <__fp_splitA+0x1a>
    24da:	47 95       	ror	r20

000024dc <__fp_splitA>:
    24dc:	88 0f       	add	r24, r24
    24de:	97 fb       	bst	r25, 7
    24e0:	99 1f       	adc	r25, r25
    24e2:	61 f0       	breq	.+24     	; 0x24fc <__fp_splitA+0x20>
    24e4:	9f 3f       	cpi	r25, 0xFF	; 255
    24e6:	79 f0       	breq	.+30     	; 0x2506 <__fp_splitA+0x2a>
    24e8:	87 95       	ror	r24
    24ea:	08 95       	ret
    24ec:	12 16       	cp	r1, r18
    24ee:	13 06       	cpc	r1, r19
    24f0:	14 06       	cpc	r1, r20
    24f2:	55 1f       	adc	r21, r21
    24f4:	f2 cf       	rjmp	.-28     	; 0x24da <__fp_split3+0xe>
    24f6:	46 95       	lsr	r20
    24f8:	f1 df       	rcall	.-30     	; 0x24dc <__fp_splitA>
    24fa:	08 c0       	rjmp	.+16     	; 0x250c <__fp_splitA+0x30>
    24fc:	16 16       	cp	r1, r22
    24fe:	17 06       	cpc	r1, r23
    2500:	18 06       	cpc	r1, r24
    2502:	99 1f       	adc	r25, r25
    2504:	f1 cf       	rjmp	.-30     	; 0x24e8 <__fp_splitA+0xc>
    2506:	86 95       	lsr	r24
    2508:	71 05       	cpc	r23, r1
    250a:	61 05       	cpc	r22, r1
    250c:	08 94       	sec
    250e:	08 95       	ret

00002510 <__fp_zero>:
    2510:	e8 94       	clt

00002512 <__fp_szero>:
    2512:	bb 27       	eor	r27, r27
    2514:	66 27       	eor	r22, r22
    2516:	77 27       	eor	r23, r23
    2518:	cb 01       	movw	r24, r22
    251a:	97 f9       	bld	r25, 7
    251c:	08 95       	ret

0000251e <__divmodhi4>:
    251e:	97 fb       	bst	r25, 7
    2520:	07 2e       	mov	r0, r23
    2522:	16 f4       	brtc	.+4      	; 0x2528 <__divmodhi4+0xa>
    2524:	00 94       	com	r0
    2526:	06 d0       	rcall	.+12     	; 0x2534 <__divmodhi4_neg1>
    2528:	77 fd       	sbrc	r23, 7
    252a:	08 d0       	rcall	.+16     	; 0x253c <__divmodhi4_neg2>
    252c:	36 d0       	rcall	.+108    	; 0x259a <__udivmodhi4>
    252e:	07 fc       	sbrc	r0, 7
    2530:	05 d0       	rcall	.+10     	; 0x253c <__divmodhi4_neg2>
    2532:	3e f4       	brtc	.+14     	; 0x2542 <__divmodhi4_exit>

00002534 <__divmodhi4_neg1>:
    2534:	90 95       	com	r25
    2536:	81 95       	neg	r24
    2538:	9f 4f       	sbci	r25, 0xFF	; 255
    253a:	08 95       	ret

0000253c <__divmodhi4_neg2>:
    253c:	70 95       	com	r23
    253e:	61 95       	neg	r22
    2540:	7f 4f       	sbci	r23, 0xFF	; 255

00002542 <__divmodhi4_exit>:
    2542:	08 95       	ret

00002544 <__udivmodsi4>:
    2544:	a1 e2       	ldi	r26, 0x21	; 33
    2546:	1a 2e       	mov	r1, r26
    2548:	aa 1b       	sub	r26, r26
    254a:	bb 1b       	sub	r27, r27
    254c:	fd 01       	movw	r30, r26
    254e:	0d c0       	rjmp	.+26     	; 0x256a <__udivmodsi4_ep>

00002550 <__udivmodsi4_loop>:
    2550:	aa 1f       	adc	r26, r26
    2552:	bb 1f       	adc	r27, r27
    2554:	ee 1f       	adc	r30, r30
    2556:	ff 1f       	adc	r31, r31
    2558:	a2 17       	cp	r26, r18
    255a:	b3 07       	cpc	r27, r19
    255c:	e4 07       	cpc	r30, r20
    255e:	f5 07       	cpc	r31, r21
    2560:	20 f0       	brcs	.+8      	; 0x256a <__udivmodsi4_ep>
    2562:	a2 1b       	sub	r26, r18
    2564:	b3 0b       	sbc	r27, r19
    2566:	e4 0b       	sbc	r30, r20
    2568:	f5 0b       	sbc	r31, r21

0000256a <__udivmodsi4_ep>:
    256a:	66 1f       	adc	r22, r22
    256c:	77 1f       	adc	r23, r23
    256e:	88 1f       	adc	r24, r24
    2570:	99 1f       	adc	r25, r25
    2572:	1a 94       	dec	r1
    2574:	69 f7       	brne	.-38     	; 0x2550 <__udivmodsi4_loop>
    2576:	60 95       	com	r22
    2578:	70 95       	com	r23
    257a:	80 95       	com	r24
    257c:	90 95       	com	r25
    257e:	9b 01       	movw	r18, r22
    2580:	ac 01       	movw	r20, r24
    2582:	bd 01       	movw	r22, r26
    2584:	cf 01       	movw	r24, r30
    2586:	08 95       	ret

00002588 <__tablejump2__>:
    2588:	ee 0f       	add	r30, r30
    258a:	ff 1f       	adc	r31, r31
    258c:	00 24       	eor	r0, r0
    258e:	00 1c       	adc	r0, r0
    2590:	0b be       	out	0x3b, r0	; 59
    2592:	07 90       	elpm	r0, Z+
    2594:	f6 91       	elpm	r31, Z
    2596:	e0 2d       	mov	r30, r0
    2598:	09 94       	ijmp

0000259a <__udivmodhi4>:
    259a:	aa 1b       	sub	r26, r26
    259c:	bb 1b       	sub	r27, r27
    259e:	51 e1       	ldi	r21, 0x11	; 17
    25a0:	07 c0       	rjmp	.+14     	; 0x25b0 <__udivmodhi4_ep>

000025a2 <__udivmodhi4_loop>:
    25a2:	aa 1f       	adc	r26, r26
    25a4:	bb 1f       	adc	r27, r27
    25a6:	a6 17       	cp	r26, r22
    25a8:	b7 07       	cpc	r27, r23
    25aa:	10 f0       	brcs	.+4      	; 0x25b0 <__udivmodhi4_ep>
    25ac:	a6 1b       	sub	r26, r22
    25ae:	b7 0b       	sbc	r27, r23

000025b0 <__udivmodhi4_ep>:
    25b0:	88 1f       	adc	r24, r24
    25b2:	99 1f       	adc	r25, r25
    25b4:	5a 95       	dec	r21
    25b6:	a9 f7       	brne	.-22     	; 0x25a2 <__udivmodhi4_loop>
    25b8:	80 95       	com	r24
    25ba:	90 95       	com	r25
    25bc:	bc 01       	movw	r22, r24
    25be:	cd 01       	movw	r24, r26
    25c0:	08 95       	ret

000025c2 <vsnprintf>:
    25c2:	0f 93       	push	r16
    25c4:	1f 93       	push	r17
    25c6:	cf 93       	push	r28
    25c8:	df 93       	push	r29
    25ca:	cd b7       	in	r28, 0x3d	; 61
    25cc:	de b7       	in	r29, 0x3e	; 62
    25ce:	2e 97       	sbiw	r28, 0x0e	; 14
    25d0:	0f b6       	in	r0, 0x3f	; 63
    25d2:	f8 94       	cli
    25d4:	de bf       	out	0x3e, r29	; 62
    25d6:	0f be       	out	0x3f, r0	; 63
    25d8:	cd bf       	out	0x3d, r28	; 61
    25da:	8c 01       	movw	r16, r24
    25dc:	fa 01       	movw	r30, r20
    25de:	86 e0       	ldi	r24, 0x06	; 6
    25e0:	8c 83       	std	Y+4, r24	; 0x04
    25e2:	1a 83       	std	Y+2, r17	; 0x02
    25e4:	09 83       	std	Y+1, r16	; 0x01
    25e6:	77 ff       	sbrs	r23, 7
    25e8:	02 c0       	rjmp	.+4      	; 0x25ee <vsnprintf+0x2c>
    25ea:	60 e0       	ldi	r22, 0x00	; 0
    25ec:	70 e8       	ldi	r23, 0x80	; 128
    25ee:	cb 01       	movw	r24, r22
    25f0:	01 97       	sbiw	r24, 0x01	; 1
    25f2:	9e 83       	std	Y+6, r25	; 0x06
    25f4:	8d 83       	std	Y+5, r24	; 0x05
    25f6:	a9 01       	movw	r20, r18
    25f8:	bf 01       	movw	r22, r30
    25fa:	ce 01       	movw	r24, r28
    25fc:	01 96       	adiw	r24, 0x01	; 1
    25fe:	19 d0       	rcall	.+50     	; 0x2632 <vfprintf>
    2600:	4d 81       	ldd	r20, Y+5	; 0x05
    2602:	5e 81       	ldd	r21, Y+6	; 0x06
    2604:	57 fd       	sbrc	r21, 7
    2606:	0a c0       	rjmp	.+20     	; 0x261c <vsnprintf+0x5a>
    2608:	2f 81       	ldd	r18, Y+7	; 0x07
    260a:	38 85       	ldd	r19, Y+8	; 0x08
    260c:	42 17       	cp	r20, r18
    260e:	53 07       	cpc	r21, r19
    2610:	0c f4       	brge	.+2      	; 0x2614 <vsnprintf+0x52>
    2612:	9a 01       	movw	r18, r20
    2614:	f8 01       	movw	r30, r16
    2616:	e2 0f       	add	r30, r18
    2618:	f3 1f       	adc	r31, r19
    261a:	10 82       	st	Z, r1
    261c:	2e 96       	adiw	r28, 0x0e	; 14
    261e:	0f b6       	in	r0, 0x3f	; 63
    2620:	f8 94       	cli
    2622:	de bf       	out	0x3e, r29	; 62
    2624:	0f be       	out	0x3f, r0	; 63
    2626:	cd bf       	out	0x3d, r28	; 61
    2628:	df 91       	pop	r29
    262a:	cf 91       	pop	r28
    262c:	1f 91       	pop	r17
    262e:	0f 91       	pop	r16
    2630:	08 95       	ret

00002632 <vfprintf>:
    2632:	2f 92       	push	r2
    2634:	3f 92       	push	r3
    2636:	4f 92       	push	r4
    2638:	5f 92       	push	r5
    263a:	6f 92       	push	r6
    263c:	7f 92       	push	r7
    263e:	8f 92       	push	r8
    2640:	9f 92       	push	r9
    2642:	af 92       	push	r10
    2644:	bf 92       	push	r11
    2646:	cf 92       	push	r12
    2648:	df 92       	push	r13
    264a:	ef 92       	push	r14
    264c:	ff 92       	push	r15
    264e:	0f 93       	push	r16
    2650:	1f 93       	push	r17
    2652:	cf 93       	push	r28
    2654:	df 93       	push	r29
    2656:	cd b7       	in	r28, 0x3d	; 61
    2658:	de b7       	in	r29, 0x3e	; 62
    265a:	2b 97       	sbiw	r28, 0x0b	; 11
    265c:	0f b6       	in	r0, 0x3f	; 63
    265e:	f8 94       	cli
    2660:	de bf       	out	0x3e, r29	; 62
    2662:	0f be       	out	0x3f, r0	; 63
    2664:	cd bf       	out	0x3d, r28	; 61
    2666:	6c 01       	movw	r12, r24
    2668:	7b 01       	movw	r14, r22
    266a:	8a 01       	movw	r16, r20
    266c:	fc 01       	movw	r30, r24
    266e:	17 82       	std	Z+7, r1	; 0x07
    2670:	16 82       	std	Z+6, r1	; 0x06
    2672:	83 81       	ldd	r24, Z+3	; 0x03
    2674:	81 ff       	sbrs	r24, 1
    2676:	bf c1       	rjmp	.+894    	; 0x29f6 <vfprintf+0x3c4>
    2678:	ce 01       	movw	r24, r28
    267a:	01 96       	adiw	r24, 0x01	; 1
    267c:	3c 01       	movw	r6, r24
    267e:	f6 01       	movw	r30, r12
    2680:	93 81       	ldd	r25, Z+3	; 0x03
    2682:	f7 01       	movw	r30, r14
    2684:	93 fd       	sbrc	r25, 3
    2686:	85 91       	lpm	r24, Z+
    2688:	93 ff       	sbrs	r25, 3
    268a:	81 91       	ld	r24, Z+
    268c:	7f 01       	movw	r14, r30
    268e:	88 23       	and	r24, r24
    2690:	09 f4       	brne	.+2      	; 0x2694 <vfprintf+0x62>
    2692:	ad c1       	rjmp	.+858    	; 0x29ee <vfprintf+0x3bc>
    2694:	85 32       	cpi	r24, 0x25	; 37
    2696:	39 f4       	brne	.+14     	; 0x26a6 <vfprintf+0x74>
    2698:	93 fd       	sbrc	r25, 3
    269a:	85 91       	lpm	r24, Z+
    269c:	93 ff       	sbrs	r25, 3
    269e:	81 91       	ld	r24, Z+
    26a0:	7f 01       	movw	r14, r30
    26a2:	85 32       	cpi	r24, 0x25	; 37
    26a4:	21 f4       	brne	.+8      	; 0x26ae <vfprintf+0x7c>
    26a6:	b6 01       	movw	r22, r12
    26a8:	90 e0       	ldi	r25, 0x00	; 0
    26aa:	d6 d1       	rcall	.+940    	; 0x2a58 <fputc>
    26ac:	e8 cf       	rjmp	.-48     	; 0x267e <vfprintf+0x4c>
    26ae:	91 2c       	mov	r9, r1
    26b0:	21 2c       	mov	r2, r1
    26b2:	31 2c       	mov	r3, r1
    26b4:	ff e1       	ldi	r31, 0x1F	; 31
    26b6:	f3 15       	cp	r31, r3
    26b8:	d8 f0       	brcs	.+54     	; 0x26f0 <vfprintf+0xbe>
    26ba:	8b 32       	cpi	r24, 0x2B	; 43
    26bc:	79 f0       	breq	.+30     	; 0x26dc <vfprintf+0xaa>
    26be:	38 f4       	brcc	.+14     	; 0x26ce <vfprintf+0x9c>
    26c0:	80 32       	cpi	r24, 0x20	; 32
    26c2:	79 f0       	breq	.+30     	; 0x26e2 <vfprintf+0xb0>
    26c4:	83 32       	cpi	r24, 0x23	; 35
    26c6:	a1 f4       	brne	.+40     	; 0x26f0 <vfprintf+0xbe>
    26c8:	23 2d       	mov	r18, r3
    26ca:	20 61       	ori	r18, 0x10	; 16
    26cc:	1d c0       	rjmp	.+58     	; 0x2708 <vfprintf+0xd6>
    26ce:	8d 32       	cpi	r24, 0x2D	; 45
    26d0:	61 f0       	breq	.+24     	; 0x26ea <vfprintf+0xb8>
    26d2:	80 33       	cpi	r24, 0x30	; 48
    26d4:	69 f4       	brne	.+26     	; 0x26f0 <vfprintf+0xbe>
    26d6:	23 2d       	mov	r18, r3
    26d8:	21 60       	ori	r18, 0x01	; 1
    26da:	16 c0       	rjmp	.+44     	; 0x2708 <vfprintf+0xd6>
    26dc:	83 2d       	mov	r24, r3
    26de:	82 60       	ori	r24, 0x02	; 2
    26e0:	38 2e       	mov	r3, r24
    26e2:	e3 2d       	mov	r30, r3
    26e4:	e4 60       	ori	r30, 0x04	; 4
    26e6:	3e 2e       	mov	r3, r30
    26e8:	2a c0       	rjmp	.+84     	; 0x273e <vfprintf+0x10c>
    26ea:	f3 2d       	mov	r31, r3
    26ec:	f8 60       	ori	r31, 0x08	; 8
    26ee:	1d c0       	rjmp	.+58     	; 0x272a <vfprintf+0xf8>
    26f0:	37 fc       	sbrc	r3, 7
    26f2:	2d c0       	rjmp	.+90     	; 0x274e <vfprintf+0x11c>
    26f4:	20 ed       	ldi	r18, 0xD0	; 208
    26f6:	28 0f       	add	r18, r24
    26f8:	2a 30       	cpi	r18, 0x0A	; 10
    26fa:	40 f0       	brcs	.+16     	; 0x270c <vfprintf+0xda>
    26fc:	8e 32       	cpi	r24, 0x2E	; 46
    26fe:	b9 f4       	brne	.+46     	; 0x272e <vfprintf+0xfc>
    2700:	36 fc       	sbrc	r3, 6
    2702:	75 c1       	rjmp	.+746    	; 0x29ee <vfprintf+0x3bc>
    2704:	23 2d       	mov	r18, r3
    2706:	20 64       	ori	r18, 0x40	; 64
    2708:	32 2e       	mov	r3, r18
    270a:	19 c0       	rjmp	.+50     	; 0x273e <vfprintf+0x10c>
    270c:	36 fe       	sbrs	r3, 6
    270e:	06 c0       	rjmp	.+12     	; 0x271c <vfprintf+0xea>
    2710:	8a e0       	ldi	r24, 0x0A	; 10
    2712:	98 9e       	mul	r9, r24
    2714:	20 0d       	add	r18, r0
    2716:	11 24       	eor	r1, r1
    2718:	92 2e       	mov	r9, r18
    271a:	11 c0       	rjmp	.+34     	; 0x273e <vfprintf+0x10c>
    271c:	ea e0       	ldi	r30, 0x0A	; 10
    271e:	2e 9e       	mul	r2, r30
    2720:	20 0d       	add	r18, r0
    2722:	11 24       	eor	r1, r1
    2724:	22 2e       	mov	r2, r18
    2726:	f3 2d       	mov	r31, r3
    2728:	f0 62       	ori	r31, 0x20	; 32
    272a:	3f 2e       	mov	r3, r31
    272c:	08 c0       	rjmp	.+16     	; 0x273e <vfprintf+0x10c>
    272e:	8c 36       	cpi	r24, 0x6C	; 108
    2730:	21 f4       	brne	.+8      	; 0x273a <vfprintf+0x108>
    2732:	83 2d       	mov	r24, r3
    2734:	80 68       	ori	r24, 0x80	; 128
    2736:	38 2e       	mov	r3, r24
    2738:	02 c0       	rjmp	.+4      	; 0x273e <vfprintf+0x10c>
    273a:	88 36       	cpi	r24, 0x68	; 104
    273c:	41 f4       	brne	.+16     	; 0x274e <vfprintf+0x11c>
    273e:	f7 01       	movw	r30, r14
    2740:	93 fd       	sbrc	r25, 3
    2742:	85 91       	lpm	r24, Z+
    2744:	93 ff       	sbrs	r25, 3
    2746:	81 91       	ld	r24, Z+
    2748:	7f 01       	movw	r14, r30
    274a:	81 11       	cpse	r24, r1
    274c:	b3 cf       	rjmp	.-154    	; 0x26b4 <vfprintf+0x82>
    274e:	98 2f       	mov	r25, r24
    2750:	9f 7d       	andi	r25, 0xDF	; 223
    2752:	95 54       	subi	r25, 0x45	; 69
    2754:	93 30       	cpi	r25, 0x03	; 3
    2756:	28 f4       	brcc	.+10     	; 0x2762 <vfprintf+0x130>
    2758:	0c 5f       	subi	r16, 0xFC	; 252
    275a:	1f 4f       	sbci	r17, 0xFF	; 255
    275c:	9f e3       	ldi	r25, 0x3F	; 63
    275e:	99 83       	std	Y+1, r25	; 0x01
    2760:	0d c0       	rjmp	.+26     	; 0x277c <vfprintf+0x14a>
    2762:	83 36       	cpi	r24, 0x63	; 99
    2764:	31 f0       	breq	.+12     	; 0x2772 <vfprintf+0x140>
    2766:	83 37       	cpi	r24, 0x73	; 115
    2768:	71 f0       	breq	.+28     	; 0x2786 <vfprintf+0x154>
    276a:	83 35       	cpi	r24, 0x53	; 83
    276c:	09 f0       	breq	.+2      	; 0x2770 <vfprintf+0x13e>
    276e:	55 c0       	rjmp	.+170    	; 0x281a <vfprintf+0x1e8>
    2770:	20 c0       	rjmp	.+64     	; 0x27b2 <vfprintf+0x180>
    2772:	f8 01       	movw	r30, r16
    2774:	80 81       	ld	r24, Z
    2776:	89 83       	std	Y+1, r24	; 0x01
    2778:	0e 5f       	subi	r16, 0xFE	; 254
    277a:	1f 4f       	sbci	r17, 0xFF	; 255
    277c:	88 24       	eor	r8, r8
    277e:	83 94       	inc	r8
    2780:	91 2c       	mov	r9, r1
    2782:	53 01       	movw	r10, r6
    2784:	12 c0       	rjmp	.+36     	; 0x27aa <vfprintf+0x178>
    2786:	28 01       	movw	r4, r16
    2788:	f2 e0       	ldi	r31, 0x02	; 2
    278a:	4f 0e       	add	r4, r31
    278c:	51 1c       	adc	r5, r1
    278e:	f8 01       	movw	r30, r16
    2790:	a0 80       	ld	r10, Z
    2792:	b1 80       	ldd	r11, Z+1	; 0x01
    2794:	36 fe       	sbrs	r3, 6
    2796:	03 c0       	rjmp	.+6      	; 0x279e <vfprintf+0x16c>
    2798:	69 2d       	mov	r22, r9
    279a:	70 e0       	ldi	r23, 0x00	; 0
    279c:	02 c0       	rjmp	.+4      	; 0x27a2 <vfprintf+0x170>
    279e:	6f ef       	ldi	r22, 0xFF	; 255
    27a0:	7f ef       	ldi	r23, 0xFF	; 255
    27a2:	c5 01       	movw	r24, r10
    27a4:	4e d1       	rcall	.+668    	; 0x2a42 <strnlen>
    27a6:	4c 01       	movw	r8, r24
    27a8:	82 01       	movw	r16, r4
    27aa:	f3 2d       	mov	r31, r3
    27ac:	ff 77       	andi	r31, 0x7F	; 127
    27ae:	3f 2e       	mov	r3, r31
    27b0:	15 c0       	rjmp	.+42     	; 0x27dc <vfprintf+0x1aa>
    27b2:	28 01       	movw	r4, r16
    27b4:	22 e0       	ldi	r18, 0x02	; 2
    27b6:	42 0e       	add	r4, r18
    27b8:	51 1c       	adc	r5, r1
    27ba:	f8 01       	movw	r30, r16
    27bc:	a0 80       	ld	r10, Z
    27be:	b1 80       	ldd	r11, Z+1	; 0x01
    27c0:	36 fe       	sbrs	r3, 6
    27c2:	03 c0       	rjmp	.+6      	; 0x27ca <vfprintf+0x198>
    27c4:	69 2d       	mov	r22, r9
    27c6:	70 e0       	ldi	r23, 0x00	; 0
    27c8:	02 c0       	rjmp	.+4      	; 0x27ce <vfprintf+0x19c>
    27ca:	6f ef       	ldi	r22, 0xFF	; 255
    27cc:	7f ef       	ldi	r23, 0xFF	; 255
    27ce:	c5 01       	movw	r24, r10
    27d0:	2d d1       	rcall	.+602    	; 0x2a2c <strnlen_P>
    27d2:	4c 01       	movw	r8, r24
    27d4:	f3 2d       	mov	r31, r3
    27d6:	f0 68       	ori	r31, 0x80	; 128
    27d8:	3f 2e       	mov	r3, r31
    27da:	82 01       	movw	r16, r4
    27dc:	33 fc       	sbrc	r3, 3
    27de:	19 c0       	rjmp	.+50     	; 0x2812 <vfprintf+0x1e0>
    27e0:	82 2d       	mov	r24, r2
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	88 16       	cp	r8, r24
    27e6:	99 06       	cpc	r9, r25
    27e8:	a0 f4       	brcc	.+40     	; 0x2812 <vfprintf+0x1e0>
    27ea:	b6 01       	movw	r22, r12
    27ec:	80 e2       	ldi	r24, 0x20	; 32
    27ee:	90 e0       	ldi	r25, 0x00	; 0
    27f0:	33 d1       	rcall	.+614    	; 0x2a58 <fputc>
    27f2:	2a 94       	dec	r2
    27f4:	f5 cf       	rjmp	.-22     	; 0x27e0 <vfprintf+0x1ae>
    27f6:	f5 01       	movw	r30, r10
    27f8:	37 fc       	sbrc	r3, 7
    27fa:	85 91       	lpm	r24, Z+
    27fc:	37 fe       	sbrs	r3, 7
    27fe:	81 91       	ld	r24, Z+
    2800:	5f 01       	movw	r10, r30
    2802:	b6 01       	movw	r22, r12
    2804:	90 e0       	ldi	r25, 0x00	; 0
    2806:	28 d1       	rcall	.+592    	; 0x2a58 <fputc>
    2808:	21 10       	cpse	r2, r1
    280a:	2a 94       	dec	r2
    280c:	21 e0       	ldi	r18, 0x01	; 1
    280e:	82 1a       	sub	r8, r18
    2810:	91 08       	sbc	r9, r1
    2812:	81 14       	cp	r8, r1
    2814:	91 04       	cpc	r9, r1
    2816:	79 f7       	brne	.-34     	; 0x27f6 <vfprintf+0x1c4>
    2818:	e1 c0       	rjmp	.+450    	; 0x29dc <vfprintf+0x3aa>
    281a:	84 36       	cpi	r24, 0x64	; 100
    281c:	11 f0       	breq	.+4      	; 0x2822 <vfprintf+0x1f0>
    281e:	89 36       	cpi	r24, 0x69	; 105
    2820:	39 f5       	brne	.+78     	; 0x2870 <vfprintf+0x23e>
    2822:	f8 01       	movw	r30, r16
    2824:	37 fe       	sbrs	r3, 7
    2826:	07 c0       	rjmp	.+14     	; 0x2836 <vfprintf+0x204>
    2828:	60 81       	ld	r22, Z
    282a:	71 81       	ldd	r23, Z+1	; 0x01
    282c:	82 81       	ldd	r24, Z+2	; 0x02
    282e:	93 81       	ldd	r25, Z+3	; 0x03
    2830:	0c 5f       	subi	r16, 0xFC	; 252
    2832:	1f 4f       	sbci	r17, 0xFF	; 255
    2834:	08 c0       	rjmp	.+16     	; 0x2846 <vfprintf+0x214>
    2836:	60 81       	ld	r22, Z
    2838:	71 81       	ldd	r23, Z+1	; 0x01
    283a:	07 2e       	mov	r0, r23
    283c:	00 0c       	add	r0, r0
    283e:	88 0b       	sbc	r24, r24
    2840:	99 0b       	sbc	r25, r25
    2842:	0e 5f       	subi	r16, 0xFE	; 254
    2844:	1f 4f       	sbci	r17, 0xFF	; 255
    2846:	f3 2d       	mov	r31, r3
    2848:	ff 76       	andi	r31, 0x6F	; 111
    284a:	3f 2e       	mov	r3, r31
    284c:	97 ff       	sbrs	r25, 7
    284e:	09 c0       	rjmp	.+18     	; 0x2862 <vfprintf+0x230>
    2850:	90 95       	com	r25
    2852:	80 95       	com	r24
    2854:	70 95       	com	r23
    2856:	61 95       	neg	r22
    2858:	7f 4f       	sbci	r23, 0xFF	; 255
    285a:	8f 4f       	sbci	r24, 0xFF	; 255
    285c:	9f 4f       	sbci	r25, 0xFF	; 255
    285e:	f0 68       	ori	r31, 0x80	; 128
    2860:	3f 2e       	mov	r3, r31
    2862:	2a e0       	ldi	r18, 0x0A	; 10
    2864:	30 e0       	ldi	r19, 0x00	; 0
    2866:	a3 01       	movw	r20, r6
    2868:	33 d1       	rcall	.+614    	; 0x2ad0 <__ultoa_invert>
    286a:	88 2e       	mov	r8, r24
    286c:	86 18       	sub	r8, r6
    286e:	44 c0       	rjmp	.+136    	; 0x28f8 <vfprintf+0x2c6>
    2870:	85 37       	cpi	r24, 0x75	; 117
    2872:	31 f4       	brne	.+12     	; 0x2880 <vfprintf+0x24e>
    2874:	23 2d       	mov	r18, r3
    2876:	2f 7e       	andi	r18, 0xEF	; 239
    2878:	b2 2e       	mov	r11, r18
    287a:	2a e0       	ldi	r18, 0x0A	; 10
    287c:	30 e0       	ldi	r19, 0x00	; 0
    287e:	25 c0       	rjmp	.+74     	; 0x28ca <vfprintf+0x298>
    2880:	93 2d       	mov	r25, r3
    2882:	99 7f       	andi	r25, 0xF9	; 249
    2884:	b9 2e       	mov	r11, r25
    2886:	8f 36       	cpi	r24, 0x6F	; 111
    2888:	c1 f0       	breq	.+48     	; 0x28ba <vfprintf+0x288>
    288a:	18 f4       	brcc	.+6      	; 0x2892 <vfprintf+0x260>
    288c:	88 35       	cpi	r24, 0x58	; 88
    288e:	79 f0       	breq	.+30     	; 0x28ae <vfprintf+0x27c>
    2890:	ae c0       	rjmp	.+348    	; 0x29ee <vfprintf+0x3bc>
    2892:	80 37       	cpi	r24, 0x70	; 112
    2894:	19 f0       	breq	.+6      	; 0x289c <vfprintf+0x26a>
    2896:	88 37       	cpi	r24, 0x78	; 120
    2898:	21 f0       	breq	.+8      	; 0x28a2 <vfprintf+0x270>
    289a:	a9 c0       	rjmp	.+338    	; 0x29ee <vfprintf+0x3bc>
    289c:	e9 2f       	mov	r30, r25
    289e:	e0 61       	ori	r30, 0x10	; 16
    28a0:	be 2e       	mov	r11, r30
    28a2:	b4 fe       	sbrs	r11, 4
    28a4:	0d c0       	rjmp	.+26     	; 0x28c0 <vfprintf+0x28e>
    28a6:	fb 2d       	mov	r31, r11
    28a8:	f4 60       	ori	r31, 0x04	; 4
    28aa:	bf 2e       	mov	r11, r31
    28ac:	09 c0       	rjmp	.+18     	; 0x28c0 <vfprintf+0x28e>
    28ae:	34 fe       	sbrs	r3, 4
    28b0:	0a c0       	rjmp	.+20     	; 0x28c6 <vfprintf+0x294>
    28b2:	29 2f       	mov	r18, r25
    28b4:	26 60       	ori	r18, 0x06	; 6
    28b6:	b2 2e       	mov	r11, r18
    28b8:	06 c0       	rjmp	.+12     	; 0x28c6 <vfprintf+0x294>
    28ba:	28 e0       	ldi	r18, 0x08	; 8
    28bc:	30 e0       	ldi	r19, 0x00	; 0
    28be:	05 c0       	rjmp	.+10     	; 0x28ca <vfprintf+0x298>
    28c0:	20 e1       	ldi	r18, 0x10	; 16
    28c2:	30 e0       	ldi	r19, 0x00	; 0
    28c4:	02 c0       	rjmp	.+4      	; 0x28ca <vfprintf+0x298>
    28c6:	20 e1       	ldi	r18, 0x10	; 16
    28c8:	32 e0       	ldi	r19, 0x02	; 2
    28ca:	f8 01       	movw	r30, r16
    28cc:	b7 fe       	sbrs	r11, 7
    28ce:	07 c0       	rjmp	.+14     	; 0x28de <vfprintf+0x2ac>
    28d0:	60 81       	ld	r22, Z
    28d2:	71 81       	ldd	r23, Z+1	; 0x01
    28d4:	82 81       	ldd	r24, Z+2	; 0x02
    28d6:	93 81       	ldd	r25, Z+3	; 0x03
    28d8:	0c 5f       	subi	r16, 0xFC	; 252
    28da:	1f 4f       	sbci	r17, 0xFF	; 255
    28dc:	06 c0       	rjmp	.+12     	; 0x28ea <vfprintf+0x2b8>
    28de:	60 81       	ld	r22, Z
    28e0:	71 81       	ldd	r23, Z+1	; 0x01
    28e2:	80 e0       	ldi	r24, 0x00	; 0
    28e4:	90 e0       	ldi	r25, 0x00	; 0
    28e6:	0e 5f       	subi	r16, 0xFE	; 254
    28e8:	1f 4f       	sbci	r17, 0xFF	; 255
    28ea:	a3 01       	movw	r20, r6
    28ec:	f1 d0       	rcall	.+482    	; 0x2ad0 <__ultoa_invert>
    28ee:	88 2e       	mov	r8, r24
    28f0:	86 18       	sub	r8, r6
    28f2:	fb 2d       	mov	r31, r11
    28f4:	ff 77       	andi	r31, 0x7F	; 127
    28f6:	3f 2e       	mov	r3, r31
    28f8:	36 fe       	sbrs	r3, 6
    28fa:	0d c0       	rjmp	.+26     	; 0x2916 <vfprintf+0x2e4>
    28fc:	23 2d       	mov	r18, r3
    28fe:	2e 7f       	andi	r18, 0xFE	; 254
    2900:	a2 2e       	mov	r10, r18
    2902:	89 14       	cp	r8, r9
    2904:	58 f4       	brcc	.+22     	; 0x291c <vfprintf+0x2ea>
    2906:	34 fe       	sbrs	r3, 4
    2908:	0b c0       	rjmp	.+22     	; 0x2920 <vfprintf+0x2ee>
    290a:	32 fc       	sbrc	r3, 2
    290c:	09 c0       	rjmp	.+18     	; 0x2920 <vfprintf+0x2ee>
    290e:	83 2d       	mov	r24, r3
    2910:	8e 7e       	andi	r24, 0xEE	; 238
    2912:	a8 2e       	mov	r10, r24
    2914:	05 c0       	rjmp	.+10     	; 0x2920 <vfprintf+0x2ee>
    2916:	b8 2c       	mov	r11, r8
    2918:	a3 2c       	mov	r10, r3
    291a:	03 c0       	rjmp	.+6      	; 0x2922 <vfprintf+0x2f0>
    291c:	b8 2c       	mov	r11, r8
    291e:	01 c0       	rjmp	.+2      	; 0x2922 <vfprintf+0x2f0>
    2920:	b9 2c       	mov	r11, r9
    2922:	a4 fe       	sbrs	r10, 4
    2924:	0f c0       	rjmp	.+30     	; 0x2944 <vfprintf+0x312>
    2926:	fe 01       	movw	r30, r28
    2928:	e8 0d       	add	r30, r8
    292a:	f1 1d       	adc	r31, r1
    292c:	80 81       	ld	r24, Z
    292e:	80 33       	cpi	r24, 0x30	; 48
    2930:	21 f4       	brne	.+8      	; 0x293a <vfprintf+0x308>
    2932:	9a 2d       	mov	r25, r10
    2934:	99 7e       	andi	r25, 0xE9	; 233
    2936:	a9 2e       	mov	r10, r25
    2938:	09 c0       	rjmp	.+18     	; 0x294c <vfprintf+0x31a>
    293a:	a2 fe       	sbrs	r10, 2
    293c:	06 c0       	rjmp	.+12     	; 0x294a <vfprintf+0x318>
    293e:	b3 94       	inc	r11
    2940:	b3 94       	inc	r11
    2942:	04 c0       	rjmp	.+8      	; 0x294c <vfprintf+0x31a>
    2944:	8a 2d       	mov	r24, r10
    2946:	86 78       	andi	r24, 0x86	; 134
    2948:	09 f0       	breq	.+2      	; 0x294c <vfprintf+0x31a>
    294a:	b3 94       	inc	r11
    294c:	a3 fc       	sbrc	r10, 3
    294e:	10 c0       	rjmp	.+32     	; 0x2970 <vfprintf+0x33e>
    2950:	a0 fe       	sbrs	r10, 0
    2952:	06 c0       	rjmp	.+12     	; 0x2960 <vfprintf+0x32e>
    2954:	b2 14       	cp	r11, r2
    2956:	80 f4       	brcc	.+32     	; 0x2978 <vfprintf+0x346>
    2958:	28 0c       	add	r2, r8
    295a:	92 2c       	mov	r9, r2
    295c:	9b 18       	sub	r9, r11
    295e:	0d c0       	rjmp	.+26     	; 0x297a <vfprintf+0x348>
    2960:	b2 14       	cp	r11, r2
    2962:	58 f4       	brcc	.+22     	; 0x297a <vfprintf+0x348>
    2964:	b6 01       	movw	r22, r12
    2966:	80 e2       	ldi	r24, 0x20	; 32
    2968:	90 e0       	ldi	r25, 0x00	; 0
    296a:	76 d0       	rcall	.+236    	; 0x2a58 <fputc>
    296c:	b3 94       	inc	r11
    296e:	f8 cf       	rjmp	.-16     	; 0x2960 <vfprintf+0x32e>
    2970:	b2 14       	cp	r11, r2
    2972:	18 f4       	brcc	.+6      	; 0x297a <vfprintf+0x348>
    2974:	2b 18       	sub	r2, r11
    2976:	02 c0       	rjmp	.+4      	; 0x297c <vfprintf+0x34a>
    2978:	98 2c       	mov	r9, r8
    297a:	21 2c       	mov	r2, r1
    297c:	a4 fe       	sbrs	r10, 4
    297e:	0f c0       	rjmp	.+30     	; 0x299e <vfprintf+0x36c>
    2980:	b6 01       	movw	r22, r12
    2982:	80 e3       	ldi	r24, 0x30	; 48
    2984:	90 e0       	ldi	r25, 0x00	; 0
    2986:	68 d0       	rcall	.+208    	; 0x2a58 <fputc>
    2988:	a2 fe       	sbrs	r10, 2
    298a:	16 c0       	rjmp	.+44     	; 0x29b8 <vfprintf+0x386>
    298c:	a1 fc       	sbrc	r10, 1
    298e:	03 c0       	rjmp	.+6      	; 0x2996 <vfprintf+0x364>
    2990:	88 e7       	ldi	r24, 0x78	; 120
    2992:	90 e0       	ldi	r25, 0x00	; 0
    2994:	02 c0       	rjmp	.+4      	; 0x299a <vfprintf+0x368>
    2996:	88 e5       	ldi	r24, 0x58	; 88
    2998:	90 e0       	ldi	r25, 0x00	; 0
    299a:	b6 01       	movw	r22, r12
    299c:	0c c0       	rjmp	.+24     	; 0x29b6 <vfprintf+0x384>
    299e:	8a 2d       	mov	r24, r10
    29a0:	86 78       	andi	r24, 0x86	; 134
    29a2:	51 f0       	breq	.+20     	; 0x29b8 <vfprintf+0x386>
    29a4:	a1 fe       	sbrs	r10, 1
    29a6:	02 c0       	rjmp	.+4      	; 0x29ac <vfprintf+0x37a>
    29a8:	8b e2       	ldi	r24, 0x2B	; 43
    29aa:	01 c0       	rjmp	.+2      	; 0x29ae <vfprintf+0x37c>
    29ac:	80 e2       	ldi	r24, 0x20	; 32
    29ae:	a7 fc       	sbrc	r10, 7
    29b0:	8d e2       	ldi	r24, 0x2D	; 45
    29b2:	b6 01       	movw	r22, r12
    29b4:	90 e0       	ldi	r25, 0x00	; 0
    29b6:	50 d0       	rcall	.+160    	; 0x2a58 <fputc>
    29b8:	89 14       	cp	r8, r9
    29ba:	30 f4       	brcc	.+12     	; 0x29c8 <vfprintf+0x396>
    29bc:	b6 01       	movw	r22, r12
    29be:	80 e3       	ldi	r24, 0x30	; 48
    29c0:	90 e0       	ldi	r25, 0x00	; 0
    29c2:	4a d0       	rcall	.+148    	; 0x2a58 <fputc>
    29c4:	9a 94       	dec	r9
    29c6:	f8 cf       	rjmp	.-16     	; 0x29b8 <vfprintf+0x386>
    29c8:	8a 94       	dec	r8
    29ca:	f3 01       	movw	r30, r6
    29cc:	e8 0d       	add	r30, r8
    29ce:	f1 1d       	adc	r31, r1
    29d0:	80 81       	ld	r24, Z
    29d2:	b6 01       	movw	r22, r12
    29d4:	90 e0       	ldi	r25, 0x00	; 0
    29d6:	40 d0       	rcall	.+128    	; 0x2a58 <fputc>
    29d8:	81 10       	cpse	r8, r1
    29da:	f6 cf       	rjmp	.-20     	; 0x29c8 <vfprintf+0x396>
    29dc:	22 20       	and	r2, r2
    29de:	09 f4       	brne	.+2      	; 0x29e2 <vfprintf+0x3b0>
    29e0:	4e ce       	rjmp	.-868    	; 0x267e <vfprintf+0x4c>
    29e2:	b6 01       	movw	r22, r12
    29e4:	80 e2       	ldi	r24, 0x20	; 32
    29e6:	90 e0       	ldi	r25, 0x00	; 0
    29e8:	37 d0       	rcall	.+110    	; 0x2a58 <fputc>
    29ea:	2a 94       	dec	r2
    29ec:	f7 cf       	rjmp	.-18     	; 0x29dc <vfprintf+0x3aa>
    29ee:	f6 01       	movw	r30, r12
    29f0:	86 81       	ldd	r24, Z+6	; 0x06
    29f2:	97 81       	ldd	r25, Z+7	; 0x07
    29f4:	02 c0       	rjmp	.+4      	; 0x29fa <vfprintf+0x3c8>
    29f6:	8f ef       	ldi	r24, 0xFF	; 255
    29f8:	9f ef       	ldi	r25, 0xFF	; 255
    29fa:	2b 96       	adiw	r28, 0x0b	; 11
    29fc:	0f b6       	in	r0, 0x3f	; 63
    29fe:	f8 94       	cli
    2a00:	de bf       	out	0x3e, r29	; 62
    2a02:	0f be       	out	0x3f, r0	; 63
    2a04:	cd bf       	out	0x3d, r28	; 61
    2a06:	df 91       	pop	r29
    2a08:	cf 91       	pop	r28
    2a0a:	1f 91       	pop	r17
    2a0c:	0f 91       	pop	r16
    2a0e:	ff 90       	pop	r15
    2a10:	ef 90       	pop	r14
    2a12:	df 90       	pop	r13
    2a14:	cf 90       	pop	r12
    2a16:	bf 90       	pop	r11
    2a18:	af 90       	pop	r10
    2a1a:	9f 90       	pop	r9
    2a1c:	8f 90       	pop	r8
    2a1e:	7f 90       	pop	r7
    2a20:	6f 90       	pop	r6
    2a22:	5f 90       	pop	r5
    2a24:	4f 90       	pop	r4
    2a26:	3f 90       	pop	r3
    2a28:	2f 90       	pop	r2
    2a2a:	08 95       	ret

00002a2c <strnlen_P>:
    2a2c:	fc 01       	movw	r30, r24
    2a2e:	05 90       	lpm	r0, Z+
    2a30:	61 50       	subi	r22, 0x01	; 1
    2a32:	70 40       	sbci	r23, 0x00	; 0
    2a34:	01 10       	cpse	r0, r1
    2a36:	d8 f7       	brcc	.-10     	; 0x2a2e <strnlen_P+0x2>
    2a38:	80 95       	com	r24
    2a3a:	90 95       	com	r25
    2a3c:	8e 0f       	add	r24, r30
    2a3e:	9f 1f       	adc	r25, r31
    2a40:	08 95       	ret

00002a42 <strnlen>:
    2a42:	fc 01       	movw	r30, r24
    2a44:	61 50       	subi	r22, 0x01	; 1
    2a46:	70 40       	sbci	r23, 0x00	; 0
    2a48:	01 90       	ld	r0, Z+
    2a4a:	01 10       	cpse	r0, r1
    2a4c:	d8 f7       	brcc	.-10     	; 0x2a44 <strnlen+0x2>
    2a4e:	80 95       	com	r24
    2a50:	90 95       	com	r25
    2a52:	8e 0f       	add	r24, r30
    2a54:	9f 1f       	adc	r25, r31
    2a56:	08 95       	ret

00002a58 <fputc>:
    2a58:	0f 93       	push	r16
    2a5a:	1f 93       	push	r17
    2a5c:	cf 93       	push	r28
    2a5e:	df 93       	push	r29
    2a60:	fb 01       	movw	r30, r22
    2a62:	23 81       	ldd	r18, Z+3	; 0x03
    2a64:	21 fd       	sbrc	r18, 1
    2a66:	03 c0       	rjmp	.+6      	; 0x2a6e <fputc+0x16>
    2a68:	8f ef       	ldi	r24, 0xFF	; 255
    2a6a:	9f ef       	ldi	r25, 0xFF	; 255
    2a6c:	2c c0       	rjmp	.+88     	; 0x2ac6 <fputc+0x6e>
    2a6e:	22 ff       	sbrs	r18, 2
    2a70:	16 c0       	rjmp	.+44     	; 0x2a9e <fputc+0x46>
    2a72:	46 81       	ldd	r20, Z+6	; 0x06
    2a74:	57 81       	ldd	r21, Z+7	; 0x07
    2a76:	24 81       	ldd	r18, Z+4	; 0x04
    2a78:	35 81       	ldd	r19, Z+5	; 0x05
    2a7a:	42 17       	cp	r20, r18
    2a7c:	53 07       	cpc	r21, r19
    2a7e:	44 f4       	brge	.+16     	; 0x2a90 <fputc+0x38>
    2a80:	a0 81       	ld	r26, Z
    2a82:	b1 81       	ldd	r27, Z+1	; 0x01
    2a84:	9d 01       	movw	r18, r26
    2a86:	2f 5f       	subi	r18, 0xFF	; 255
    2a88:	3f 4f       	sbci	r19, 0xFF	; 255
    2a8a:	31 83       	std	Z+1, r19	; 0x01
    2a8c:	20 83       	st	Z, r18
    2a8e:	8c 93       	st	X, r24
    2a90:	26 81       	ldd	r18, Z+6	; 0x06
    2a92:	37 81       	ldd	r19, Z+7	; 0x07
    2a94:	2f 5f       	subi	r18, 0xFF	; 255
    2a96:	3f 4f       	sbci	r19, 0xFF	; 255
    2a98:	37 83       	std	Z+7, r19	; 0x07
    2a9a:	26 83       	std	Z+6, r18	; 0x06
    2a9c:	14 c0       	rjmp	.+40     	; 0x2ac6 <fputc+0x6e>
    2a9e:	8b 01       	movw	r16, r22
    2aa0:	ec 01       	movw	r28, r24
    2aa2:	fb 01       	movw	r30, r22
    2aa4:	00 84       	ldd	r0, Z+8	; 0x08
    2aa6:	f1 85       	ldd	r31, Z+9	; 0x09
    2aa8:	e0 2d       	mov	r30, r0
    2aaa:	09 95       	icall
    2aac:	89 2b       	or	r24, r25
    2aae:	e1 f6       	brne	.-72     	; 0x2a68 <fputc+0x10>
    2ab0:	d8 01       	movw	r26, r16
    2ab2:	16 96       	adiw	r26, 0x06	; 6
    2ab4:	8d 91       	ld	r24, X+
    2ab6:	9c 91       	ld	r25, X
    2ab8:	17 97       	sbiw	r26, 0x07	; 7
    2aba:	01 96       	adiw	r24, 0x01	; 1
    2abc:	17 96       	adiw	r26, 0x07	; 7
    2abe:	9c 93       	st	X, r25
    2ac0:	8e 93       	st	-X, r24
    2ac2:	16 97       	sbiw	r26, 0x06	; 6
    2ac4:	ce 01       	movw	r24, r28
    2ac6:	df 91       	pop	r29
    2ac8:	cf 91       	pop	r28
    2aca:	1f 91       	pop	r17
    2acc:	0f 91       	pop	r16
    2ace:	08 95       	ret

00002ad0 <__ultoa_invert>:
    2ad0:	fa 01       	movw	r30, r20
    2ad2:	aa 27       	eor	r26, r26
    2ad4:	28 30       	cpi	r18, 0x08	; 8
    2ad6:	51 f1       	breq	.+84     	; 0x2b2c <__ultoa_invert+0x5c>
    2ad8:	20 31       	cpi	r18, 0x10	; 16
    2ada:	81 f1       	breq	.+96     	; 0x2b3c <__ultoa_invert+0x6c>
    2adc:	e8 94       	clt
    2ade:	6f 93       	push	r22
    2ae0:	6e 7f       	andi	r22, 0xFE	; 254
    2ae2:	6e 5f       	subi	r22, 0xFE	; 254
    2ae4:	7f 4f       	sbci	r23, 0xFF	; 255
    2ae6:	8f 4f       	sbci	r24, 0xFF	; 255
    2ae8:	9f 4f       	sbci	r25, 0xFF	; 255
    2aea:	af 4f       	sbci	r26, 0xFF	; 255
    2aec:	b1 e0       	ldi	r27, 0x01	; 1
    2aee:	3e d0       	rcall	.+124    	; 0x2b6c <__ultoa_invert+0x9c>
    2af0:	b4 e0       	ldi	r27, 0x04	; 4
    2af2:	3c d0       	rcall	.+120    	; 0x2b6c <__ultoa_invert+0x9c>
    2af4:	67 0f       	add	r22, r23
    2af6:	78 1f       	adc	r23, r24
    2af8:	89 1f       	adc	r24, r25
    2afa:	9a 1f       	adc	r25, r26
    2afc:	a1 1d       	adc	r26, r1
    2afe:	68 0f       	add	r22, r24
    2b00:	79 1f       	adc	r23, r25
    2b02:	8a 1f       	adc	r24, r26
    2b04:	91 1d       	adc	r25, r1
    2b06:	a1 1d       	adc	r26, r1
    2b08:	6a 0f       	add	r22, r26
    2b0a:	71 1d       	adc	r23, r1
    2b0c:	81 1d       	adc	r24, r1
    2b0e:	91 1d       	adc	r25, r1
    2b10:	a1 1d       	adc	r26, r1
    2b12:	20 d0       	rcall	.+64     	; 0x2b54 <__ultoa_invert+0x84>
    2b14:	09 f4       	brne	.+2      	; 0x2b18 <__ultoa_invert+0x48>
    2b16:	68 94       	set
    2b18:	3f 91       	pop	r19
    2b1a:	2a e0       	ldi	r18, 0x0A	; 10
    2b1c:	26 9f       	mul	r18, r22
    2b1e:	11 24       	eor	r1, r1
    2b20:	30 19       	sub	r19, r0
    2b22:	30 5d       	subi	r19, 0xD0	; 208
    2b24:	31 93       	st	Z+, r19
    2b26:	de f6       	brtc	.-74     	; 0x2ade <__ultoa_invert+0xe>
    2b28:	cf 01       	movw	r24, r30
    2b2a:	08 95       	ret
    2b2c:	46 2f       	mov	r20, r22
    2b2e:	47 70       	andi	r20, 0x07	; 7
    2b30:	40 5d       	subi	r20, 0xD0	; 208
    2b32:	41 93       	st	Z+, r20
    2b34:	b3 e0       	ldi	r27, 0x03	; 3
    2b36:	0f d0       	rcall	.+30     	; 0x2b56 <__ultoa_invert+0x86>
    2b38:	c9 f7       	brne	.-14     	; 0x2b2c <__ultoa_invert+0x5c>
    2b3a:	f6 cf       	rjmp	.-20     	; 0x2b28 <__ultoa_invert+0x58>
    2b3c:	46 2f       	mov	r20, r22
    2b3e:	4f 70       	andi	r20, 0x0F	; 15
    2b40:	40 5d       	subi	r20, 0xD0	; 208
    2b42:	4a 33       	cpi	r20, 0x3A	; 58
    2b44:	18 f0       	brcs	.+6      	; 0x2b4c <__ultoa_invert+0x7c>
    2b46:	49 5d       	subi	r20, 0xD9	; 217
    2b48:	31 fd       	sbrc	r19, 1
    2b4a:	40 52       	subi	r20, 0x20	; 32
    2b4c:	41 93       	st	Z+, r20
    2b4e:	02 d0       	rcall	.+4      	; 0x2b54 <__ultoa_invert+0x84>
    2b50:	a9 f7       	brne	.-22     	; 0x2b3c <__ultoa_invert+0x6c>
    2b52:	ea cf       	rjmp	.-44     	; 0x2b28 <__ultoa_invert+0x58>
    2b54:	b4 e0       	ldi	r27, 0x04	; 4
    2b56:	a6 95       	lsr	r26
    2b58:	97 95       	ror	r25
    2b5a:	87 95       	ror	r24
    2b5c:	77 95       	ror	r23
    2b5e:	67 95       	ror	r22
    2b60:	ba 95       	dec	r27
    2b62:	c9 f7       	brne	.-14     	; 0x2b56 <__ultoa_invert+0x86>
    2b64:	00 97       	sbiw	r24, 0x00	; 0
    2b66:	61 05       	cpc	r22, r1
    2b68:	71 05       	cpc	r23, r1
    2b6a:	08 95       	ret
    2b6c:	9b 01       	movw	r18, r22
    2b6e:	ac 01       	movw	r20, r24
    2b70:	0a 2e       	mov	r0, r26
    2b72:	06 94       	lsr	r0
    2b74:	57 95       	ror	r21
    2b76:	47 95       	ror	r20
    2b78:	37 95       	ror	r19
    2b7a:	27 95       	ror	r18
    2b7c:	ba 95       	dec	r27
    2b7e:	c9 f7       	brne	.-14     	; 0x2b72 <__ultoa_invert+0xa2>
    2b80:	62 0f       	add	r22, r18
    2b82:	73 1f       	adc	r23, r19
    2b84:	84 1f       	adc	r24, r20
    2b86:	95 1f       	adc	r25, r21
    2b88:	a0 1d       	adc	r26, r0
    2b8a:	08 95       	ret

00002b8c <_exit>:
    2b8c:	f8 94       	cli

00002b8e <__stop_program>:
    2b8e:	ff cf       	rjmp	.-2      	; 0x2b8e <__stop_program>
