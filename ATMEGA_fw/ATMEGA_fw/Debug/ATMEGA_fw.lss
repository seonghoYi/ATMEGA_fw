
ATMEGA_fw.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a2  00800100  0000294a  000029de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000294a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000241  008001a2  008001a2  00002a80  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002a80  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002adc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000006a0  00000000  00000000  00002b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005f5a  00000000  00000000  000031b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001b5e  00000000  00000000  00009112  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003c37  00000000  00000000  0000ac70  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000010f8  00000000  00000000  0000e8a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000164f  00000000  00000000  0000f9a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000052ab  00000000  00000000  00010fef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000005d0  00000000  00000000  0001629a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4c c0       	rjmp	.+152    	; 0x9a <__ctors_end>
       2:	00 00       	nop
       4:	69 c0       	rjmp	.+210    	; 0xd8 <__bad_interrupt>
       6:	00 00       	nop
       8:	67 c0       	rjmp	.+206    	; 0xd8 <__bad_interrupt>
       a:	00 00       	nop
       c:	65 c0       	rjmp	.+202    	; 0xd8 <__bad_interrupt>
       e:	00 00       	nop
      10:	63 c0       	rjmp	.+198    	; 0xd8 <__bad_interrupt>
      12:	00 00       	nop
      14:	61 c0       	rjmp	.+194    	; 0xd8 <__bad_interrupt>
      16:	00 00       	nop
      18:	5f c0       	rjmp	.+190    	; 0xd8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5d c0       	rjmp	.+186    	; 0xd8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	5b c0       	rjmp	.+182    	; 0xd8 <__bad_interrupt>
      22:	00 00       	nop
      24:	d2 c1       	rjmp	.+932    	; 0x3ca <__vector_9>
      26:	00 00       	nop
      28:	a6 c1       	rjmp	.+844    	; 0x376 <__vector_10>
      2a:	00 00       	nop
      2c:	9a c1       	rjmp	.+820    	; 0x362 <__vector_11>
      2e:	00 00       	nop
      30:	7a c1       	rjmp	.+756    	; 0x326 <__vector_12>
      32:	00 00       	nop
      34:	82 c1       	rjmp	.+772    	; 0x33a <__vector_13>
      36:	00 00       	nop
      38:	6c c1       	rjmp	.+728    	; 0x312 <__vector_14>
      3a:	00 00       	nop
      3c:	40 c1       	rjmp	.+640    	; 0x2be <__vector_15>
      3e:	00 00       	nop
      40:	14 c1       	rjmp	.+552    	; 0x26a <__vector_16>
      42:	00 00       	nop
      44:	49 c0       	rjmp	.+146    	; 0xd8 <__bad_interrupt>
      46:	00 00       	nop
      48:	bc c0       	rjmp	.+376    	; 0x1c2 <__vector_18>
      4a:	00 00       	nop
      4c:	45 c0       	rjmp	.+138    	; 0xd8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	e2 c0       	rjmp	.+452    	; 0x216 <__vector_20>
      52:	00 00       	nop
      54:	41 c0       	rjmp	.+130    	; 0xd8 <__bad_interrupt>
      56:	00 00       	nop
      58:	3f c0       	rjmp	.+126    	; 0xd8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3d c0       	rjmp	.+122    	; 0xd8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	76 c1       	rjmp	.+748    	; 0x34e <__vector_24>
      62:	00 00       	nop
      64:	04 c2       	rjmp	.+1032   	; 0x46e <__vector_25>
      66:	00 00       	nop
      68:	e4 c1       	rjmp	.+968    	; 0x432 <__vector_26>
      6a:	00 00       	nop
      6c:	ec c1       	rjmp	.+984    	; 0x446 <__vector_27>
      6e:	00 00       	nop
      70:	f4 c1       	rjmp	.+1000   	; 0x45a <__vector_28>
      72:	00 00       	nop
      74:	d4 c1       	rjmp	.+936    	; 0x41e <__vector_29>
      76:	00 00       	nop
      78:	2f c0       	rjmp	.+94     	; 0xd8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2d c0       	rjmp	.+90     	; 0xd8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	2b c0       	rjmp	.+86     	; 0xd8 <__bad_interrupt>
      82:	00 00       	nop
      84:	29 c0       	rjmp	.+82     	; 0xd8 <__bad_interrupt>
      86:	00 00       	nop
      88:	27 c0       	rjmp	.+78     	; 0xd8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ce 0a       	sbc	r12, r30
      8e:	e1 0a       	sbc	r14, r17
      90:	f4 0a       	sbc	r15, r20
      92:	07 0b       	sbc	r16, r23
      94:	1a 0b       	sbc	r17, r26
      96:	2d 0b       	sbc	r18, r29
      98:	40 0b       	sbc	r20, r16

0000009a <__ctors_end>:
      9a:	11 24       	eor	r1, r1
      9c:	1f be       	out	0x3f, r1	; 63
      9e:	cf ef       	ldi	r28, 0xFF	; 255
      a0:	d0 e1       	ldi	r29, 0x10	; 16
      a2:	de bf       	out	0x3e, r29	; 62
      a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_copy_data>:
      a6:	11 e0       	ldi	r17, 0x01	; 1
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b1 e0       	ldi	r27, 0x01	; 1
      ac:	ea e4       	ldi	r30, 0x4A	; 74
      ae:	f9 e2       	ldi	r31, 0x29	; 41
      b0:	00 e0       	ldi	r16, 0x00	; 0
      b2:	0b bf       	out	0x3b, r16	; 59
      b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x14>
      b6:	07 90       	elpm	r0, Z+
      b8:	0d 92       	st	X+, r0
      ba:	a2 3a       	cpi	r26, 0xA2	; 162
      bc:	b1 07       	cpc	r27, r17
      be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0x10>

000000c0 <__do_clear_bss>:
      c0:	23 e0       	ldi	r18, 0x03	; 3
      c2:	a2 ea       	ldi	r26, 0xA2	; 162
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
      c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
      ca:	a3 3e       	cpi	r26, 0xE3	; 227
      cc:	b2 07       	cpc	r27, r18
      ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
      d0:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <main>
      d4:	0c 94 a3 14 	jmp	0x2946	; 0x2946 <_exit>

000000d8 <__bad_interrupt>:
      d8:	93 cf       	rjmp	.-218    	; 0x0 <__vectors>

000000da <apInit>:
ï»¿#include "ap.h"


void apInit(void)
{
	uartOpen(_DEF_UART1, 115200);
      da:	40 e0       	ldi	r20, 0x00	; 0
      dc:	52 ec       	ldi	r21, 0xC2	; 194
      de:	61 e0       	ldi	r22, 0x01	; 1
      e0:	70 e0       	ldi	r23, 0x00	; 0
      e2:	81 e0       	ldi	r24, 0x01	; 1
      e4:	f2 d7       	rcall	.+4068   	; 0x10ca <uartOpen>
	//timerStart(_DEF_TIM0, 0, 124, 0);
	//timerStart(_DEF_TIM1, 0, 1, 0);
	//timerStart(_DEF_TIM2, 0, 250, 5000);
	//a4988Start(_DEF_A4988_0, _DEF_CW, 124);
	
	ctcBegin(_DEF_TIM0);
      e6:	80 e0       	ldi	r24, 0x00	; 0
      e8:	a3 d2       	rcall	.+1350   	; 0x630 <ctcBegin>
	ctcSetOcr(_DEF_TIM0, 100, _DEF_CH_NONE);
      ea:	40 e0       	ldi	r20, 0x00	; 0
      ec:	64 e6       	ldi	r22, 0x64	; 100
      ee:	70 e0       	ldi	r23, 0x00	; 0
      f0:	80 e0       	ldi	r24, 0x00	; 0
      f2:	0b d5       	rcall	.+2582   	; 0xb0a <ctcSetOcr>
	ctcStart(_DEF_TIM0);
      f4:	80 e0       	ldi	r24, 0x00	; 0
      f6:	99 d3       	rcall	.+1842   	; 0x82a <ctcStart>
      f8:	78 94       	sei
	ctc16ChannelConfig(_DEF_TIM1, _DEF_CH_A);
	ctcSetOcr(_DEF_TIM1, 50, _DEF_CH_A);
	//ctcSetIcr(_DEF_TIM1, 50);
	ctcStart(_DEF_TIM1);
	*/
	sei();
      fa:	08 95       	ret

000000fc <apMain>:
      fc:	c7 e9       	ldi	r28, 0x97	; 151
		
		//pwmSetOcr(_DEF_TIM1, 250, _DEF_CH_A);
		//ctcSetTcnt(_DEF_TIM1, 0);
		//ctcSetOcr(_DEF_TIM1, 50, _DEF_CH_A);
		//ctcSetIcr(_DEF_TIM1, 50)
		uartPrintf(_DEF_UART1, "TCNT: %d\n", tcnt);
      fe:	d1 e0       	ldi	r29, 0x01	; 1
     100:	11 e0       	ldi	r17, 0x01	; 1
	{
		//timerSetOcr(_DEF_TIM0, 1);
		//timerSetOcr(_DEF_TIM2, 250);
		//a4988SetSpeed(_DEF_A4988_0, 30);
		
		ctcSetTcnt(_DEF_TIM0, 0);
     102:	60 e0       	ldi	r22, 0x00	; 0
     104:	70 e0       	ldi	r23, 0x00	; 0
     106:	80 e0       	ldi	r24, 0x00	; 0
     108:	2c d4       	rcall	.+2136   	; 0x962 <ctcSetTcnt>
		tcnt = ctcGetTcnt(_DEF_TIM0);
     10a:	80 e0       	ldi	r24, 0x00	; 0
     10c:	98 d4       	rcall	.+2352   	; 0xa3e <ctcGetTcnt>
     10e:	08 2f       	mov	r16, r24
     110:	f9 2e       	mov	r15, r25
		ctcSetOcr(_DEF_TIM0, 50, _DEF_CH_NONE);
     112:	40 e0       	ldi	r20, 0x00	; 0
     114:	62 e3       	ldi	r22, 0x32	; 50
     116:	70 e0       	ldi	r23, 0x00	; 0
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	f7 d4       	rcall	.+2542   	; 0xb0a <ctcSetOcr>
		
		//pwmSetOcr(_DEF_TIM1, 250, _DEF_CH_A);
		//ctcSetTcnt(_DEF_TIM1, 0);
		//ctcSetOcr(_DEF_TIM1, 50, _DEF_CH_A);
		//ctcSetIcr(_DEF_TIM1, 50)
		uartPrintf(_DEF_UART1, "TCNT: %d\n", tcnt);
     11c:	ff 92       	push	r15
     11e:	0f 93       	push	r16
     120:	df 93       	push	r29
     122:	cf 93       	push	r28
     124:	1f 93       	push	r17
     126:	0e 94 f7 08 	call	0x11ee	; 0x11ee <uartPrintf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     12a:	9f ef       	ldi	r25, 0xFF	; 255
     12c:	29 e6       	ldi	r18, 0x69	; 105
     12e:	88 e1       	ldi	r24, 0x18	; 24
     130:	91 50       	subi	r25, 0x01	; 1
     132:	20 40       	sbci	r18, 0x00	; 0
     134:	80 40       	sbci	r24, 0x00	; 0
     136:	e1 f7       	brne	.-8      	; 0x130 <apMain+0x34>
     138:	00 c0       	rjmp	.+0      	; 0x13a <apMain+0x3e>
     13a:	00 00       	nop
		_delay_ms(500);
		//a4988SetSpeed(_DEF_A4988_0, 124);

		ctcSetTcnt(_DEF_TIM0, 0);
     13c:	60 e0       	ldi	r22, 0x00	; 0
     13e:	70 e0       	ldi	r23, 0x00	; 0
     140:	80 e0       	ldi	r24, 0x00	; 0
		tcnt = ctcGetTcnt(_DEF_TIM0);
     142:	0f d4       	rcall	.+2078   	; 0x962 <ctcSetTcnt>
     144:	80 e0       	ldi	r24, 0x00	; 0
     146:	7b d4       	rcall	.+2294   	; 0xa3e <ctcGetTcnt>
     148:	08 2f       	mov	r16, r24
		ctcSetOcr(_DEF_TIM0, 100, _DEF_CH_NONE);
     14a:	f9 2e       	mov	r15, r25
     14c:	40 e0       	ldi	r20, 0x00	; 0
     14e:	64 e6       	ldi	r22, 0x64	; 100
     150:	70 e0       	ldi	r23, 0x00	; 0
     152:	80 e0       	ldi	r24, 0x00	; 0
     154:	da d4       	rcall	.+2484   	; 0xb0a <ctcSetOcr>
		
		//ctcSetTcnt(_DEF_TIM1, 0);
		//ctcSetOcr(_DEF_TIM1, 100, _DEF_CH_A);
		//ctcSetIcr(_DEF_TIM1, 100);
		uartPrintf(_DEF_UART1, "TCNT: %d\n", tcnt);
     156:	ff 92       	push	r15
     158:	0f 93       	push	r16
     15a:	df 93       	push	r29
     15c:	cf 93       	push	r28
     15e:	1f 93       	push	r17
     160:	0e 94 f7 08 	call	0x11ee	; 0x11ee <uartPrintf>
     164:	8f ef       	ldi	r24, 0xFF	; 255
     166:	99 e6       	ldi	r25, 0x69	; 105
     168:	28 e1       	ldi	r18, 0x18	; 24
     16a:	81 50       	subi	r24, 0x01	; 1
     16c:	90 40       	sbci	r25, 0x00	; 0
     16e:	20 40       	sbci	r18, 0x00	; 0
     170:	e1 f7       	brne	.-8      	; 0x16a <apMain+0x6e>
     172:	00 c0       	rjmp	.+0      	; 0x174 <apMain+0x78>
		_delay_ms(500);
		//timerSetOcr(_DEF_TIM0, 255);
		//timerSetOcr(_DEF_TIM2, 500);
		//a4988SetSpeed(_DEF_A4988_0, 255);
		
		ctcSetTcnt(_DEF_TIM0, 0);
     174:	00 00       	nop
     176:	60 e0       	ldi	r22, 0x00	; 0
     178:	70 e0       	ldi	r23, 0x00	; 0
     17a:	80 e0       	ldi	r24, 0x00	; 0
     17c:	f2 d3       	rcall	.+2020   	; 0x962 <ctcSetTcnt>
		tcnt = ctcGetTcnt(_DEF_TIM0);
     17e:	80 e0       	ldi	r24, 0x00	; 0
     180:	5e d4       	rcall	.+2236   	; 0xa3e <ctcGetTcnt>
     182:	08 2f       	mov	r16, r24
     184:	f9 2e       	mov	r15, r25
		ctcSetOcr(_DEF_TIM0, 200, _DEF_CH_NONE);
     186:	40 e0       	ldi	r20, 0x00	; 0
     188:	68 ec       	ldi	r22, 0xC8	; 200
     18a:	70 e0       	ldi	r23, 0x00	; 0
     18c:	80 e0       	ldi	r24, 0x00	; 0
     18e:	bd d4       	rcall	.+2426   	; 0xb0a <ctcSetOcr>
     190:	ff 92       	push	r15
		
		//ctcSetTcnt(_DEF_TIM1, 0);
		//ctcSetOcr(_DEF_TIM1, 150, _DEF_CH_A);
		//ctcSetIcr(_DEF_TIM1, 200);
		//pwmSetOcr(_DEF_TIM1, 500, _DEF_CH_A);
		uartPrintf(_DEF_UART1, "TCNT: %d\n", tcnt);
     192:	0f 93       	push	r16
     194:	df 93       	push	r29
     196:	cf 93       	push	r28
     198:	1f 93       	push	r17
     19a:	0e 94 f7 08 	call	0x11ee	; 0x11ee <uartPrintf>
     19e:	2f ef       	ldi	r18, 0xFF	; 255
     1a0:	89 e6       	ldi	r24, 0x69	; 105
     1a2:	98 e1       	ldi	r25, 0x18	; 24
     1a4:	21 50       	subi	r18, 0x01	; 1
     1a6:	80 40       	sbci	r24, 0x00	; 0
     1a8:	90 40       	sbci	r25, 0x00	; 0
     1aa:	e1 f7       	brne	.-8      	; 0x1a4 <apMain+0xa8>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <apMain+0xb2>
     1ae:	00 00       	nop
     1b0:	8d b7       	in	r24, 0x3d	; 61
     1b2:	9e b7       	in	r25, 0x3e	; 62
     1b4:	0f 96       	adiw	r24, 0x0f	; 15
     1b6:	0f b6       	in	r0, 0x3f	; 63
     1b8:	f8 94       	cli
     1ba:	9e bf       	out	0x3e, r25	; 62
     1bc:	0f be       	out	0x3f, r0	; 63
     1be:	8d bf       	out	0x3d, r24	; 61
     1c0:	a0 cf       	rjmp	.-192    	; 0x102 <apMain+0x6>

000001c2 <__vector_18>:


#ifdef _USE_HW_UART
extern UART_HandleTypeDef huart1;
ISR(USART0_RX_vect)
{
     1c2:	1f 92       	push	r1
     1c4:	0f 92       	push	r0
     1c6:	0f b6       	in	r0, 0x3f	; 63
     1c8:	0f 92       	push	r0
     1ca:	11 24       	eor	r1, r1
     1cc:	0b b6       	in	r0, 0x3b	; 59
     1ce:	0f 92       	push	r0
     1d0:	2f 93       	push	r18
     1d2:	3f 93       	push	r19
     1d4:	4f 93       	push	r20
     1d6:	5f 93       	push	r21
     1d8:	6f 93       	push	r22
     1da:	7f 93       	push	r23
     1dc:	8f 93       	push	r24
     1de:	9f 93       	push	r25
     1e0:	af 93       	push	r26
     1e2:	bf 93       	push	r27
     1e4:	ef 93       	push	r30
     1e6:	ff 93       	push	r31
	UART_RxIRQHandler(&huart1);
     1e8:	85 eb       	ldi	r24, 0xB5	; 181
     1ea:	93 e0       	ldi	r25, 0x03	; 3
     1ec:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <UART_RxIRQHandler>
}
     1f0:	ff 91       	pop	r31
     1f2:	ef 91       	pop	r30
     1f4:	bf 91       	pop	r27
     1f6:	af 91       	pop	r26
     1f8:	9f 91       	pop	r25
     1fa:	8f 91       	pop	r24
     1fc:	7f 91       	pop	r23
     1fe:	6f 91       	pop	r22
     200:	5f 91       	pop	r21
     202:	4f 91       	pop	r20
     204:	3f 91       	pop	r19
     206:	2f 91       	pop	r18
     208:	0f 90       	pop	r0
     20a:	0b be       	out	0x3b, r0	; 59
     20c:	0f 90       	pop	r0
     20e:	0f be       	out	0x3f, r0	; 63
     210:	0f 90       	pop	r0
     212:	1f 90       	pop	r1
     214:	18 95       	reti

00000216 <__vector_20>:

ISR(USART0_TX_vect)
{
     216:	1f 92       	push	r1
     218:	0f 92       	push	r0
     21a:	0f b6       	in	r0, 0x3f	; 63
     21c:	0f 92       	push	r0
     21e:	11 24       	eor	r1, r1
     220:	0b b6       	in	r0, 0x3b	; 59
     222:	0f 92       	push	r0
     224:	2f 93       	push	r18
     226:	3f 93       	push	r19
     228:	4f 93       	push	r20
     22a:	5f 93       	push	r21
     22c:	6f 93       	push	r22
     22e:	7f 93       	push	r23
     230:	8f 93       	push	r24
     232:	9f 93       	push	r25
     234:	af 93       	push	r26
     236:	bf 93       	push	r27
     238:	ef 93       	push	r30
     23a:	ff 93       	push	r31
	UART_TxIRQHandler(&huart1);
     23c:	85 eb       	ldi	r24, 0xB5	; 181
     23e:	93 e0       	ldi	r25, 0x03	; 3
     240:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <UART_TxIRQHandler>
}
     244:	ff 91       	pop	r31
     246:	ef 91       	pop	r30
     248:	bf 91       	pop	r27
     24a:	af 91       	pop	r26
     24c:	9f 91       	pop	r25
     24e:	8f 91       	pop	r24
     250:	7f 91       	pop	r23
     252:	6f 91       	pop	r22
     254:	5f 91       	pop	r21
     256:	4f 91       	pop	r20
     258:	3f 91       	pop	r19
     25a:	2f 91       	pop	r18
     25c:	0f 90       	pop	r0
     25e:	0b be       	out	0x3b, r0	; 59
     260:	0f 90       	pop	r0
     262:	0f be       	out	0x3f, r0	; 63
     264:	0f 90       	pop	r0
     266:	1f 90       	pop	r1
     268:	18 95       	reti

0000026a <__vector_16>:
extern TIM16_HandleTypeDef htim3;
extern TIM16_HandleTypeDef htim4;


ISR(TIMER0_OVF_vect)
{
     26a:	1f 92       	push	r1
     26c:	0f 92       	push	r0
     26e:	0f b6       	in	r0, 0x3f	; 63
     270:	0f 92       	push	r0
     272:	11 24       	eor	r1, r1
     274:	0b b6       	in	r0, 0x3b	; 59
     276:	0f 92       	push	r0
     278:	2f 93       	push	r18
     27a:	3f 93       	push	r19
     27c:	4f 93       	push	r20
     27e:	5f 93       	push	r21
     280:	6f 93       	push	r22
     282:	7f 93       	push	r23
     284:	8f 93       	push	r24
     286:	9f 93       	push	r25
     288:	af 93       	push	r26
     28a:	bf 93       	push	r27
     28c:	ef 93       	push	r30
     28e:	ff 93       	push	r31
	TIM0_OVF_IRQHandler(&htim1);
     290:	83 ef       	ldi	r24, 0xF3	; 243
     292:	92 e0       	ldi	r25, 0x02	; 2
     294:	0e 94 cd 0c 	call	0x199a	; 0x199a <TIM0_OVF_IRQHandler>
}
     298:	ff 91       	pop	r31
     29a:	ef 91       	pop	r30
     29c:	bf 91       	pop	r27
     29e:	af 91       	pop	r26
     2a0:	9f 91       	pop	r25
     2a2:	8f 91       	pop	r24
     2a4:	7f 91       	pop	r23
     2a6:	6f 91       	pop	r22
     2a8:	5f 91       	pop	r21
     2aa:	4f 91       	pop	r20
     2ac:	3f 91       	pop	r19
     2ae:	2f 91       	pop	r18
     2b0:	0f 90       	pop	r0
     2b2:	0b be       	out	0x3b, r0	; 59
     2b4:	0f 90       	pop	r0
     2b6:	0f be       	out	0x3f, r0	; 63
     2b8:	0f 90       	pop	r0
     2ba:	1f 90       	pop	r1
     2bc:	18 95       	reti

000002be <__vector_15>:

ISR(TIMER0_COMP_vect)
{
     2be:	1f 92       	push	r1
     2c0:	0f 92       	push	r0
     2c2:	0f b6       	in	r0, 0x3f	; 63
     2c4:	0f 92       	push	r0
     2c6:	11 24       	eor	r1, r1
     2c8:	0b b6       	in	r0, 0x3b	; 59
     2ca:	0f 92       	push	r0
     2cc:	2f 93       	push	r18
     2ce:	3f 93       	push	r19
     2d0:	4f 93       	push	r20
     2d2:	5f 93       	push	r21
     2d4:	6f 93       	push	r22
     2d6:	7f 93       	push	r23
     2d8:	8f 93       	push	r24
     2da:	9f 93       	push	r25
     2dc:	af 93       	push	r26
     2de:	bf 93       	push	r27
     2e0:	ef 93       	push	r30
     2e2:	ff 93       	push	r31
	TIM0_OC_IRQHandler(&htim1);
     2e4:	83 ef       	ldi	r24, 0xF3	; 243
     2e6:	92 e0       	ldi	r25, 0x02	; 2
     2e8:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <TIM0_OC_IRQHandler>
}
     2ec:	ff 91       	pop	r31
     2ee:	ef 91       	pop	r30
     2f0:	bf 91       	pop	r27
     2f2:	af 91       	pop	r26
     2f4:	9f 91       	pop	r25
     2f6:	8f 91       	pop	r24
     2f8:	7f 91       	pop	r23
     2fa:	6f 91       	pop	r22
     2fc:	5f 91       	pop	r21
     2fe:	4f 91       	pop	r20
     300:	3f 91       	pop	r19
     302:	2f 91       	pop	r18
     304:	0f 90       	pop	r0
     306:	0b be       	out	0x3b, r0	; 59
     308:	0f 90       	pop	r0
     30a:	0f be       	out	0x3f, r0	; 63
     30c:	0f 90       	pop	r0
     30e:	1f 90       	pop	r1
     310:	18 95       	reti

00000312 <__vector_14>:

ISR(TIMER1_OVF_vect)
{
     312:	1f 92       	push	r1
     314:	0f 92       	push	r0
     316:	0f b6       	in	r0, 0x3f	; 63
     318:	0f 92       	push	r0
     31a:	11 24       	eor	r1, r1
	
}
     31c:	0f 90       	pop	r0
     31e:	0f be       	out	0x3f, r0	; 63
     320:	0f 90       	pop	r0
     322:	1f 90       	pop	r1
     324:	18 95       	reti

00000326 <__vector_12>:

ISR(TIMER1_COMPA_vect)
{
     326:	1f 92       	push	r1
     328:	0f 92       	push	r0
     32a:	0f b6       	in	r0, 0x3f	; 63
     32c:	0f 92       	push	r0
     32e:	11 24       	eor	r1, r1
	
}
     330:	0f 90       	pop	r0
     332:	0f be       	out	0x3f, r0	; 63
     334:	0f 90       	pop	r0
     336:	1f 90       	pop	r1
     338:	18 95       	reti

0000033a <__vector_13>:

ISR(TIMER1_COMPB_vect)
{
     33a:	1f 92       	push	r1
     33c:	0f 92       	push	r0
     33e:	0f b6       	in	r0, 0x3f	; 63
     340:	0f 92       	push	r0
     342:	11 24       	eor	r1, r1
	
}
     344:	0f 90       	pop	r0
     346:	0f be       	out	0x3f, r0	; 63
     348:	0f 90       	pop	r0
     34a:	1f 90       	pop	r1
     34c:	18 95       	reti

0000034e <__vector_24>:

ISR(TIMER1_COMPC_vect)
{
     34e:	1f 92       	push	r1
     350:	0f 92       	push	r0
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	0f 92       	push	r0
     356:	11 24       	eor	r1, r1
	
}
     358:	0f 90       	pop	r0
     35a:	0f be       	out	0x3f, r0	; 63
     35c:	0f 90       	pop	r0
     35e:	1f 90       	pop	r1
     360:	18 95       	reti

00000362 <__vector_11>:

ISR(TIMER1_CAPT_vect)
{
     362:	1f 92       	push	r1
     364:	0f 92       	push	r0
     366:	0f b6       	in	r0, 0x3f	; 63
     368:	0f 92       	push	r0
     36a:	11 24       	eor	r1, r1
	
}
     36c:	0f 90       	pop	r0
     36e:	0f be       	out	0x3f, r0	; 63
     370:	0f 90       	pop	r0
     372:	1f 90       	pop	r1
     374:	18 95       	reti

00000376 <__vector_10>:

ISR(TIMER2_OVF_vect)
{
     376:	1f 92       	push	r1
     378:	0f 92       	push	r0
     37a:	0f b6       	in	r0, 0x3f	; 63
     37c:	0f 92       	push	r0
     37e:	11 24       	eor	r1, r1
     380:	0b b6       	in	r0, 0x3b	; 59
     382:	0f 92       	push	r0
     384:	2f 93       	push	r18
     386:	3f 93       	push	r19
     388:	4f 93       	push	r20
     38a:	5f 93       	push	r21
     38c:	6f 93       	push	r22
     38e:	7f 93       	push	r23
     390:	8f 93       	push	r24
     392:	9f 93       	push	r25
     394:	af 93       	push	r26
     396:	bf 93       	push	r27
     398:	ef 93       	push	r30
     39a:	ff 93       	push	r31
	TIM2_OVF_IRQHandler(&htim2);
     39c:	87 e5       	ldi	r24, 0x57	; 87
     39e:	93 e0       	ldi	r25, 0x03	; 3
     3a0:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <TIM2_OVF_IRQHandler>
}
     3a4:	ff 91       	pop	r31
     3a6:	ef 91       	pop	r30
     3a8:	bf 91       	pop	r27
     3aa:	af 91       	pop	r26
     3ac:	9f 91       	pop	r25
     3ae:	8f 91       	pop	r24
     3b0:	7f 91       	pop	r23
     3b2:	6f 91       	pop	r22
     3b4:	5f 91       	pop	r21
     3b6:	4f 91       	pop	r20
     3b8:	3f 91       	pop	r19
     3ba:	2f 91       	pop	r18
     3bc:	0f 90       	pop	r0
     3be:	0b be       	out	0x3b, r0	; 59
     3c0:	0f 90       	pop	r0
     3c2:	0f be       	out	0x3f, r0	; 63
     3c4:	0f 90       	pop	r0
     3c6:	1f 90       	pop	r1
     3c8:	18 95       	reti

000003ca <__vector_9>:

ISR(TIMER2_COMP_vect)
{
     3ca:	1f 92       	push	r1
     3cc:	0f 92       	push	r0
     3ce:	0f b6       	in	r0, 0x3f	; 63
     3d0:	0f 92       	push	r0
     3d2:	11 24       	eor	r1, r1
     3d4:	0b b6       	in	r0, 0x3b	; 59
     3d6:	0f 92       	push	r0
     3d8:	2f 93       	push	r18
     3da:	3f 93       	push	r19
     3dc:	4f 93       	push	r20
     3de:	5f 93       	push	r21
     3e0:	6f 93       	push	r22
     3e2:	7f 93       	push	r23
     3e4:	8f 93       	push	r24
     3e6:	9f 93       	push	r25
     3e8:	af 93       	push	r26
     3ea:	bf 93       	push	r27
     3ec:	ef 93       	push	r30
     3ee:	ff 93       	push	r31
	TIM2_OC_IRQHandler(&htim2);
     3f0:	87 e5       	ldi	r24, 0x57	; 87
     3f2:	93 e0       	ldi	r25, 0x03	; 3
     3f4:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <TIM2_OC_IRQHandler>
}
     3f8:	ff 91       	pop	r31
     3fa:	ef 91       	pop	r30
     3fc:	bf 91       	pop	r27
     3fe:	af 91       	pop	r26
     400:	9f 91       	pop	r25
     402:	8f 91       	pop	r24
     404:	7f 91       	pop	r23
     406:	6f 91       	pop	r22
     408:	5f 91       	pop	r21
     40a:	4f 91       	pop	r20
     40c:	3f 91       	pop	r19
     40e:	2f 91       	pop	r18
     410:	0f 90       	pop	r0
     412:	0b be       	out	0x3b, r0	; 59
     414:	0f 90       	pop	r0
     416:	0f be       	out	0x3f, r0	; 63
     418:	0f 90       	pop	r0
     41a:	1f 90       	pop	r1
     41c:	18 95       	reti

0000041e <__vector_29>:

ISR(TIMER3_OVF_vect)
{
     41e:	1f 92       	push	r1
     420:	0f 92       	push	r0
     422:	0f b6       	in	r0, 0x3f	; 63
     424:	0f 92       	push	r0
     426:	11 24       	eor	r1, r1
	
}
     428:	0f 90       	pop	r0
     42a:	0f be       	out	0x3f, r0	; 63
     42c:	0f 90       	pop	r0
     42e:	1f 90       	pop	r1
     430:	18 95       	reti

00000432 <__vector_26>:

ISR(TIMER3_COMPA_vect)
{
     432:	1f 92       	push	r1
     434:	0f 92       	push	r0
     436:	0f b6       	in	r0, 0x3f	; 63
     438:	0f 92       	push	r0
     43a:	11 24       	eor	r1, r1
	
}
     43c:	0f 90       	pop	r0
     43e:	0f be       	out	0x3f, r0	; 63
     440:	0f 90       	pop	r0
     442:	1f 90       	pop	r1
     444:	18 95       	reti

00000446 <__vector_27>:

ISR(TIMER3_COMPB_vect)
{
     446:	1f 92       	push	r1
     448:	0f 92       	push	r0
     44a:	0f b6       	in	r0, 0x3f	; 63
     44c:	0f 92       	push	r0
     44e:	11 24       	eor	r1, r1
	
}
     450:	0f 90       	pop	r0
     452:	0f be       	out	0x3f, r0	; 63
     454:	0f 90       	pop	r0
     456:	1f 90       	pop	r1
     458:	18 95       	reti

0000045a <__vector_28>:

ISR(TIMER3_COMPC_vect)
{
     45a:	1f 92       	push	r1
     45c:	0f 92       	push	r0
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	0f 92       	push	r0
     462:	11 24       	eor	r1, r1
	
}
     464:	0f 90       	pop	r0
     466:	0f be       	out	0x3f, r0	; 63
     468:	0f 90       	pop	r0
     46a:	1f 90       	pop	r1
     46c:	18 95       	reti

0000046e <__vector_25>:

ISR(TIMER3_CAPT_vect)
{
     46e:	1f 92       	push	r1
     470:	0f 92       	push	r0
     472:	0f b6       	in	r0, 0x3f	; 63
     474:	0f 92       	push	r0
     476:	11 24       	eor	r1, r1
	
}
     478:	0f 90       	pop	r0
     47a:	0f be       	out	0x3f, r0	; 63
     47c:	0f 90       	pop	r0
     47e:	1f 90       	pop	r1
     480:	18 95       	reti

00000482 <bspInit>:
ï»¿#include "bsp.h"


void bspInit(void)
{
     482:	08 95       	ret

00000484 <qbufferCreate>:
{

}

bool qbufferCreate(qbuffer_t *p_node, uint8_t *p_buf, uint32_t length)
{
     484:	fc 01       	movw	r30, r24
	bool ret = true;

	p_node->in    = 0;
     486:	10 82       	st	Z, r1
     488:	11 82       	std	Z+1, r1	; 0x01
     48a:	12 82       	std	Z+2, r1	; 0x02
     48c:	13 82       	std	Z+3, r1	; 0x03
	p_node->out   = 0;
     48e:	14 82       	std	Z+4, r1	; 0x04
     490:	15 82       	std	Z+5, r1	; 0x05
     492:	16 82       	std	Z+6, r1	; 0x06
     494:	17 82       	std	Z+7, r1	; 0x07
	p_node->len   = length;
     496:	20 87       	std	Z+8, r18	; 0x08
     498:	31 87       	std	Z+9, r19	; 0x09
     49a:	42 87       	std	Z+10, r20	; 0x0a
     49c:	53 87       	std	Z+11, r21	; 0x0b
	p_node->p_buf = p_buf;
     49e:	75 87       	std	Z+13, r23	; 0x0d
     4a0:	64 87       	std	Z+12, r22	; 0x0c

	return ret;
}
     4a2:	81 e0       	ldi	r24, 0x01	; 1
     4a4:	08 95       	ret

000004a6 <qbufferWrite>:

bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     4a6:	4f 92       	push	r4
     4a8:	5f 92       	push	r5
     4aa:	6f 92       	push	r6
     4ac:	7f 92       	push	r7
     4ae:	af 92       	push	r10
     4b0:	bf 92       	push	r11
     4b2:	cf 92       	push	r12
     4b4:	df 92       	push	r13
     4b6:	ef 92       	push	r14
     4b8:	ff 92       	push	r15
     4ba:	0f 93       	push	r16
     4bc:	1f 93       	push	r17
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
     4c2:	00 d0       	rcall	.+0      	; 0x4c4 <qbufferWrite+0x1e>
     4c4:	00 d0       	rcall	.+0      	; 0x4c6 <qbufferWrite+0x20>
     4c6:	00 d0       	rcall	.+0      	; 0x4c8 <qbufferWrite+0x22>
     4c8:	cd b7       	in	r28, 0x3d	; 61
     4ca:	de b7       	in	r29, 0x3e	; 62
     4cc:	9e 83       	std	Y+6, r25	; 0x06
     4ce:	8d 83       	std	Y+5, r24	; 0x05
     4d0:	06 2f       	mov	r16, r22
     4d2:	17 2f       	mov	r17, r23
     4d4:	29 01       	movw	r4, r18
     4d6:	3a 01       	movw	r6, r20
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
     4d8:	23 2b       	or	r18, r19
     4da:	24 2b       	or	r18, r20
     4dc:	25 2b       	or	r18, r21
     4de:	09 f4       	brne	.+2      	; 0x4e2 <qbufferWrite+0x3c>
     4e0:	72 c0       	rjmp	.+228    	; 0x5c6 <qbufferWrite+0x120>
	{
		next_in = (p_node->in + 1) %p_node->len;
     4e2:	dc 01       	movw	r26, r24
     4e4:	8d 91       	ld	r24, X+
     4e6:	9d 91       	ld	r25, X+
     4e8:	0d 90       	ld	r0, X+
     4ea:	bc 91       	ld	r27, X
     4ec:	a0 2d       	mov	r26, r0
     4ee:	89 83       	std	Y+1, r24	; 0x01
     4f0:	9a 83       	std	Y+2, r25	; 0x02
     4f2:	ab 83       	std	Y+3, r26	; 0x03
     4f4:	bc 83       	std	Y+4, r27	; 0x04
     4f6:	bc 01       	movw	r22, r24
     4f8:	cd 01       	movw	r24, r26
     4fa:	6f 5f       	subi	r22, 0xFF	; 255
     4fc:	7f 4f       	sbci	r23, 0xFF	; 255
     4fe:	8f 4f       	sbci	r24, 0xFF	; 255
     500:	9f 4f       	sbci	r25, 0xFF	; 255
     502:	ed 81       	ldd	r30, Y+5	; 0x05
     504:	fe 81       	ldd	r31, Y+6	; 0x06
     506:	20 85       	ldd	r18, Z+8	; 0x08
     508:	31 85       	ldd	r19, Z+9	; 0x09
     50a:	42 85       	ldd	r20, Z+10	; 0x0a
     50c:	53 85       	ldd	r21, Z+11	; 0x0b
     50e:	0e 94 7f 11 	call	0x22fe	; 0x22fe <__udivmodsi4>
     512:	6b 01       	movw	r12, r22
     514:	7c 01       	movw	r14, r24

		if (next_in != p_node->out)
     516:	ed 81       	ldd	r30, Y+5	; 0x05
     518:	fe 81       	ldd	r31, Y+6	; 0x06
     51a:	84 81       	ldd	r24, Z+4	; 0x04
     51c:	95 81       	ldd	r25, Z+5	; 0x05
     51e:	a6 81       	ldd	r26, Z+6	; 0x06
     520:	b7 81       	ldd	r27, Z+7	; 0x07
     522:	c8 16       	cp	r12, r24
     524:	d9 06       	cpc	r13, r25
     526:	ea 06       	cpc	r14, r26
     528:	fb 06       	cpc	r15, r27
     52a:	09 f4       	brne	.+2      	; 0x52e <qbufferWrite+0x88>
     52c:	4c c0       	rjmp	.+152    	; 0x5c6 <qbufferWrite+0x120>
     52e:	a0 2e       	mov	r10, r16
     530:	b1 2e       	mov	r11, r17
     532:	00 e0       	ldi	r16, 0x00	; 0
     534:	10 e0       	ldi	r17, 0x00	; 0
     536:	24 c0       	rjmp	.+72     	; 0x580 <qbufferWrite+0xda>
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
	{
		next_in = (p_node->in + 1) %p_node->len;
     538:	c7 01       	movw	r24, r14
     53a:	b6 01       	movw	r22, r12
     53c:	6f 5f       	subi	r22, 0xFF	; 255
     53e:	7f 4f       	sbci	r23, 0xFF	; 255
     540:	8f 4f       	sbci	r24, 0xFF	; 255
     542:	9f 4f       	sbci	r25, 0xFF	; 255
     544:	ad 81       	ldd	r26, Y+5	; 0x05
     546:	be 81       	ldd	r27, Y+6	; 0x06
     548:	18 96       	adiw	r26, 0x08	; 8
     54a:	2d 91       	ld	r18, X+
     54c:	3d 91       	ld	r19, X+
     54e:	4d 91       	ld	r20, X+
     550:	5c 91       	ld	r21, X
     552:	1b 97       	sbiw	r26, 0x0b	; 11
     554:	0e 94 7f 11 	call	0x22fe	; 0x22fe <__udivmodsi4>
     558:	bf ef       	ldi	r27, 0xFF	; 255
     55a:	ab 1a       	sub	r10, r27
     55c:	bb 0a       	sbc	r11, r27
     55e:	c9 82       	std	Y+1, r12	; 0x01
     560:	da 82       	std	Y+2, r13	; 0x02
     562:	eb 82       	std	Y+3, r14	; 0x03
     564:	fc 82       	std	Y+4, r15	; 0x04

		if (next_in != p_node->out)
     566:	ed 81       	ldd	r30, Y+5	; 0x05
     568:	fe 81       	ldd	r31, Y+6	; 0x06
     56a:	c4 80       	ldd	r12, Z+4	; 0x04
     56c:	d5 80       	ldd	r13, Z+5	; 0x05
     56e:	e6 80       	ldd	r14, Z+6	; 0x06
     570:	f7 80       	ldd	r15, Z+7	; 0x07
     572:	6c 15       	cp	r22, r12
     574:	7d 05       	cpc	r23, r13
     576:	8e 05       	cpc	r24, r14
     578:	9f 05       	cpc	r25, r15
     57a:	29 f1       	breq	.+74     	; 0x5c6 <qbufferWrite+0x120>
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
	{
		next_in = (p_node->in + 1) %p_node->len;
     57c:	6b 01       	movw	r12, r22
     57e:	7c 01       	movw	r14, r24

		if (next_in != p_node->out)
		{
			if (p_node->p_buf != NULL)
     580:	ad 81       	ldd	r26, Y+5	; 0x05
     582:	be 81       	ldd	r27, Y+6	; 0x06
     584:	1c 96       	adiw	r26, 0x0c	; 12
     586:	8d 91       	ld	r24, X+
     588:	9c 91       	ld	r25, X
     58a:	1d 97       	sbiw	r26, 0x0d	; 13
     58c:	00 97       	sbiw	r24, 0x00	; 0
     58e:	39 f0       	breq	.+14     	; 0x59e <qbufferWrite+0xf8>
			{
				p_node->p_buf[p_node->in] = p_data[i];
     590:	f5 01       	movw	r30, r10
     592:	20 81       	ld	r18, Z
     594:	e9 81       	ldd	r30, Y+1	; 0x01
     596:	fa 81       	ldd	r31, Y+2	; 0x02
     598:	e8 0f       	add	r30, r24
     59a:	f9 1f       	adc	r31, r25
     59c:	20 83       	st	Z, r18
			}
			p_node->in = next_in;
     59e:	ad 81       	ldd	r26, Y+5	; 0x05
     5a0:	be 81       	ldd	r27, Y+6	; 0x06
     5a2:	cd 92       	st	X+, r12
     5a4:	dd 92       	st	X+, r13
     5a6:	ed 92       	st	X+, r14
     5a8:	fc 92       	st	X, r15
     5aa:	13 97       	sbiw	r26, 0x03	; 3
bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
     5ac:	0f 5f       	subi	r16, 0xFF	; 255
     5ae:	1f 4f       	sbci	r17, 0xFF	; 255
     5b0:	c8 01       	movw	r24, r16
     5b2:	01 2e       	mov	r0, r17
     5b4:	00 0c       	add	r0, r0
     5b6:	aa 0b       	sbc	r26, r26
     5b8:	bb 0b       	sbc	r27, r27
     5ba:	84 15       	cp	r24, r4
     5bc:	95 05       	cpc	r25, r5
     5be:	a6 05       	cpc	r26, r6
     5c0:	b7 05       	cpc	r27, r7
     5c2:	08 f4       	brcc	.+2      	; 0x5c6 <qbufferWrite+0x120>
     5c4:	b9 cf       	rjmp	.-142    	; 0x538 <qbufferWrite+0x92>
			ret = false;
			break;
		}
	}
	return ret;
}
     5c6:	80 e0       	ldi	r24, 0x00	; 0
     5c8:	26 96       	adiw	r28, 0x06	; 6
     5ca:	0f b6       	in	r0, 0x3f	; 63
     5cc:	f8 94       	cli
     5ce:	de bf       	out	0x3e, r29	; 62
     5d0:	0f be       	out	0x3f, r0	; 63
     5d2:	cd bf       	out	0x3d, r28	; 61
     5d4:	df 91       	pop	r29
     5d6:	cf 91       	pop	r28
     5d8:	1f 91       	pop	r17
     5da:	0f 91       	pop	r16
     5dc:	ff 90       	pop	r15
     5de:	ef 90       	pop	r14
     5e0:	df 90       	pop	r13
     5e2:	cf 90       	pop	r12
     5e4:	bf 90       	pop	r11
     5e6:	af 90       	pop	r10
     5e8:	7f 90       	pop	r7
     5ea:	6f 90       	pop	r6
     5ec:	5f 90       	pop	r5
     5ee:	4f 90       	pop	r4
     5f0:	08 95       	ret

000005f2 <ctcInit>:
		break;
		default:
		break;
	}
	return ret;
}
     5f2:	ea ef       	ldi	r30, 0xFA	; 250
     5f4:	f2 e0       	ldi	r31, 0x02	; 2
     5f6:	8e e4       	ldi	r24, 0x4E	; 78
     5f8:	93 e0       	ldi	r25, 0x03	; 3
     5fa:	10 82       	st	Z, r1
     5fc:	12 82       	std	Z+2, r1	; 0x02
     5fe:	11 82       	std	Z+1, r1	; 0x01
     600:	14 82       	std	Z+4, r1	; 0x04
     602:	13 82       	std	Z+3, r1	; 0x03
     604:	16 82       	std	Z+6, r1	; 0x06
     606:	15 82       	std	Z+5, r1	; 0x05
     608:	10 86       	std	Z+8, r1	; 0x08
     60a:	17 82       	std	Z+7, r1	; 0x07
     60c:	12 86       	std	Z+10, r1	; 0x0a
     60e:	11 86       	std	Z+9, r1	; 0x09
     610:	14 86       	std	Z+12, r1	; 0x0c
     612:	13 86       	std	Z+11, r1	; 0x0b
     614:	16 86       	std	Z+14, r1	; 0x0e
     616:	15 86       	std	Z+13, r1	; 0x0d
     618:	10 8a       	std	Z+16, r1	; 0x10
     61a:	17 86       	std	Z+15, r1	; 0x0f
     61c:	12 8a       	std	Z+18, r1	; 0x12
     61e:	11 8a       	std	Z+17, r1	; 0x11
     620:	14 8a       	std	Z+20, r1	; 0x14
     622:	13 8a       	std	Z+19, r1	; 0x13
     624:	75 96       	adiw	r30, 0x15	; 21
     626:	e8 17       	cp	r30, r24
     628:	f9 07       	cpc	r31, r25
     62a:	39 f7       	brne	.-50     	; 0x5fa <ctcInit+0x8>
     62c:	81 e0       	ldi	r24, 0x01	; 1
     62e:	08 95       	ret

00000630 <ctcBegin>:
     630:	cf 93       	push	r28
     632:	df 93       	push	r29
     634:	c8 2f       	mov	r28, r24
     636:	d0 e0       	ldi	r29, 0x00	; 0
     638:	81 30       	cpi	r24, 0x01	; 1
     63a:	09 f4       	brne	.+2      	; 0x63e <ctcBegin+0xe>
     63c:	55 c0       	rjmp	.+170    	; 0x6e8 <ctcBegin+0xb8>
     63e:	38 f0       	brcs	.+14     	; 0x64e <ctcBegin+0x1e>
     640:	82 30       	cpi	r24, 0x02	; 2
     642:	09 f4       	brne	.+2      	; 0x646 <ctcBegin+0x16>
     644:	76 c0       	rjmp	.+236    	; 0x732 <ctcBegin+0x102>
     646:	83 30       	cpi	r24, 0x03	; 3
     648:	09 f4       	brne	.+2      	; 0x64c <ctcBegin+0x1c>
     64a:	be c0       	rjmp	.+380    	; 0x7c8 <ctcBegin+0x198>
     64c:	e2 c0       	rjmp	.+452    	; 0x812 <ctcBegin+0x1e2>
     64e:	85 e1       	ldi	r24, 0x15	; 21
     650:	8c 9f       	mul	r24, r28
     652:	d0 01       	movw	r26, r0
     654:	8d 9f       	mul	r24, r29
     656:	b0 0d       	add	r27, r0
     658:	11 24       	eor	r1, r1
     65a:	a6 50       	subi	r26, 0x06	; 6
     65c:	bd 4f       	sbci	r27, 0xFD	; 253
     65e:	e3 ef       	ldi	r30, 0xF3	; 243
     660:	f2 e0       	ldi	r31, 0x02	; 2
     662:	1e 96       	adiw	r26, 0x0e	; 14
     664:	fc 93       	st	X, r31
     666:	ee 93       	st	-X, r30
     668:	1d 97       	sbiw	r26, 0x0d	; 13
     66a:	8c ed       	ldi	r24, 0xDC	; 220
     66c:	92 e0       	ldi	r25, 0x02	; 2
     66e:	52 96       	adiw	r26, 0x12	; 18
     670:	9c 93       	st	X, r25
     672:	8e 93       	st	-X, r24
     674:	51 97       	sbiw	r26, 0x11	; 17
     676:	10 82       	st	Z, r1
     678:	85 e0       	ldi	r24, 0x05	; 5
     67a:	82 83       	std	Z+2, r24	; 0x02
     67c:	11 82       	std	Z+1, r1	; 0x01
     67e:	13 82       	std	Z+3, r1	; 0x03
     680:	cf 01       	movw	r24, r30
     682:	69 d6       	rcall	.+3282   	; 0x1356 <TIM8_Base_Init>
     684:	81 11       	cpse	r24, r1
     686:	c7 c0       	rjmp	.+398    	; 0x816 <ctcBegin+0x1e6>
     688:	85 e1       	ldi	r24, 0x15	; 21
     68a:	8c 9f       	mul	r24, r28
     68c:	f0 01       	movw	r30, r0
     68e:	8d 9f       	mul	r24, r29
     690:	f0 0d       	add	r31, r0
     692:	11 24       	eor	r1, r1
     694:	e6 50       	subi	r30, 0x06	; 6
     696:	fd 4f       	sbci	r31, 0xFD	; 253
     698:	81 e0       	ldi	r24, 0x01	; 1
     69a:	80 83       	st	Z, r24
     69c:	a1 89       	ldd	r26, Z+17	; 0x11
     69e:	b2 89       	ldd	r27, Z+18	; 0x12
     6a0:	8c 93       	st	X, r24
     6a2:	a1 89       	ldd	r26, Z+17	; 0x11
     6a4:	b2 89       	ldd	r27, Z+18	; 0x12
     6a6:	11 96       	adiw	r26, 0x01	; 1
     6a8:	8c 93       	st	X, r24
     6aa:	a1 89       	ldd	r26, Z+17	; 0x11
     6ac:	b2 89       	ldd	r27, Z+18	; 0x12
     6ae:	12 96       	adiw	r26, 0x02	; 2
     6b0:	8c 93       	st	X, r24
     6b2:	a1 89       	ldd	r26, Z+17	; 0x11
     6b4:	b2 89       	ldd	r27, Z+18	; 0x12
     6b6:	13 96       	adiw	r26, 0x03	; 3
     6b8:	1c 92       	st	X, r1
     6ba:	a1 89       	ldd	r26, Z+17	; 0x11
     6bc:	b2 89       	ldd	r27, Z+18	; 0x12
     6be:	14 96       	adiw	r26, 0x04	; 4
     6c0:	1c 92       	st	X, r1
     6c2:	61 89       	ldd	r22, Z+17	; 0x11
     6c4:	72 89       	ldd	r23, Z+18	; 0x12
     6c6:	85 85       	ldd	r24, Z+13	; 0x0d
     6c8:	96 85       	ldd	r25, Z+14	; 0x0e
     6ca:	98 d6       	rcall	.+3376   	; 0x13fc <TIM8_OC_Init>
     6cc:	88 23       	and	r24, r24
     6ce:	09 f4       	brne	.+2      	; 0x6d2 <ctcBegin+0xa2>
     6d0:	a4 c0       	rjmp	.+328    	; 0x81a <ctcBegin+0x1ea>
     6d2:	85 e1       	ldi	r24, 0x15	; 21
     6d4:	8c 9f       	mul	r24, r28
     6d6:	f0 01       	movw	r30, r0
     6d8:	8d 9f       	mul	r24, r29
     6da:	f0 0d       	add	r31, r0
     6dc:	11 24       	eor	r1, r1
     6de:	e6 50       	subi	r30, 0x06	; 6
     6e0:	fd 4f       	sbci	r31, 0xFD	; 253
     6e2:	10 82       	st	Z, r1
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	9e c0       	rjmp	.+316    	; 0x824 <ctcBegin+0x1f4>
     6e8:	85 e1       	ldi	r24, 0x15	; 21
     6ea:	8c 9f       	mul	r24, r28
     6ec:	f0 01       	movw	r30, r0
     6ee:	8d 9f       	mul	r24, r29
     6f0:	f0 0d       	add	r31, r0
     6f2:	11 24       	eor	r1, r1
     6f4:	e6 50       	subi	r30, 0x06	; 6
     6f6:	fd 4f       	sbci	r31, 0xFD	; 253
     6f8:	a1 ee       	ldi	r26, 0xE1	; 225
     6fa:	b2 e0       	ldi	r27, 0x02	; 2
     6fc:	b0 8b       	std	Z+16, r27	; 0x10
     6fe:	a7 87       	std	Z+15, r26	; 0x0f
     700:	ca ee       	ldi	r28, 0xEA	; 234
     702:	d2 e0       	ldi	r29, 0x02	; 2
     704:	d4 8b       	std	Z+20, r29	; 0x14
     706:	c3 8b       	std	Z+19, r28	; 0x13
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	8c 93       	st	X, r24
     70c:	95 e0       	ldi	r25, 0x05	; 5
     70e:	12 96       	adiw	r26, 0x02	; 2
     710:	9c 93       	st	X, r25
     712:	12 97       	sbiw	r26, 0x02	; 2
     714:	11 96       	adiw	r26, 0x01	; 1
     716:	1c 92       	st	X, r1
     718:	11 97       	sbiw	r26, 0x01	; 1
     71a:	15 96       	adiw	r26, 0x05	; 5
     71c:	1c 92       	st	X, r1
     71e:	1e 92       	st	-X, r1
     720:	14 97       	sbiw	r26, 0x04	; 4
     722:	1c 82       	std	Y+4, r1	; 0x04
     724:	1b 82       	std	Y+3, r1	; 0x03
     726:	1e 82       	std	Y+6, r1	; 0x06
     728:	1d 82       	std	Y+5, r1	; 0x05
     72a:	18 86       	std	Y+8, r1	; 0x08
     72c:	1f 82       	std	Y+7, r1	; 0x07
     72e:	80 83       	st	Z, r24
     730:	79 c0       	rjmp	.+242    	; 0x824 <ctcBegin+0x1f4>
     732:	85 e1       	ldi	r24, 0x15	; 21
     734:	8c 9f       	mul	r24, r28
     736:	d0 01       	movw	r26, r0
     738:	8d 9f       	mul	r24, r29
     73a:	b0 0d       	add	r27, r0
     73c:	11 24       	eor	r1, r1
     73e:	a6 50       	subi	r26, 0x06	; 6
     740:	bd 4f       	sbci	r27, 0xFD	; 253
     742:	e7 e5       	ldi	r30, 0x57	; 87
     744:	f3 e0       	ldi	r31, 0x03	; 3
     746:	1e 96       	adiw	r26, 0x0e	; 14
     748:	fc 93       	st	X, r31
     74a:	ee 93       	st	-X, r30
     74c:	1d 97       	sbiw	r26, 0x0d	; 13
     74e:	8e e5       	ldi	r24, 0x5E	; 94
     750:	93 e0       	ldi	r25, 0x03	; 3
     752:	52 96       	adiw	r26, 0x12	; 18
     754:	9c 93       	st	X, r25
     756:	8e 93       	st	-X, r24
     758:	51 97       	sbiw	r26, 0x11	; 17
     75a:	82 e0       	ldi	r24, 0x02	; 2
     75c:	80 83       	st	Z, r24
     75e:	12 82       	std	Z+2, r1	; 0x02
     760:	11 82       	std	Z+1, r1	; 0x01
     762:	cf 01       	movw	r24, r30
     764:	f8 d5       	rcall	.+3056   	; 0x1356 <TIM8_Base_Init>
     766:	81 11       	cpse	r24, r1
     768:	5a c0       	rjmp	.+180    	; 0x81e <ctcBegin+0x1ee>
     76a:	85 e1       	ldi	r24, 0x15	; 21
     76c:	8c 9f       	mul	r24, r28
     76e:	f0 01       	movw	r30, r0
     770:	8d 9f       	mul	r24, r29
     772:	f0 0d       	add	r31, r0
     774:	11 24       	eor	r1, r1
     776:	e6 50       	subi	r30, 0x06	; 6
     778:	fd 4f       	sbci	r31, 0xFD	; 253
     77a:	81 e0       	ldi	r24, 0x01	; 1
     77c:	80 83       	st	Z, r24
     77e:	a1 89       	ldd	r26, Z+17	; 0x11
     780:	b2 89       	ldd	r27, Z+18	; 0x12
     782:	1c 92       	st	X, r1
     784:	a1 89       	ldd	r26, Z+17	; 0x11
     786:	b2 89       	ldd	r27, Z+18	; 0x12
     788:	11 96       	adiw	r26, 0x01	; 1
     78a:	1c 92       	st	X, r1
     78c:	a1 89       	ldd	r26, Z+17	; 0x11
     78e:	b2 89       	ldd	r27, Z+18	; 0x12
     790:	12 96       	adiw	r26, 0x02	; 2
     792:	1c 92       	st	X, r1
     794:	a1 89       	ldd	r26, Z+17	; 0x11
     796:	b2 89       	ldd	r27, Z+18	; 0x12
     798:	13 96       	adiw	r26, 0x03	; 3
     79a:	1c 92       	st	X, r1
     79c:	a1 89       	ldd	r26, Z+17	; 0x11
     79e:	b2 89       	ldd	r27, Z+18	; 0x12
     7a0:	14 96       	adiw	r26, 0x04	; 4
     7a2:	1c 92       	st	X, r1
     7a4:	61 89       	ldd	r22, Z+17	; 0x11
     7a6:	72 89       	ldd	r23, Z+18	; 0x12
     7a8:	85 85       	ldd	r24, Z+13	; 0x0d
     7aa:	96 85       	ldd	r25, Z+14	; 0x0e
     7ac:	27 d6       	rcall	.+3150   	; 0x13fc <TIM8_OC_Init>
     7ae:	88 23       	and	r24, r24
     7b0:	c1 f1       	breq	.+112    	; 0x822 <ctcBegin+0x1f2>
     7b2:	85 e1       	ldi	r24, 0x15	; 21
     7b4:	8c 9f       	mul	r24, r28
     7b6:	f0 01       	movw	r30, r0
     7b8:	8d 9f       	mul	r24, r29
     7ba:	f0 0d       	add	r31, r0
     7bc:	11 24       	eor	r1, r1
     7be:	e6 50       	subi	r30, 0x06	; 6
     7c0:	fd 4f       	sbci	r31, 0xFD	; 253
     7c2:	10 82       	st	Z, r1
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	2e c0       	rjmp	.+92     	; 0x824 <ctcBegin+0x1f4>
     7c8:	85 e1       	ldi	r24, 0x15	; 21
     7ca:	8c 9f       	mul	r24, r28
     7cc:	f0 01       	movw	r30, r0
     7ce:	8d 9f       	mul	r24, r29
     7d0:	f0 0d       	add	r31, r0
     7d2:	11 24       	eor	r1, r1
     7d4:	e6 50       	subi	r30, 0x06	; 6
     7d6:	fd 4f       	sbci	r31, 0xFD	; 253
     7d8:	a3 ed       	ldi	r26, 0xD3	; 211
     7da:	b2 e0       	ldi	r27, 0x02	; 2
     7dc:	b0 8b       	std	Z+16, r27	; 0x10
     7de:	a7 87       	std	Z+15, r26	; 0x0f
     7e0:	ce e4       	ldi	r28, 0x4E	; 78
     7e2:	d3 e0       	ldi	r29, 0x03	; 3
     7e4:	d4 8b       	std	Z+20, r29	; 0x14
     7e6:	c3 8b       	std	Z+19, r28	; 0x13
     7e8:	83 e0       	ldi	r24, 0x03	; 3
     7ea:	8c 93       	st	X, r24
     7ec:	12 96       	adiw	r26, 0x02	; 2
     7ee:	1c 92       	st	X, r1
     7f0:	12 97       	sbiw	r26, 0x02	; 2
     7f2:	11 96       	adiw	r26, 0x01	; 1
     7f4:	1c 92       	st	X, r1
     7f6:	11 97       	sbiw	r26, 0x01	; 1
     7f8:	15 96       	adiw	r26, 0x05	; 5
     7fa:	1c 92       	st	X, r1
     7fc:	1e 92       	st	-X, r1
     7fe:	14 97       	sbiw	r26, 0x04	; 4
     800:	1c 82       	std	Y+4, r1	; 0x04
     802:	1b 82       	std	Y+3, r1	; 0x03
     804:	1e 82       	std	Y+6, r1	; 0x06
     806:	1d 82       	std	Y+5, r1	; 0x05
     808:	18 86       	std	Y+8, r1	; 0x08
     80a:	1f 82       	std	Y+7, r1	; 0x07
     80c:	81 e0       	ldi	r24, 0x01	; 1
     80e:	80 83       	st	Z, r24
     810:	09 c0       	rjmp	.+18     	; 0x824 <ctcBegin+0x1f4>
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	07 c0       	rjmp	.+14     	; 0x824 <ctcBegin+0x1f4>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	05 c0       	rjmp	.+10     	; 0x824 <ctcBegin+0x1f4>
     81a:	81 e0       	ldi	r24, 0x01	; 1
     81c:	03 c0       	rjmp	.+6      	; 0x824 <ctcBegin+0x1f4>
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	01 c0       	rjmp	.+2      	; 0x824 <ctcBegin+0x1f4>
     822:	81 e0       	ldi	r24, 0x01	; 1
     824:	df 91       	pop	r29
     826:	cf 91       	pop	r28
     828:	08 95       	ret

0000082a <ctcStart>:
     82a:	28 2f       	mov	r18, r24
     82c:	30 e0       	ldi	r19, 0x00	; 0
     82e:	81 30       	cpi	r24, 0x01	; 1
     830:	b1 f0       	breq	.+44     	; 0x85e <ctcStart+0x34>
     832:	28 f0       	brcs	.+10     	; 0x83e <ctcStart+0x14>
     834:	82 30       	cpi	r24, 0x02	; 2
     836:	21 f1       	breq	.+72     	; 0x880 <ctcStart+0x56>
     838:	83 30       	cpi	r24, 0x03	; 3
     83a:	91 f1       	breq	.+100    	; 0x8a0 <ctcStart+0x76>
     83c:	42 c0       	rjmp	.+132    	; 0x8c2 <ctcStart+0x98>
     83e:	85 e1       	ldi	r24, 0x15	; 21
     840:	82 9f       	mul	r24, r18
     842:	f0 01       	movw	r30, r0
     844:	83 9f       	mul	r24, r19
     846:	f0 0d       	add	r31, r0
     848:	11 24       	eor	r1, r1
     84a:	e6 50       	subi	r30, 0x06	; 6
     84c:	fd 4f       	sbci	r31, 0xFD	; 253
     84e:	85 85       	ldd	r24, Z+13	; 0x0d
     850:	96 85       	ldd	r25, Z+14	; 0x0e
     852:	95 d7       	rcall	.+3882   	; 0x177e <TIM8_OC_Start>
     854:	91 e0       	ldi	r25, 0x01	; 1
     856:	88 23       	and	r24, r24
     858:	a9 f1       	breq	.+106    	; 0x8c4 <ctcStart+0x9a>
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	33 c0       	rjmp	.+102    	; 0x8c4 <ctcStart+0x9a>
     85e:	85 e1       	ldi	r24, 0x15	; 21
     860:	82 9f       	mul	r24, r18
     862:	f0 01       	movw	r30, r0
     864:	83 9f       	mul	r24, r19
     866:	f0 0d       	add	r31, r0
     868:	11 24       	eor	r1, r1
     86a:	e6 50       	subi	r30, 0x06	; 6
     86c:	fd 4f       	sbci	r31, 0xFD	; 253
     86e:	87 85       	ldd	r24, Z+15	; 0x0f
     870:	90 89       	ldd	r25, Z+16	; 0x10
     872:	0e 94 bb 0c 	call	0x1976	; 0x1976 <TIM16_OC_Start>
     876:	91 e0       	ldi	r25, 0x01	; 1
     878:	88 23       	and	r24, r24
     87a:	21 f1       	breq	.+72     	; 0x8c4 <ctcStart+0x9a>
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	22 c0       	rjmp	.+68     	; 0x8c4 <ctcStart+0x9a>
     880:	85 e1       	ldi	r24, 0x15	; 21
     882:	82 9f       	mul	r24, r18
     884:	f0 01       	movw	r30, r0
     886:	83 9f       	mul	r24, r19
     888:	f0 0d       	add	r31, r0
     88a:	11 24       	eor	r1, r1
     88c:	e6 50       	subi	r30, 0x06	; 6
     88e:	fd 4f       	sbci	r31, 0xFD	; 253
     890:	85 85       	ldd	r24, Z+13	; 0x0d
     892:	96 85       	ldd	r25, Z+14	; 0x0e
     894:	74 d7       	rcall	.+3816   	; 0x177e <TIM8_OC_Start>
     896:	91 e0       	ldi	r25, 0x01	; 1
     898:	88 23       	and	r24, r24
     89a:	a1 f0       	breq	.+40     	; 0x8c4 <ctcStart+0x9a>
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	12 c0       	rjmp	.+36     	; 0x8c4 <ctcStart+0x9a>
     8a0:	85 e1       	ldi	r24, 0x15	; 21
     8a2:	82 9f       	mul	r24, r18
     8a4:	f0 01       	movw	r30, r0
     8a6:	83 9f       	mul	r24, r19
     8a8:	f0 0d       	add	r31, r0
     8aa:	11 24       	eor	r1, r1
     8ac:	e6 50       	subi	r30, 0x06	; 6
     8ae:	fd 4f       	sbci	r31, 0xFD	; 253
     8b0:	87 85       	ldd	r24, Z+15	; 0x0f
     8b2:	90 89       	ldd	r25, Z+16	; 0x10
     8b4:	0e 94 bb 0c 	call	0x1976	; 0x1976 <TIM16_OC_Start>
     8b8:	91 e0       	ldi	r25, 0x01	; 1
     8ba:	88 23       	and	r24, r24
     8bc:	19 f0       	breq	.+6      	; 0x8c4 <ctcStart+0x9a>
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	01 c0       	rjmp	.+2      	; 0x8c4 <ctcStart+0x9a>
     8c2:	91 e0       	ldi	r25, 0x01	; 1
     8c4:	89 2f       	mov	r24, r25
     8c6:	08 95       	ret

000008c8 <ctcStop>:
     8c8:	28 2f       	mov	r18, r24
     8ca:	30 e0       	ldi	r19, 0x00	; 0
     8cc:	81 30       	cpi	r24, 0x01	; 1
     8ce:	b1 f0       	breq	.+44     	; 0x8fc <ctcStop+0x34>
     8d0:	28 f0       	brcs	.+10     	; 0x8dc <ctcStop+0x14>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	19 f1       	breq	.+70     	; 0x91c <ctcStop+0x54>
     8d6:	83 30       	cpi	r24, 0x03	; 3
     8d8:	89 f1       	breq	.+98     	; 0x93c <ctcStop+0x74>
     8da:	40 c0       	rjmp	.+128    	; 0x95c <ctcStop+0x94>
     8dc:	85 e1       	ldi	r24, 0x15	; 21
     8de:	82 9f       	mul	r24, r18
     8e0:	f0 01       	movw	r30, r0
     8e2:	83 9f       	mul	r24, r19
     8e4:	f0 0d       	add	r31, r0
     8e6:	11 24       	eor	r1, r1
     8e8:	e6 50       	subi	r30, 0x06	; 6
     8ea:	fd 4f       	sbci	r31, 0xFD	; 253
     8ec:	85 85       	ldd	r24, Z+13	; 0x0d
     8ee:	96 85       	ldd	r25, Z+14	; 0x0e
     8f0:	1e d6       	rcall	.+3132   	; 0x152e <TIM8_OC_Stop>
     8f2:	91 e0       	ldi	r25, 0x01	; 1
     8f4:	88 23       	and	r24, r24
     8f6:	99 f1       	breq	.+102    	; 0x95e <ctcStop+0x96>
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	31 c0       	rjmp	.+98     	; 0x95e <ctcStop+0x96>
     8fc:	85 e1       	ldi	r24, 0x15	; 21
     8fe:	82 9f       	mul	r24, r18
     900:	f0 01       	movw	r30, r0
     902:	83 9f       	mul	r24, r19
     904:	f0 0d       	add	r31, r0
     906:	11 24       	eor	r1, r1
     908:	e6 50       	subi	r30, 0x06	; 6
     90a:	fd 4f       	sbci	r31, 0xFD	; 253
     90c:	87 85       	ldd	r24, Z+15	; 0x0f
     90e:	90 89       	ldd	r25, Z+16	; 0x10
     910:	23 d6       	rcall	.+3142   	; 0x1558 <TIM16_OC_Stop>
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	88 23       	and	r24, r24
     916:	19 f1       	breq	.+70     	; 0x95e <ctcStop+0x96>
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	21 c0       	rjmp	.+66     	; 0x95e <ctcStop+0x96>
     91c:	85 e1       	ldi	r24, 0x15	; 21
     91e:	82 9f       	mul	r24, r18
     920:	f0 01       	movw	r30, r0
     922:	83 9f       	mul	r24, r19
     924:	f0 0d       	add	r31, r0
     926:	11 24       	eor	r1, r1
     928:	e6 50       	subi	r30, 0x06	; 6
     92a:	fd 4f       	sbci	r31, 0xFD	; 253
     92c:	85 85       	ldd	r24, Z+13	; 0x0d
     92e:	96 85       	ldd	r25, Z+14	; 0x0e
     930:	fe d5       	rcall	.+3068   	; 0x152e <TIM8_OC_Stop>
     932:	91 e0       	ldi	r25, 0x01	; 1
     934:	88 23       	and	r24, r24
     936:	99 f0       	breq	.+38     	; 0x95e <ctcStop+0x96>
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	11 c0       	rjmp	.+34     	; 0x95e <ctcStop+0x96>
     93c:	85 e1       	ldi	r24, 0x15	; 21
     93e:	82 9f       	mul	r24, r18
     940:	f0 01       	movw	r30, r0
     942:	83 9f       	mul	r24, r19
     944:	f0 0d       	add	r31, r0
     946:	11 24       	eor	r1, r1
     948:	e6 50       	subi	r30, 0x06	; 6
     94a:	fd 4f       	sbci	r31, 0xFD	; 253
     94c:	87 85       	ldd	r24, Z+15	; 0x0f
     94e:	90 89       	ldd	r25, Z+16	; 0x10
     950:	03 d6       	rcall	.+3078   	; 0x1558 <TIM16_OC_Stop>
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	88 23       	and	r24, r24
     956:	19 f0       	breq	.+6      	; 0x95e <ctcStop+0x96>
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	01 c0       	rjmp	.+2      	; 0x95e <ctcStop+0x96>
     95c:	91 e0       	ldi	r25, 0x01	; 1
     95e:	89 2f       	mov	r24, r25
     960:	08 95       	ret

00000962 <ctcSetTcnt>:

bool ctcSetTcnt(uint8_t ch_, uint16_t tcnt_)
{
	bool ret = true;
	
	ctc_t *p_ctc = &ctc_tbl[ch_];
     962:	28 2f       	mov	r18, r24
     964:	30 e0       	ldi	r19, 0x00	; 0
	switch(ch_)
     966:	81 30       	cpi	r24, 0x01	; 1
     968:	d1 f0       	breq	.+52     	; 0x99e <ctcSetTcnt+0x3c>
     96a:	30 f0       	brcs	.+12     	; 0x978 <ctcSetTcnt+0x16>
     96c:	82 30       	cpi	r24, 0x02	; 2
     96e:	a9 f1       	breq	.+106    	; 0x9da <ctcSetTcnt+0x78>
     970:	83 30       	cpi	r24, 0x03	; 3
     972:	09 f4       	brne	.+2      	; 0x976 <ctcSetTcnt+0x14>
     974:	45 c0       	rjmp	.+138    	; 0xa00 <ctcSetTcnt+0x9e>
     976:	61 c0       	rjmp	.+194    	; 0xa3a <ctcSetTcnt+0xd8>
	{
		case _DEF_TIM0:
		*(p_ctc->h_tim8->Regs->TCNTn) = tcnt_ & 0xFF;
     978:	85 e1       	ldi	r24, 0x15	; 21
     97a:	82 9f       	mul	r24, r18
     97c:	f0 01       	movw	r30, r0
     97e:	83 9f       	mul	r24, r19
     980:	f0 0d       	add	r31, r0
     982:	11 24       	eor	r1, r1
     984:	e6 50       	subi	r30, 0x06	; 6
     986:	fd 4f       	sbci	r31, 0xFD	; 253
     988:	05 84       	ldd	r0, Z+13	; 0x0d
     98a:	f6 85       	ldd	r31, Z+14	; 0x0e
     98c:	e0 2d       	mov	r30, r0
     98e:	04 80       	ldd	r0, Z+4	; 0x04
     990:	f5 81       	ldd	r31, Z+5	; 0x05
     992:	e0 2d       	mov	r30, r0
     994:	02 80       	ldd	r0, Z+2	; 0x02
     996:	f3 81       	ldd	r31, Z+3	; 0x03
     998:	e0 2d       	mov	r30, r0
     99a:	60 83       	st	Z, r22
		break;
     99c:	4e c0       	rjmp	.+156    	; 0xa3a <ctcSetTcnt+0xd8>
		case _DEF_TIM1:
		*(p_ctc->h_tim16->Regs->TCNTnH) = (tcnt_ >> 8) & 0xFF;
     99e:	85 e1       	ldi	r24, 0x15	; 21
     9a0:	82 9f       	mul	r24, r18
     9a2:	f0 01       	movw	r30, r0
     9a4:	83 9f       	mul	r24, r19
     9a6:	f0 0d       	add	r31, r0
     9a8:	11 24       	eor	r1, r1
     9aa:	e6 50       	subi	r30, 0x06	; 6
     9ac:	fd 4f       	sbci	r31, 0xFD	; 253
     9ae:	a7 85       	ldd	r26, Z+15	; 0x0f
     9b0:	b0 89       	ldd	r27, Z+16	; 0x10
     9b2:	16 96       	adiw	r26, 0x06	; 6
     9b4:	0d 90       	ld	r0, X+
     9b6:	bc 91       	ld	r27, X
     9b8:	a0 2d       	mov	r26, r0
     9ba:	18 96       	adiw	r26, 0x08	; 8
     9bc:	0d 90       	ld	r0, X+
     9be:	bc 91       	ld	r27, X
     9c0:	a0 2d       	mov	r26, r0
     9c2:	7c 93       	st	X, r23
		*(p_ctc->h_tim16->Regs->TCNTnL) = (tcnt_ & 0xFF);
     9c4:	07 84       	ldd	r0, Z+15	; 0x0f
     9c6:	f0 89       	ldd	r31, Z+16	; 0x10
     9c8:	e0 2d       	mov	r30, r0
     9ca:	06 80       	ldd	r0, Z+6	; 0x06
     9cc:	f7 81       	ldd	r31, Z+7	; 0x07
     9ce:	e0 2d       	mov	r30, r0
     9d0:	06 80       	ldd	r0, Z+6	; 0x06
     9d2:	f7 81       	ldd	r31, Z+7	; 0x07
     9d4:	e0 2d       	mov	r30, r0
     9d6:	60 83       	st	Z, r22
		break;
     9d8:	30 c0       	rjmp	.+96     	; 0xa3a <ctcSetTcnt+0xd8>
		case _DEF_TIM2:
		*(p_ctc->h_tim8->Regs->TCNTn) = tcnt_ & 0xFF;
     9da:	85 e1       	ldi	r24, 0x15	; 21
     9dc:	82 9f       	mul	r24, r18
     9de:	f0 01       	movw	r30, r0
     9e0:	83 9f       	mul	r24, r19
     9e2:	f0 0d       	add	r31, r0
     9e4:	11 24       	eor	r1, r1
     9e6:	e6 50       	subi	r30, 0x06	; 6
     9e8:	fd 4f       	sbci	r31, 0xFD	; 253
     9ea:	05 84       	ldd	r0, Z+13	; 0x0d
     9ec:	f6 85       	ldd	r31, Z+14	; 0x0e
     9ee:	e0 2d       	mov	r30, r0
     9f0:	04 80       	ldd	r0, Z+4	; 0x04
     9f2:	f5 81       	ldd	r31, Z+5	; 0x05
     9f4:	e0 2d       	mov	r30, r0
     9f6:	02 80       	ldd	r0, Z+2	; 0x02
     9f8:	f3 81       	ldd	r31, Z+3	; 0x03
     9fa:	e0 2d       	mov	r30, r0
     9fc:	60 83       	st	Z, r22
		break;
     9fe:	1d c0       	rjmp	.+58     	; 0xa3a <ctcSetTcnt+0xd8>
		case _DEF_TIM3:
		*(p_ctc->h_tim16->Regs->TCNTnH) = (tcnt_ >> 8) & 0xFF;
     a00:	85 e1       	ldi	r24, 0x15	; 21
     a02:	82 9f       	mul	r24, r18
     a04:	f0 01       	movw	r30, r0
     a06:	83 9f       	mul	r24, r19
     a08:	f0 0d       	add	r31, r0
     a0a:	11 24       	eor	r1, r1
     a0c:	e6 50       	subi	r30, 0x06	; 6
     a0e:	fd 4f       	sbci	r31, 0xFD	; 253
     a10:	a7 85       	ldd	r26, Z+15	; 0x0f
     a12:	b0 89       	ldd	r27, Z+16	; 0x10
     a14:	16 96       	adiw	r26, 0x06	; 6
     a16:	0d 90       	ld	r0, X+
     a18:	bc 91       	ld	r27, X
     a1a:	a0 2d       	mov	r26, r0
     a1c:	18 96       	adiw	r26, 0x08	; 8
     a1e:	0d 90       	ld	r0, X+
     a20:	bc 91       	ld	r27, X
     a22:	a0 2d       	mov	r26, r0
     a24:	7c 93       	st	X, r23
		*(p_ctc->h_tim16->Regs->TCNTnL) = (tcnt_ & 0xFF);
     a26:	07 84       	ldd	r0, Z+15	; 0x0f
     a28:	f0 89       	ldd	r31, Z+16	; 0x10
     a2a:	e0 2d       	mov	r30, r0
     a2c:	06 80       	ldd	r0, Z+6	; 0x06
     a2e:	f7 81       	ldd	r31, Z+7	; 0x07
     a30:	e0 2d       	mov	r30, r0
     a32:	06 80       	ldd	r0, Z+6	; 0x06
     a34:	f7 81       	ldd	r31, Z+7	; 0x07
     a36:	e0 2d       	mov	r30, r0
     a38:	60 83       	st	Z, r22
		break;
		default:
		break;
	}
	return ret;
}
     a3a:	81 e0       	ldi	r24, 0x01	; 1
     a3c:	08 95       	ret

00000a3e <ctcGetTcnt>:

uint16_t ctcGetTcnt(uint8_t ch_)
{
	uint16_t ret = 0;
	
	ctc_t *p_ctc = &ctc_tbl[ch_];
     a3e:	28 2f       	mov	r18, r24
     a40:	30 e0       	ldi	r19, 0x00	; 0
	switch(ch_)
     a42:	81 30       	cpi	r24, 0x01	; 1
     a44:	d9 f0       	breq	.+54     	; 0xa7c <ctcGetTcnt+0x3e>
     a46:	30 f0       	brcs	.+12     	; 0xa54 <ctcGetTcnt+0x16>
     a48:	82 30       	cpi	r24, 0x02	; 2
     a4a:	81 f1       	breq	.+96     	; 0xaac <ctcGetTcnt+0x6e>
     a4c:	83 30       	cpi	r24, 0x03	; 3
     a4e:	09 f4       	brne	.+2      	; 0xa52 <ctcGetTcnt+0x14>
     a50:	41 c0       	rjmp	.+130    	; 0xad4 <ctcGetTcnt+0x96>
     a52:	58 c0       	rjmp	.+176    	; 0xb04 <ctcGetTcnt+0xc6>
	{
		case _DEF_TIM0:
		ret = *(p_ctc->h_tim8->Regs->TCNTn);
     a54:	85 e1       	ldi	r24, 0x15	; 21
     a56:	82 9f       	mul	r24, r18
     a58:	f0 01       	movw	r30, r0
     a5a:	83 9f       	mul	r24, r19
     a5c:	f0 0d       	add	r31, r0
     a5e:	11 24       	eor	r1, r1
     a60:	e6 50       	subi	r30, 0x06	; 6
     a62:	fd 4f       	sbci	r31, 0xFD	; 253
     a64:	05 84       	ldd	r0, Z+13	; 0x0d
     a66:	f6 85       	ldd	r31, Z+14	; 0x0e
     a68:	e0 2d       	mov	r30, r0
     a6a:	04 80       	ldd	r0, Z+4	; 0x04
     a6c:	f5 81       	ldd	r31, Z+5	; 0x05
     a6e:	e0 2d       	mov	r30, r0
     a70:	02 80       	ldd	r0, Z+2	; 0x02
     a72:	f3 81       	ldd	r31, Z+3	; 0x03
     a74:	e0 2d       	mov	r30, r0
     a76:	80 81       	ld	r24, Z
     a78:	90 e0       	ldi	r25, 0x00	; 0
		break;
     a7a:	08 95       	ret
		case _DEF_TIM1:
		ret = ((((*(p_ctc->h_tim16->Regs->TCNTnH)) << 8) & 0xFF00) | ((*(p_ctc->h_tim16->Regs->TCNTnL)) & 0xFF));
     a7c:	85 e1       	ldi	r24, 0x15	; 21
     a7e:	82 9f       	mul	r24, r18
     a80:	f0 01       	movw	r30, r0
     a82:	83 9f       	mul	r24, r19
     a84:	f0 0d       	add	r31, r0
     a86:	11 24       	eor	r1, r1
     a88:	e6 50       	subi	r30, 0x06	; 6
     a8a:	fd 4f       	sbci	r31, 0xFD	; 253
     a8c:	07 84       	ldd	r0, Z+15	; 0x0f
     a8e:	f0 89       	ldd	r31, Z+16	; 0x10
     a90:	e0 2d       	mov	r30, r0
     a92:	06 80       	ldd	r0, Z+6	; 0x06
     a94:	f7 81       	ldd	r31, Z+7	; 0x07
     a96:	e0 2d       	mov	r30, r0
     a98:	a0 85       	ldd	r26, Z+8	; 0x08
     a9a:	b1 85       	ldd	r27, Z+9	; 0x09
     a9c:	2c 91       	ld	r18, X
     a9e:	06 80       	ldd	r0, Z+6	; 0x06
     aa0:	f7 81       	ldd	r31, Z+7	; 0x07
     aa2:	e0 2d       	mov	r30, r0
     aa4:	80 81       	ld	r24, Z
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	92 2b       	or	r25, r18
		break;
     aaa:	08 95       	ret
		case _DEF_TIM2:
		ret = *(p_ctc->h_tim8->Regs->TCNTn);
     aac:	85 e1       	ldi	r24, 0x15	; 21
     aae:	82 9f       	mul	r24, r18
     ab0:	f0 01       	movw	r30, r0
     ab2:	83 9f       	mul	r24, r19
     ab4:	f0 0d       	add	r31, r0
     ab6:	11 24       	eor	r1, r1
     ab8:	e6 50       	subi	r30, 0x06	; 6
     aba:	fd 4f       	sbci	r31, 0xFD	; 253
     abc:	05 84       	ldd	r0, Z+13	; 0x0d
     abe:	f6 85       	ldd	r31, Z+14	; 0x0e
     ac0:	e0 2d       	mov	r30, r0
     ac2:	04 80       	ldd	r0, Z+4	; 0x04
     ac4:	f5 81       	ldd	r31, Z+5	; 0x05
     ac6:	e0 2d       	mov	r30, r0
     ac8:	02 80       	ldd	r0, Z+2	; 0x02
     aca:	f3 81       	ldd	r31, Z+3	; 0x03
     acc:	e0 2d       	mov	r30, r0
     ace:	80 81       	ld	r24, Z
     ad0:	90 e0       	ldi	r25, 0x00	; 0
		break;
     ad2:	08 95       	ret
		case _DEF_TIM3:
		ret = ((((*(p_ctc->h_tim16->Regs->TCNTnH)) << 8) & 0xFF00) | ((*(p_ctc->h_tim16->Regs->TCNTnL)) & 0xFF));
     ad4:	85 e1       	ldi	r24, 0x15	; 21
     ad6:	82 9f       	mul	r24, r18
     ad8:	f0 01       	movw	r30, r0
     ada:	83 9f       	mul	r24, r19
     adc:	f0 0d       	add	r31, r0
     ade:	11 24       	eor	r1, r1
     ae0:	e6 50       	subi	r30, 0x06	; 6
     ae2:	fd 4f       	sbci	r31, 0xFD	; 253
     ae4:	07 84       	ldd	r0, Z+15	; 0x0f
     ae6:	f0 89       	ldd	r31, Z+16	; 0x10
     ae8:	e0 2d       	mov	r30, r0
     aea:	06 80       	ldd	r0, Z+6	; 0x06
     aec:	f7 81       	ldd	r31, Z+7	; 0x07
     aee:	e0 2d       	mov	r30, r0
     af0:	a0 85       	ldd	r26, Z+8	; 0x08
     af2:	b1 85       	ldd	r27, Z+9	; 0x09
     af4:	2c 91       	ld	r18, X
     af6:	06 80       	ldd	r0, Z+6	; 0x06
     af8:	f7 81       	ldd	r31, Z+7	; 0x07
     afa:	e0 2d       	mov	r30, r0
     afc:	80 81       	ld	r24, Z
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	92 2b       	or	r25, r18
		break;
     b02:	08 95       	ret
	return ret;
}

uint16_t ctcGetTcnt(uint8_t ch_)
{
	uint16_t ret = 0;
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	90 e0       	ldi	r25, 0x00	; 0
		break;
		default:
		break;
	}
	return ret;
}
     b08:	08 95       	ret

00000b0a <ctcSetOcr>:

bool ctcSetOcr(uint8_t ch_, uint16_t ocr_, uint8_t channel_)
{
	bool ret = true;
	ctc_t *p_ctc = &ctc_tbl[ch_];
     b0a:	28 2f       	mov	r18, r24
     b0c:	30 e0       	ldi	r19, 0x00	; 0
	switch(ch_)
     b0e:	88 23       	and	r24, r24
     b10:	19 f0       	breq	.+6      	; 0xb18 <ctcSetOcr+0xe>
     b12:	82 30       	cpi	r24, 0x02	; 2
     b14:	a1 f0       	breq	.+40     	; 0xb3e <ctcSetOcr+0x34>
     b16:	25 c0       	rjmp	.+74     	; 0xb62 <ctcSetOcr+0x58>
	{
		case _DEF_TIM0:
		*(p_ctc->h_tim8->Regs->OCRn) = ocr_ & 0xFF;
     b18:	85 e1       	ldi	r24, 0x15	; 21
     b1a:	82 9f       	mul	r24, r18
     b1c:	f0 01       	movw	r30, r0
     b1e:	83 9f       	mul	r24, r19
     b20:	f0 0d       	add	r31, r0
     b22:	11 24       	eor	r1, r1
     b24:	e6 50       	subi	r30, 0x06	; 6
     b26:	fd 4f       	sbci	r31, 0xFD	; 253
     b28:	05 84       	ldd	r0, Z+13	; 0x0d
     b2a:	f6 85       	ldd	r31, Z+14	; 0x0e
     b2c:	e0 2d       	mov	r30, r0
     b2e:	04 80       	ldd	r0, Z+4	; 0x04
     b30:	f5 81       	ldd	r31, Z+5	; 0x05
     b32:	e0 2d       	mov	r30, r0
     b34:	04 80       	ldd	r0, Z+4	; 0x04
     b36:	f5 81       	ldd	r31, Z+5	; 0x05
     b38:	e0 2d       	mov	r30, r0
     b3a:	60 83       	st	Z, r22
		break;
     b3c:	12 c0       	rjmp	.+36     	; 0xb62 <ctcSetOcr+0x58>
		case _DEF_TIM2:
		*(p_ctc->h_tim8->Regs->OCRn) = ocr_ & 0xFF;
     b3e:	85 e1       	ldi	r24, 0x15	; 21
     b40:	82 9f       	mul	r24, r18
     b42:	f0 01       	movw	r30, r0
     b44:	83 9f       	mul	r24, r19
     b46:	f0 0d       	add	r31, r0
     b48:	11 24       	eor	r1, r1
     b4a:	e6 50       	subi	r30, 0x06	; 6
     b4c:	fd 4f       	sbci	r31, 0xFD	; 253
     b4e:	05 84       	ldd	r0, Z+13	; 0x0d
     b50:	f6 85       	ldd	r31, Z+14	; 0x0e
     b52:	e0 2d       	mov	r30, r0
     b54:	04 80       	ldd	r0, Z+4	; 0x04
     b56:	f5 81       	ldd	r31, Z+5	; 0x05
     b58:	e0 2d       	mov	r30, r0
     b5a:	04 80       	ldd	r0, Z+4	; 0x04
     b5c:	f5 81       	ldd	r31, Z+5	; 0x05
     b5e:	e0 2d       	mov	r30, r0
     b60:	60 83       	st	Z, r22
		break;
		default:
		break;
	}
	
	if (channel_ == _DEF_CH_A)
     b62:	41 30       	cpi	r20, 0x01	; 1
     b64:	f1 f4       	brne	.+60     	; 0xba2 <ctcSetOcr+0x98>
	{
		*(p_ctc->h_tim16->Regs->OCRnAH) = (ocr_ >> 8) & 0xFF;
     b66:	85 e1       	ldi	r24, 0x15	; 21
     b68:	82 9f       	mul	r24, r18
     b6a:	f0 01       	movw	r30, r0
     b6c:	83 9f       	mul	r24, r19
     b6e:	f0 0d       	add	r31, r0
     b70:	11 24       	eor	r1, r1
     b72:	e6 50       	subi	r30, 0x06	; 6
     b74:	fd 4f       	sbci	r31, 0xFD	; 253
     b76:	a7 85       	ldd	r26, Z+15	; 0x0f
     b78:	b0 89       	ldd	r27, Z+16	; 0x10
     b7a:	16 96       	adiw	r26, 0x06	; 6
     b7c:	0d 90       	ld	r0, X+
     b7e:	bc 91       	ld	r27, X
     b80:	a0 2d       	mov	r26, r0
     b82:	1c 96       	adiw	r26, 0x0c	; 12
     b84:	0d 90       	ld	r0, X+
     b86:	bc 91       	ld	r27, X
     b88:	a0 2d       	mov	r26, r0
     b8a:	7c 93       	st	X, r23
		*(p_ctc->h_tim16->Regs->OCRnAL) = (ocr_ & 0xFF);
     b8c:	07 84       	ldd	r0, Z+15	; 0x0f
     b8e:	f0 89       	ldd	r31, Z+16	; 0x10
     b90:	e0 2d       	mov	r30, r0
     b92:	06 80       	ldd	r0, Z+6	; 0x06
     b94:	f7 81       	ldd	r31, Z+7	; 0x07
     b96:	e0 2d       	mov	r30, r0
     b98:	02 84       	ldd	r0, Z+10	; 0x0a
     b9a:	f3 85       	ldd	r31, Z+11	; 0x0b
     b9c:	e0 2d       	mov	r30, r0
     b9e:	60 83       	st	Z, r22
     ba0:	1f c0       	rjmp	.+62     	; 0xbe0 <ctcSetOcr+0xd6>
	}
	else if (channel_ == _DEF_CH_B)
     ba2:	42 30       	cpi	r20, 0x02	; 2
     ba4:	e9 f4       	brne	.+58     	; 0xbe0 <ctcSetOcr+0xd6>
	{
		*(p_ctc->h_tim16->Regs->OCRnBH) = (ocr_ >> 8) & 0xFF;
     ba6:	85 e1       	ldi	r24, 0x15	; 21
     ba8:	82 9f       	mul	r24, r18
     baa:	f0 01       	movw	r30, r0
     bac:	83 9f       	mul	r24, r19
     bae:	f0 0d       	add	r31, r0
     bb0:	11 24       	eor	r1, r1
     bb2:	e6 50       	subi	r30, 0x06	; 6
     bb4:	fd 4f       	sbci	r31, 0xFD	; 253
     bb6:	a7 85       	ldd	r26, Z+15	; 0x0f
     bb8:	b0 89       	ldd	r27, Z+16	; 0x10
     bba:	16 96       	adiw	r26, 0x06	; 6
     bbc:	0d 90       	ld	r0, X+
     bbe:	bc 91       	ld	r27, X
     bc0:	a0 2d       	mov	r26, r0
     bc2:	50 96       	adiw	r26, 0x10	; 16
     bc4:	0d 90       	ld	r0, X+
     bc6:	bc 91       	ld	r27, X
     bc8:	a0 2d       	mov	r26, r0
     bca:	7c 93       	st	X, r23
		*(p_ctc->h_tim16->Regs->OCRnBL) = (ocr_ & 0xFF);
     bcc:	07 84       	ldd	r0, Z+15	; 0x0f
     bce:	f0 89       	ldd	r31, Z+16	; 0x10
     bd0:	e0 2d       	mov	r30, r0
     bd2:	06 80       	ldd	r0, Z+6	; 0x06
     bd4:	f7 81       	ldd	r31, Z+7	; 0x07
     bd6:	e0 2d       	mov	r30, r0
     bd8:	06 84       	ldd	r0, Z+14	; 0x0e
     bda:	f7 85       	ldd	r31, Z+15	; 0x0f
     bdc:	e0 2d       	mov	r30, r0
     bde:	60 83       	st	Z, r22
	}
	
	return ret;
}
     be0:	81 e0       	ldi	r24, 0x01	; 1
     be2:	08 95       	ret

00000be4 <motorBreak>:
	speed_[1] = motor.getSpeed(_DEF_A4988_1);
	power_[0] = (uint8_t)((speed_[0] / power_max) * 100);
	power_[1] = (uint8_t)((speed_[1] / power_max) * 100);
	return power_;
#endif
}
     be4:	cf 93       	push	r28
     be6:	df 93       	push	r29
     be8:	c3 ea       	ldi	r28, 0xA3	; 163
     bea:	d1 e0       	ldi	r29, 0x01	; 1
     bec:	ee 81       	ldd	r30, Y+6	; 0x06
     bee:	ff 81       	ldd	r31, Y+7	; 0x07
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	09 95       	icall
     bf4:	ee 81       	ldd	r30, Y+6	; 0x06
     bf6:	ff 81       	ldd	r31, Y+7	; 0x07
     bf8:	81 e0       	ldi	r24, 0x01	; 1
     bfa:	09 95       	icall
     bfc:	df 91       	pop	r29
     bfe:	cf 91       	pop	r28
     c00:	08 95       	ret

00000c02 <motorSetSpeed>:
     c02:	1f 93       	push	r17
     c04:	cf 93       	push	r28
     c06:	df 93       	push	r29
     c08:	85 36       	cpi	r24, 0x65	; 101
     c0a:	a0 f4       	brcc	.+40     	; 0xc34 <motorSetSpeed+0x32>
     c0c:	2f ef       	ldi	r18, 0xFF	; 255
     c0e:	82 9f       	mul	r24, r18
     c10:	c0 01       	movw	r24, r0
     c12:	11 24       	eor	r1, r1
     c14:	64 e6       	ldi	r22, 0x64	; 100
     c16:	70 e0       	ldi	r23, 0x00	; 0
     c18:	0e 94 6c 11 	call	0x22d8	; 0x22d8 <__divmodhi4>
     c1c:	16 2f       	mov	r17, r22
     c1e:	c3 ea       	ldi	r28, 0xA3	; 163
     c20:	d1 e0       	ldi	r29, 0x01	; 1
     c22:	e8 85       	ldd	r30, Y+8	; 0x08
     c24:	f9 85       	ldd	r31, Y+9	; 0x09
     c26:	80 e0       	ldi	r24, 0x00	; 0
     c28:	09 95       	icall
     c2a:	e8 85       	ldd	r30, Y+8	; 0x08
     c2c:	f9 85       	ldd	r31, Y+9	; 0x09
     c2e:	61 2f       	mov	r22, r17
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	09 95       	icall
     c34:	df 91       	pop	r29
     c36:	cf 91       	pop	r28
     c38:	1f 91       	pop	r17
     c3a:	08 95       	ret

00000c3c <motorSetMotionState>:

void motorSetMotionState(uint8_t motion_)
{
     c3c:	cf 93       	push	r28
     c3e:	df 93       	push	r29
	
#ifdef _USE_HW_A4988
	switch(motion_)
     c40:	81 30       	cpi	r24, 0x01	; 1
     c42:	99 f0       	breq	.+38     	; 0xc6a <motorSetMotionState+0x2e>
     c44:	28 f0       	brcs	.+10     	; 0xc50 <motorSetMotionState+0x14>
     c46:	82 30       	cpi	r24, 0x02	; 2
     c48:	e9 f0       	breq	.+58     	; 0xc84 <motorSetMotionState+0x48>
     c4a:	83 30       	cpi	r24, 0x03	; 3
     c4c:	41 f1       	breq	.+80     	; 0xc9e <motorSetMotionState+0x62>
     c4e:	33 c0       	rjmp	.+102    	; 0xcb6 <motorSetMotionState+0x7a>
	{
		case 0:
		motor.setDirection(_DEF_A4988_0, _DEF_CCW);
     c50:	c3 ea       	ldi	r28, 0xA3	; 163
     c52:	d1 e0       	ldi	r29, 0x01	; 1
     c54:	ec 85       	ldd	r30, Y+12	; 0x0c
     c56:	fd 85       	ldd	r31, Y+13	; 0x0d
     c58:	61 e0       	ldi	r22, 0x01	; 1
     c5a:	80 e0       	ldi	r24, 0x00	; 0
     c5c:	09 95       	icall
		motor.setDirection(_DEF_A4988_1, _DEF_CW);
     c5e:	ec 85       	ldd	r30, Y+12	; 0x0c
     c60:	fd 85       	ldd	r31, Y+13	; 0x0d
     c62:	60 e0       	ldi	r22, 0x00	; 0
     c64:	81 e0       	ldi	r24, 0x01	; 1
     c66:	09 95       	icall
		break;
     c68:	26 c0       	rjmp	.+76     	; 0xcb6 <motorSetMotionState+0x7a>
		case 1:
		motor.setDirection(_DEF_A4988_0, _DEF_CW);
     c6a:	c3 ea       	ldi	r28, 0xA3	; 163
     c6c:	d1 e0       	ldi	r29, 0x01	; 1
     c6e:	ec 85       	ldd	r30, Y+12	; 0x0c
     c70:	fd 85       	ldd	r31, Y+13	; 0x0d
     c72:	60 e0       	ldi	r22, 0x00	; 0
     c74:	80 e0       	ldi	r24, 0x00	; 0
     c76:	09 95       	icall
		motor.setDirection(_DEF_A4988_1, _DEF_CW);
     c78:	ec 85       	ldd	r30, Y+12	; 0x0c
     c7a:	fd 85       	ldd	r31, Y+13	; 0x0d
     c7c:	60 e0       	ldi	r22, 0x00	; 0
     c7e:	81 e0       	ldi	r24, 0x01	; 1
     c80:	09 95       	icall
		break;
     c82:	19 c0       	rjmp	.+50     	; 0xcb6 <motorSetMotionState+0x7a>
		case 2:
		motor.setDirection(_DEF_A4988_0, _DEF_CW);
     c84:	c3 ea       	ldi	r28, 0xA3	; 163
     c86:	d1 e0       	ldi	r29, 0x01	; 1
     c88:	ec 85       	ldd	r30, Y+12	; 0x0c
     c8a:	fd 85       	ldd	r31, Y+13	; 0x0d
     c8c:	60 e0       	ldi	r22, 0x00	; 0
     c8e:	80 e0       	ldi	r24, 0x00	; 0
     c90:	09 95       	icall
		motor.setDirection(_DEF_A4988_1, _DEF_CCW);
     c92:	ec 85       	ldd	r30, Y+12	; 0x0c
     c94:	fd 85       	ldd	r31, Y+13	; 0x0d
     c96:	61 e0       	ldi	r22, 0x01	; 1
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	09 95       	icall
		break;
     c9c:	0c c0       	rjmp	.+24     	; 0xcb6 <motorSetMotionState+0x7a>
		case 3:
		motor.setDirection(_DEF_A4988_0, _DEF_CCW);
     c9e:	c3 ea       	ldi	r28, 0xA3	; 163
     ca0:	d1 e0       	ldi	r29, 0x01	; 1
     ca2:	ec 85       	ldd	r30, Y+12	; 0x0c
     ca4:	fd 85       	ldd	r31, Y+13	; 0x0d
     ca6:	61 e0       	ldi	r22, 0x01	; 1
     ca8:	80 e0       	ldi	r24, 0x00	; 0
     caa:	09 95       	icall
		motor.setDirection(_DEF_A4988_1, _DEF_CCW);
     cac:	ec 85       	ldd	r30, Y+12	; 0x0c
     cae:	fd 85       	ldd	r31, Y+13	; 0x0d
     cb0:	61 e0       	ldi	r22, 0x01	; 1
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	09 95       	icall
		break;
		default:
		break;
	}
#endif
}
     cb6:	df 91       	pop	r29
     cb8:	cf 91       	pop	r28
     cba:	08 95       	ret

00000cbc <motorInit>:
void motorBreak(void);
void motorSetSpeed(uint8_t speed_);
void motorSetMotionState(uint8_t motion_);

bool motorInit(void)
{
     cbc:	cf 93       	push	r28
     cbe:	df 93       	push	r29
#ifdef _USE_HW_A4988
	if(a4988Init(_DEF_A4988_0) && a4988Init(_DEF_A4988_1))
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	5b d0       	rcall	.+182    	; 0xd7a <a4988Init>
     cc4:	88 23       	and	r24, r24
     cc6:	49 f0       	breq	.+18     	; 0xcda <motorInit+0x1e>
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	57 d0       	rcall	.+174    	; 0xd7a <a4988Init>
     ccc:	88 23       	and	r24, r24
     cce:	29 f0       	breq	.+10     	; 0xcda <motorInit+0x1e>
	{
		is_init = a4988DriverInit(&motor);
     cd0:	83 ea       	ldi	r24, 0xA3	; 163
     cd2:	91 e0       	ldi	r25, 0x01	; 1
     cd4:	22 d1       	rcall	.+580    	; 0xf1a <a4988DriverInit>
     cd6:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <__data_end>
	}
#endif

	motor.setCallBack(_DEF_A4988_0, NULL);
     cda:	c3 ea       	ldi	r28, 0xA3	; 163
     cdc:	d1 e0       	ldi	r29, 0x01	; 1
     cde:	e8 89       	ldd	r30, Y+16	; 0x10
     ce0:	f9 89       	ldd	r31, Y+17	; 0x11
     ce2:	60 e0       	ldi	r22, 0x00	; 0
     ce4:	70 e0       	ldi	r23, 0x00	; 0
     ce6:	80 e0       	ldi	r24, 0x00	; 0
     ce8:	09 95       	icall
	motor.setCallBack(_DEF_A4988_1, NULL);
     cea:	e8 89       	ldd	r30, Y+16	; 0x10
     cec:	f9 89       	ldd	r31, Y+17	; 0x11
     cee:	60 e0       	ldi	r22, 0x00	; 0
     cf0:	70 e0       	ldi	r23, 0x00	; 0
     cf2:	81 e0       	ldi	r24, 0x01	; 1
	motorSetMotionState(0);
     cf4:	09 95       	icall
	motorSetSpeed(0);
     cf6:	80 e0       	ldi	r24, 0x00	; 0
     cf8:	a1 df       	rcall	.-190    	; 0xc3c <motorSetMotionState>
     cfa:	80 e0       	ldi	r24, 0x00	; 0
	motorBreak();
     cfc:	82 df       	rcall	.-252    	; 0xc02 <motorSetSpeed>
     cfe:	72 df       	rcall	.-284    	; 0xbe4 <motorBreak>
	
	return true;
}
     d00:	81 e0       	ldi	r24, 0x01	; 1
     d02:	df 91       	pop	r29
     d04:	cf 91       	pop	r28
     d06:	08 95       	ret

00000d08 <a4988GetDirection>:

bool a4988GetDirection(uint8_t ch_)
{
	bool ret;
	
	a4988_t *p_a4988 = &a4988_tbl[ch_];
     d08:	90 e0       	ldi	r25, 0x00	; 0
		break;
		default:
		break;
	}
	*/
	if (p_a4988->h_a4988->direction)
     d0a:	fc 01       	movw	r30, r24
     d0c:	ee 0f       	add	r30, r30
     d0e:	ff 1f       	adc	r31, r31
     d10:	ee 0f       	add	r30, r30
     d12:	ff 1f       	adc	r31, r31
     d14:	e8 0f       	add	r30, r24
     d16:	f9 1f       	adc	r31, r25
     d18:	e1 59       	subi	r30, 0x91	; 145
     d1a:	fc 4f       	sbci	r31, 0xFC	; 252
     d1c:	03 80       	ldd	r0, Z+3	; 0x03
     d1e:	f4 81       	ldd	r31, Z+4	; 0x04
     d20:	e0 2d       	mov	r30, r0
     d22:	24 81       	ldd	r18, Z+4	; 0x04
     d24:	22 23       	and	r18, r18
     d26:	61 f0       	breq	.+24     	; 0xd40 <a4988GetDirection+0x38>
	{
		ret = p_a4988->normal_rotate;
     d28:	fc 01       	movw	r30, r24
     d2a:	ee 0f       	add	r30, r30
     d2c:	ff 1f       	adc	r31, r31
     d2e:	ee 0f       	add	r30, r30
     d30:	ff 1f       	adc	r31, r31
     d32:	8e 0f       	add	r24, r30
     d34:	9f 1f       	adc	r25, r31
     d36:	fc 01       	movw	r30, r24
     d38:	e1 59       	subi	r30, 0x91	; 145
     d3a:	fc 4f       	sbci	r31, 0xFC	; 252
     d3c:	81 81       	ldd	r24, Z+1	; 0x01
     d3e:	08 95       	ret
	}
	else
	{
		ret = p_a4988->reverse_rotate;
     d40:	fc 01       	movw	r30, r24
     d42:	ee 0f       	add	r30, r30
     d44:	ff 1f       	adc	r31, r31
     d46:	ee 0f       	add	r30, r30
     d48:	ff 1f       	adc	r31, r31
     d4a:	8e 0f       	add	r24, r30
     d4c:	9f 1f       	adc	r25, r31
     d4e:	fc 01       	movw	r30, r24
     d50:	e1 59       	subi	r30, 0x91	; 145
     d52:	fc 4f       	sbci	r31, 0xFC	; 252
     d54:	82 81       	ldd	r24, Z+2	; 0x02
	}
	return ret;
}
     d56:	08 95       	ret

00000d58 <a4988GetSpeed>:
uint8_t a4988GetSpeed(uint8_t ch_)
{
	uint8_t ret = 0;
	
	a4988_t *p_a4988 = &a4988_tbl[ch_];
	ret = p_a4988->h_a4988->speed;
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	fc 01       	movw	r30, r24
     d5c:	ee 0f       	add	r30, r30
     d5e:	ff 1f       	adc	r31, r31
     d60:	ee 0f       	add	r30, r30
     d62:	ff 1f       	adc	r31, r31
     d64:	8e 0f       	add	r24, r30
     d66:	9f 1f       	adc	r25, r31
     d68:	fc 01       	movw	r30, r24
     d6a:	e1 59       	subi	r30, 0x91	; 145
     d6c:	fc 4f       	sbci	r31, 0xFC	; 252
     d6e:	03 80       	ldd	r0, Z+3	; 0x03
     d70:	f4 81       	ldd	r31, Z+4	; 0x04
     d72:	e0 2d       	mov	r30, r0
	return ret;
}
     d74:	85 81       	ldd	r24, Z+5	; 0x05
     d76:	08 95       	ret

00000d78 <a4988SetCallBack>:

void a4988SetCallBack(uint8_t ch_, void (*p_func)(void))
{
     d78:	08 95       	ret

00000d7a <a4988Init>:

bool a4988Enable(void);
bool a4988Disable(void);

bool a4988Init(uint8_t ch_)
{
     d7a:	cf 93       	push	r28
     d7c:	df 93       	push	r29
	bool ret = false;
	
	
	a4988_t *p_a4988 = &a4988_tbl[ch_];
     d7e:	c8 2f       	mov	r28, r24
     d80:	d0 e0       	ldi	r29, 0x00	; 0

	switch(ch_)
     d82:	88 23       	and	r24, r24
     d84:	19 f0       	breq	.+6      	; 0xd8c <a4988Init+0x12>
     d86:	81 30       	cpi	r24, 0x01	; 1
     d88:	e9 f0       	breq	.+58     	; 0xdc4 <a4988Init+0x4a>
     d8a:	38 c0       	rjmp	.+112    	; 0xdfc <a4988Init+0x82>
	{
		case _DEF_A4988_0:
		p_a4988->h_a4988				= &h_a4988_1;
     d8c:	de 01       	movw	r26, r28
     d8e:	aa 0f       	add	r26, r26
     d90:	bb 1f       	adc	r27, r27
     d92:	aa 0f       	add	r26, r26
     d94:	bb 1f       	adc	r27, r27
     d96:	ac 0f       	add	r26, r28
     d98:	bd 1f       	adc	r27, r29
     d9a:	a1 59       	subi	r26, 0x91	; 145
     d9c:	bc 4f       	sbci	r27, 0xFC	; 252
     d9e:	e3 e6       	ldi	r30, 0x63	; 99
     da0:	f3 e0       	ldi	r31, 0x03	; 3
     da2:	14 96       	adiw	r26, 0x04	; 4
     da4:	fc 93       	st	X, r31
     da6:	ee 93       	st	-X, r30
     da8:	13 97       	sbiw	r26, 0x03	; 3
		
		p_a4988->normal_rotate			= _DEF_CW;
     daa:	11 96       	adiw	r26, 0x01	; 1
     dac:	1c 92       	st	X, r1
     dae:	11 97       	sbiw	r26, 0x01	; 1
		p_a4988->reverse_rotate			= _DEF_CCW;
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	12 96       	adiw	r26, 0x02	; 2
     db4:	8c 93       	st	X, r24
		p_a4988->h_a4988->Init.ch		= _DEF_A4988_0;
     db6:	10 82       	st	Z, r1
		p_a4988->h_a4988->Init.timer	= TIM0;
     db8:	11 82       	std	Z+1, r1	; 0x01
		p_a4988->h_a4988->Init.phase	= A4988_FULL_STEP;
     dba:	12 82       	std	Z+2, r1	; 0x02
		p_a4988->h_a4988->enable		= false;
     dbc:	13 82       	std	Z+3, r1	; 0x03
		p_a4988->h_a4988->direction		= _NORMAL_ROTATION;
     dbe:	84 83       	std	Z+4, r24	; 0x04
		p_a4988->h_a4988->speed			= 0;
     dc0:	15 82       	std	Z+5, r1	; 0x05
		
		break;
     dc2:	1c c0       	rjmp	.+56     	; 0xdfc <a4988Init+0x82>
		case _DEF_A4988_1:
		p_a4988->h_a4988				= &h_a4988_2;
     dc4:	de 01       	movw	r26, r28
     dc6:	aa 0f       	add	r26, r26
     dc8:	bb 1f       	adc	r27, r27
     dca:	aa 0f       	add	r26, r26
     dcc:	bb 1f       	adc	r27, r27
     dce:	ac 0f       	add	r26, r28
     dd0:	bd 1f       	adc	r27, r29
     dd2:	a1 59       	subi	r26, 0x91	; 145
     dd4:	bc 4f       	sbci	r27, 0xFC	; 252
     dd6:	e9 e6       	ldi	r30, 0x69	; 105
     dd8:	f3 e0       	ldi	r31, 0x03	; 3
     dda:	14 96       	adiw	r26, 0x04	; 4
     ddc:	fc 93       	st	X, r31
     dde:	ee 93       	st	-X, r30
     de0:	13 97       	sbiw	r26, 0x03	; 3
		
		p_a4988->normal_rotate			= _DEF_CW;
     de2:	11 96       	adiw	r26, 0x01	; 1
     de4:	1c 92       	st	X, r1
     de6:	11 97       	sbiw	r26, 0x01	; 1
		p_a4988->reverse_rotate			= _DEF_CCW;
     de8:	81 e0       	ldi	r24, 0x01	; 1
     dea:	12 96       	adiw	r26, 0x02	; 2
     dec:	8c 93       	st	X, r24
		p_a4988->h_a4988->Init.ch		= _DEF_A4988_1;
     dee:	80 83       	st	Z, r24
		p_a4988->h_a4988->Init.timer	= TIM2;
     df0:	92 e0       	ldi	r25, 0x02	; 2
     df2:	91 83       	std	Z+1, r25	; 0x01
		p_a4988->h_a4988->Init.phase	= A4988_FULL_STEP;
     df4:	12 82       	std	Z+2, r1	; 0x02
		p_a4988->h_a4988->enable		= false;
     df6:	13 82       	std	Z+3, r1	; 0x03
		p_a4988->h_a4988->direction		= _NORMAL_ROTATION;
     df8:	84 83       	std	Z+4, r24	; 0x04
		p_a4988->h_a4988->speed			= 0;
     dfa:	15 82       	std	Z+5, r1	; 0x05
		default:
		break;
	}
	
	
	if (ctcBegin(p_a4988->h_a4988->Init.timer) != true)
     dfc:	fe 01       	movw	r30, r28
     dfe:	ee 0f       	add	r30, r30
     e00:	ff 1f       	adc	r31, r31
     e02:	ee 0f       	add	r30, r30
     e04:	ff 1f       	adc	r31, r31
     e06:	ec 0f       	add	r30, r28
     e08:	fd 1f       	adc	r31, r29
     e0a:	e1 59       	subi	r30, 0x91	; 145
     e0c:	fc 4f       	sbci	r31, 0xFC	; 252
     e0e:	03 80       	ldd	r0, Z+3	; 0x03
     e10:	f4 81       	ldd	r31, Z+4	; 0x04
     e12:	e0 2d       	mov	r30, r0
     e14:	81 81       	ldd	r24, Z+1	; 0x01
     e16:	0c dc       	rcall	.-2024   	; 0x630 <ctcBegin>
     e18:	88 23       	and	r24, r24
     e1a:	61 f0       	breq	.+24     	; 0xe34 <a4988Init+0xba>
	{
		ret = false;
	}
	else
	{
		p_a4988->is_open = true;
     e1c:	ce 01       	movw	r24, r28
     e1e:	88 0f       	add	r24, r24
     e20:	99 1f       	adc	r25, r25
     e22:	88 0f       	add	r24, r24
     e24:	99 1f       	adc	r25, r25
     e26:	c8 0f       	add	r28, r24
     e28:	d9 1f       	adc	r29, r25
     e2a:	c1 59       	subi	r28, 0x91	; 145
     e2c:	dc 4f       	sbci	r29, 0xFC	; 252
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	88 83       	st	Y, r24
     e32:	01 c0       	rjmp	.+2      	; 0xe36 <a4988Init+0xbc>
	}
	
	
	if (ctcBegin(p_a4988->h_a4988->Init.timer) != true)
	{
		ret = false;
     e34:	80 e0       	ldi	r24, 0x00	; 0
		p_a4988->is_open = true;
		ret = true;
	}
	
	return ret;
}
     e36:	df 91       	pop	r29
     e38:	cf 91       	pop	r28
     e3a:	08 95       	ret

00000e3c <a4988SetDirection>:
}

bool a4988SetDirection(uint8_t ch_, bool dir_)
{
	bool ret = true;
	a4988_t *p_a4988 = &a4988_tbl[ch_];
     e3c:	28 2f       	mov	r18, r24
     e3e:	30 e0       	ldi	r19, 0x00	; 0
	uint8_t side = 0;
	p_a4988->h_a4988->direction = dir_;
     e40:	f9 01       	movw	r30, r18
     e42:	ee 0f       	add	r30, r30
     e44:	ff 1f       	adc	r31, r31
     e46:	ee 0f       	add	r30, r30
     e48:	ff 1f       	adc	r31, r31
     e4a:	e2 0f       	add	r30, r18
     e4c:	f3 1f       	adc	r31, r19
     e4e:	e1 59       	subi	r30, 0x91	; 145
     e50:	fc 4f       	sbci	r31, 0xFC	; 252
     e52:	03 80       	ldd	r0, Z+3	; 0x03
     e54:	f4 81       	ldd	r31, Z+4	; 0x04
     e56:	e0 2d       	mov	r30, r0
     e58:	64 83       	std	Z+4, r22	; 0x04
	
	switch(ch_)
     e5a:	88 23       	and	r24, r24
     e5c:	19 f0       	breq	.+6      	; 0xe64 <a4988SetDirection+0x28>
     e5e:	81 30       	cpi	r24, 0x01	; 1
     e60:	19 f0       	breq	.+6      	; 0xe68 <a4988SetDirection+0x2c>
     e62:	04 c0       	rjmp	.+8      	; 0xe6c <a4988SetDirection+0x30>
	{
		case _DEF_A4988_0:
		side = _PIN_GPIO_A4988_LDIR;
     e64:	81 e0       	ldi	r24, 0x01	; 1
     e66:	03 c0       	rjmp	.+6      	; 0xe6e <a4988SetDirection+0x32>
		break;
		case _DEF_A4988_1:
		side = _PIN_GPIO_A4988_RDIR;
     e68:	82 e0       	ldi	r24, 0x02	; 2
		break;
     e6a:	01 c0       	rjmp	.+2      	; 0xe6e <a4988SetDirection+0x32>

bool a4988SetDirection(uint8_t ch_, bool dir_)
{
	bool ret = true;
	a4988_t *p_a4988 = &a4988_tbl[ch_];
	uint8_t side = 0;
     e6c:	80 e0       	ldi	r24, 0x00	; 0
		break;
		default:
		break;
	}
	
	if (p_a4988->h_a4988->direction)
     e6e:	f9 01       	movw	r30, r18
     e70:	ee 0f       	add	r30, r30
     e72:	ff 1f       	adc	r31, r31
     e74:	ee 0f       	add	r30, r30
     e76:	ff 1f       	adc	r31, r31
     e78:	e2 0f       	add	r30, r18
     e7a:	f3 1f       	adc	r31, r19
     e7c:	e1 59       	subi	r30, 0x91	; 145
     e7e:	fc 4f       	sbci	r31, 0xFC	; 252
     e80:	03 80       	ldd	r0, Z+3	; 0x03
     e82:	f4 81       	ldd	r31, Z+4	; 0x04
     e84:	e0 2d       	mov	r30, r0
     e86:	94 81       	ldd	r25, Z+4	; 0x04
     e88:	99 23       	and	r25, r25
     e8a:	69 f0       	breq	.+26     	; 0xea6 <a4988SetDirection+0x6a>
	{
		gpioPinWrite(side, p_a4988->normal_rotate);
     e8c:	f9 01       	movw	r30, r18
     e8e:	ee 0f       	add	r30, r30
     e90:	ff 1f       	adc	r31, r31
     e92:	ee 0f       	add	r30, r30
     e94:	ff 1f       	adc	r31, r31
     e96:	2e 0f       	add	r18, r30
     e98:	3f 1f       	adc	r19, r31
     e9a:	f9 01       	movw	r30, r18
     e9c:	e1 59       	subi	r30, 0x91	; 145
     e9e:	fc 4f       	sbci	r31, 0xFC	; 252
     ea0:	61 81       	ldd	r22, Z+1	; 0x01
     ea2:	db d0       	rcall	.+438    	; 0x105a <gpioPinWrite>
     ea4:	0c c0       	rjmp	.+24     	; 0xebe <a4988SetDirection+0x82>
	}
	else
	{
		gpioPinWrite(side, p_a4988->reverse_rotate);
     ea6:	f9 01       	movw	r30, r18
     ea8:	ee 0f       	add	r30, r30
     eaa:	ff 1f       	adc	r31, r31
     eac:	ee 0f       	add	r30, r30
     eae:	ff 1f       	adc	r31, r31
     eb0:	2e 0f       	add	r18, r30
     eb2:	3f 1f       	adc	r19, r31
     eb4:	f9 01       	movw	r30, r18
     eb6:	e1 59       	subi	r30, 0x91	; 145
     eb8:	fc 4f       	sbci	r31, 0xFC	; 252
     eba:	62 81       	ldd	r22, Z+2	; 0x02
     ebc:	ce d0       	rcall	.+412    	; 0x105a <gpioPinWrite>
	}
	return ret;
}
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	08 95       	ret

00000ec2 <a4988SetSpeed>:
	}
	return ret;
}

bool a4988SetSpeed(uint8_t ch_, uint8_t speed_)
{
     ec2:	cf 93       	push	r28
     ec4:	df 93       	push	r29
	bool ret = false;

	a4988_t *p_a4988 = &a4988_tbl[ch_];
     ec6:	90 e0       	ldi	r25, 0x00	; 0
	p_a4988->h_a4988->speed = speed_;
     ec8:	ec 01       	movw	r28, r24
     eca:	cc 0f       	add	r28, r28
     ecc:	dd 1f       	adc	r29, r29
     ece:	cc 0f       	add	r28, r28
     ed0:	dd 1f       	adc	r29, r29
     ed2:	8c 0f       	add	r24, r28
     ed4:	9d 1f       	adc	r25, r29
     ed6:	ec 01       	movw	r28, r24
     ed8:	c1 59       	subi	r28, 0x91	; 145
     eda:	dc 4f       	sbci	r29, 0xFC	; 252
     edc:	eb 81       	ldd	r30, Y+3	; 0x03
     ede:	fc 81       	ldd	r31, Y+4	; 0x04
     ee0:	65 83       	std	Z+5, r22	; 0x05
	
	ctcSetTcnt(p_a4988->h_a4988->Init.timer, 0);
     ee2:	eb 81       	ldd	r30, Y+3	; 0x03
     ee4:	fc 81       	ldd	r31, Y+4	; 0x04
     ee6:	60 e0       	ldi	r22, 0x00	; 0
     ee8:	70 e0       	ldi	r23, 0x00	; 0
     eea:	81 81       	ldd	r24, Z+1	; 0x01
     eec:	3a dd       	rcall	.-1420   	; 0x962 <ctcSetTcnt>
	if (p_a4988->h_a4988->Init.timer == TIM0 || p_a4988->h_a4988->Init.timer == TIM2)
     eee:	eb 81       	ldd	r30, Y+3	; 0x03
     ef0:	fc 81       	ldd	r31, Y+4	; 0x04
     ef2:	81 81       	ldd	r24, Z+1	; 0x01
     ef4:	98 2f       	mov	r25, r24
     ef6:	9d 7f       	andi	r25, 0xFD	; 253
     ef8:	29 f4       	brne	.+10     	; 0xf04 <a4988SetSpeed+0x42>
	{
		ret = ctcSetOcr(p_a4988->h_a4988->Init.timer, p_a4988->h_a4988->speed, _DEF_CH_NONE);	
     efa:	65 81       	ldd	r22, Z+5	; 0x05
     efc:	70 e0       	ldi	r23, 0x00	; 0
     efe:	40 e0       	ldi	r20, 0x00	; 0
     f00:	04 de       	rcall	.-1016   	; 0xb0a <ctcSetOcr>
     f02:	08 c0       	rjmp	.+16     	; 0xf14 <a4988SetSpeed+0x52>
	}
	else if (p_a4988->h_a4988->Init.timer == TIM1 || p_a4988->h_a4988->Init.timer == TIM3)
     f04:	91 30       	cpi	r25, 0x01	; 1
     f06:	29 f4       	brne	.+10     	; 0xf12 <a4988SetSpeed+0x50>
	{
		ret = ctcSetOcr(p_a4988->h_a4988->Init.timer, p_a4988->h_a4988->speed, _DEF_CH_A);	
     f08:	65 81       	ldd	r22, Z+5	; 0x05
     f0a:	70 e0       	ldi	r23, 0x00	; 0
     f0c:	41 e0       	ldi	r20, 0x01	; 1
     f0e:	fd dd       	rcall	.-1030   	; 0xb0a <ctcSetOcr>
     f10:	01 c0       	rjmp	.+2      	; 0xf14 <a4988SetSpeed+0x52>
	return ret;
}

bool a4988SetSpeed(uint8_t ch_, uint8_t speed_)
{
	bool ret = false;
     f12:	80 e0       	ldi	r24, 0x00	; 0
	else if (p_a4988->h_a4988->Init.timer == TIM1 || p_a4988->h_a4988->Init.timer == TIM3)
	{
		ret = ctcSetOcr(p_a4988->h_a4988->Init.timer, p_a4988->h_a4988->speed, _DEF_CH_A);	
	}
	return ret;
}
     f14:	df 91       	pop	r29
     f16:	cf 91       	pop	r28
     f18:	08 95       	ret

00000f1a <a4988DriverInit>:
	return ret;
}


bool a4988DriverInit(drivemotor_driver_t *p_driver)
{
     f1a:	fc 01       	movw	r30, r24
	p_driver->init			= a4988Init;
     f1c:	8d eb       	ldi	r24, 0xBD	; 189
     f1e:	96 e0       	ldi	r25, 0x06	; 6
     f20:	91 83       	std	Z+1, r25	; 0x01
     f22:	80 83       	st	Z, r24
	p_driver->startMotor	= a4988Start;
     f24:	89 eb       	ldi	r24, 0xB9	; 185
     f26:	97 e0       	ldi	r25, 0x07	; 7
     f28:	93 83       	std	Z+3, r25	; 0x03
     f2a:	82 83       	std	Z+2, r24	; 0x02
	p_driver->stopMotor		= a4988Stop;
     f2c:	84 ed       	ldi	r24, 0xD4	; 212
     f2e:	97 e0       	ldi	r25, 0x07	; 7
     f30:	95 83       	std	Z+5, r25	; 0x05
     f32:	84 83       	std	Z+4, r24	; 0x04
	p_driver->breakMotor	= a4988Hold;
     f34:	80 ef       	ldi	r24, 0xF0	; 240
     f36:	97 e0       	ldi	r25, 0x07	; 7
     f38:	97 83       	std	Z+7, r25	; 0x07
     f3a:	86 83       	std	Z+6, r24	; 0x06
	p_driver->setSpeed		= a4988SetSpeed;
     f3c:	81 e6       	ldi	r24, 0x61	; 97
     f3e:	97 e0       	ldi	r25, 0x07	; 7
     f40:	91 87       	std	Z+9, r25	; 0x09
     f42:	80 87       	std	Z+8, r24	; 0x08
	p_driver->getSpeed		= a4988GetSpeed;
     f44:	8c ea       	ldi	r24, 0xAC	; 172
     f46:	96 e0       	ldi	r25, 0x06	; 6
     f48:	93 87       	std	Z+11, r25	; 0x0b
     f4a:	82 87       	std	Z+10, r24	; 0x0a
	p_driver->setDirection	= a4988SetDirection;
     f4c:	8e e1       	ldi	r24, 0x1E	; 30
     f4e:	97 e0       	ldi	r25, 0x07	; 7
     f50:	95 87       	std	Z+13, r25	; 0x0d
     f52:	84 87       	std	Z+12, r24	; 0x0c
	p_driver->getDirection	= a4988GetDirection;
     f54:	84 e8       	ldi	r24, 0x84	; 132
     f56:	96 e0       	ldi	r25, 0x06	; 6
     f58:	97 87       	std	Z+15, r25	; 0x0f
     f5a:	86 87       	std	Z+14, r24	; 0x0e
	p_driver->setCallBack	= a4988SetCallBack;
     f5c:	8c eb       	ldi	r24, 0xBC	; 188
     f5e:	96 e0       	ldi	r25, 0x06	; 6
     f60:	91 8b       	std	Z+17, r25	; 0x11
     f62:	80 8b       	std	Z+16, r24	; 0x10
	return true;
}
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	08 95       	ret

00000f68 <a4988Enable>:
}

bool a4988Enable(void)
{
	bool ret = true;
	gpioPinWrite(_PIN_GPIO_A4988_EN, true);
     f68:	61 e0       	ldi	r22, 0x01	; 1
     f6a:	80 e0       	ldi	r24, 0x00	; 0
     f6c:	76 d0       	rcall	.+236    	; 0x105a <gpioPinWrite>
	return ret;
}
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	08 95       	ret

00000f72 <a4988Start>:
	p_driver->setCallBack	= a4988SetCallBack;
	return true;
}

bool a4988Start(uint8_t ch_)
{
     f72:	cf 93       	push	r28
	bool ret = false;
	a4988_t *p_a4988 = &a4988_tbl[ch_];
	
	if (ctcStart(p_a4988->h_a4988->Init.timer) != true)
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	fc 01       	movw	r30, r24
     f78:	ee 0f       	add	r30, r30
     f7a:	ff 1f       	adc	r31, r31
     f7c:	ee 0f       	add	r30, r30
     f7e:	ff 1f       	adc	r31, r31
     f80:	8e 0f       	add	r24, r30
     f82:	9f 1f       	adc	r25, r31
     f84:	fc 01       	movw	r30, r24
     f86:	e1 59       	subi	r30, 0x91	; 145
     f88:	fc 4f       	sbci	r31, 0xFC	; 252
     f8a:	03 80       	ldd	r0, Z+3	; 0x03
     f8c:	f4 81       	ldd	r31, Z+4	; 0x04
     f8e:	e0 2d       	mov	r30, r0
     f90:	81 81       	ldd	r24, Z+1	; 0x01
     f92:	4b dc       	rcall	.-1898   	; 0x82a <ctcStart>
     f94:	c8 2f       	mov	r28, r24
	}
	else
	{
		ret = true;
	}
	a4988Enable();
     f96:	e8 df       	rcall	.-48     	; 0xf68 <a4988Enable>
     f98:	8c 2f       	mov	r24, r28
	
	return ret;
}
     f9a:	cf 91       	pop	r28
     f9c:	08 95       	ret

00000f9e <a4988Disable>:
     f9e:	60 e0       	ldi	r22, 0x00	; 0
}

bool a4988Disable()
{
	bool ret = true;
	gpioPinWrite(_PIN_GPIO_A4988_EN, false);
     fa0:	80 e0       	ldi	r24, 0x00	; 0
     fa2:	5b d0       	rcall	.+182    	; 0x105a <gpioPinWrite>
	return ret;
}
     fa4:	81 e0       	ldi	r24, 0x01	; 1
     fa6:	08 95       	ret

00000fa8 <a4988Stop>:
	return ret;
}


bool a4988Stop(uint8_t ch_)
{
     fa8:	cf 93       	push	r28
	bool ret = false;
	a4988_t *p_a4988 = &a4988_tbl[ch_];
	
	if (ctcStop(p_a4988->h_a4988->Init.timer) != true)
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	fc 01       	movw	r30, r24
     fae:	ee 0f       	add	r30, r30
     fb0:	ff 1f       	adc	r31, r31
     fb2:	ee 0f       	add	r30, r30
     fb4:	ff 1f       	adc	r31, r31
     fb6:	8e 0f       	add	r24, r30
     fb8:	9f 1f       	adc	r25, r31
     fba:	fc 01       	movw	r30, r24
     fbc:	e1 59       	subi	r30, 0x91	; 145
     fbe:	fc 4f       	sbci	r31, 0xFC	; 252
     fc0:	03 80       	ldd	r0, Z+3	; 0x03
     fc2:	f4 81       	ldd	r31, Z+4	; 0x04
     fc4:	e0 2d       	mov	r30, r0
     fc6:	81 81       	ldd	r24, Z+1	; 0x01
     fc8:	7f dc       	rcall	.-1794   	; 0x8c8 <ctcStop>
     fca:	c8 2f       	mov	r28, r24
     fcc:	8f ed       	ldi	r24, 0xDF	; 223
     fce:	9e e2       	ldi	r25, 0x2E	; 46
     fd0:	01 97       	sbiw	r24, 0x01	; 1
     fd2:	f1 f7       	brne	.-4      	; 0xfd0 <a4988Stop+0x28>
     fd4:	00 c0       	rjmp	.+0      	; 0xfd6 <a4988Stop+0x2e>
	else
	{
		ret = true;
	}
	_delay_ms(3);
	a4988Disable();
     fd6:	00 00       	nop
     fd8:	e2 df       	rcall	.-60     	; 0xf9e <a4988Disable>
	return ret;
}
     fda:	8c 2f       	mov	r24, r28
     fdc:	cf 91       	pop	r28
     fde:	08 95       	ret

00000fe0 <a4988Hold>:

bool a4988Hold(uint8_t ch_)
{
	bool ret = a4988Stop(ch_);
     fe0:	e3 df       	rcall	.-58     	; 0xfa8 <a4988Stop>
	ret = a4988Enable();
     fe2:	c2 cf       	rjmp	.-124    	; 0xf68 <a4988Enable>
     fe4:	08 95       	ret

00000fe6 <gpioPinMode>:
	
	return ret;
}
     fe6:	cf 93       	push	r28
	}
	return ret;
}

bool gpioPinMode(uint8_t ch, uint8_t mode)
{
     fe8:	df 93       	push	r29
     fea:	00 d0       	rcall	.+0      	; 0xfec <gpioPinMode+0x6>
     fec:	cd b7       	in	r28, 0x3d	; 61
     fee:	de b7       	in	r29, 0x3e	; 62
	bool ret = false;
	
	GPIO_InitTypeDef GPIO_InitStruct = {0};
     ff0:	1a 82       	std	Y+2, r1	; 0x02
     ff2:	19 82       	std	Y+1, r1	; 0x01
	
	if (ch < 0 || ch >= GPIO_MAX_CH) return ret;
     ff4:	85 30       	cpi	r24, 0x05	; 5
     ff6:	b8 f4       	brcc	.+46     	; 0x1026 <gpioPinMode+0x40>
	
	switch(mode)
     ff8:	61 30       	cpi	r22, 0x01	; 1
     ffa:	11 f4       	brne	.+4      	; 0x1000 <gpioPinMode+0x1a>
		case _DEF_INPUT:
			GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
		break;
		
		case _DEF_OUTPUT:
			GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT;
     ffc:	91 e0       	ldi	r25, 0x01	; 1
     ffe:	9a 83       	std	Y+2, r25	; 0x02
		break;
		default:
		break;
	}
	
	GPIO_InitStruct.Pin = gpio_tbl[ch].pin;
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	fc 01       	movw	r30, r24
    1004:	ee 0f       	add	r30, r30
    1006:	ff 1f       	adc	r31, r31
    1008:	ee 0f       	add	r30, r30
    100a:	ff 1f       	adc	r31, r31
    100c:	e8 0f       	add	r30, r24
    100e:	f9 1f       	adc	r31, r25
    1010:	e0 50       	subi	r30, 0x00	; 0
    1012:	ff 4f       	sbci	r31, 0xFF	; 255
    1014:	81 81       	ldd	r24, Z+1	; 0x01
    1016:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Init(gpio_tbl[ch].port, &GPIO_InitStruct);
    1018:	be 01       	movw	r22, r28
    101a:	6f 5f       	subi	r22, 0xFF	; 255
    101c:	7f 4f       	sbci	r23, 0xFF	; 255
    101e:	80 81       	ld	r24, Z
    1020:	2b d1       	rcall	.+598    	; 0x1278 <GPIO_Init>
	ret = true;
	
	return ret;
    1022:	81 e0       	ldi	r24, 0x01	; 1
    1024:	01 c0       	rjmp	.+2      	; 0x1028 <gpioPinMode+0x42>
{
	bool ret = false;
	
	GPIO_InitTypeDef GPIO_InitStruct = {0};
	
	if (ch < 0 || ch >= GPIO_MAX_CH) return ret;
    1026:	80 e0       	ldi	r24, 0x00	; 0
	GPIO_InitStruct.Pin = gpio_tbl[ch].pin;
	GPIO_Init(gpio_tbl[ch].port, &GPIO_InitStruct);
	ret = true;
	
	return ret;
}
    1028:	0f 90       	pop	r0
    102a:	0f 90       	pop	r0
    102c:	df 91       	pop	r29
    102e:	cf 91       	pop	r28
    1030:	08 95       	ret

00001032 <gpioInit>:
};

bool gpioPinMode(uint8_t ch, uint8_t mode);

bool gpioInit(void)
{
    1032:	0f 93       	push	r16
    1034:	1f 93       	push	r17
    1036:	cf 93       	push	r28
    1038:	00 e0       	ldi	r16, 0x00	; 0
    103a:	11 e0       	ldi	r17, 0x01	; 1
    103c:	c0 e0       	ldi	r28, 0x00	; 0
	bool ret = true;
	
	for(int i = 0; i < GPIO_MAX_CH; i++)
	{
		gpioPinMode(i, gpio_tbl[i].mode);
    103e:	f8 01       	movw	r30, r16
    1040:	62 81       	ldd	r22, Z+2	; 0x02
    1042:	8c 2f       	mov	r24, r28
    1044:	d0 df       	rcall	.-96     	; 0xfe6 <gpioPinMode>
    1046:	0b 5f       	subi	r16, 0xFB	; 251
    1048:	1f 4f       	sbci	r17, 0xFF	; 255
    104a:	cf 5f       	subi	r28, 0xFF	; 255

bool gpioInit(void)
{
	bool ret = true;
	
	for(int i = 0; i < GPIO_MAX_CH; i++)
    104c:	c5 30       	cpi	r28, 0x05	; 5
    104e:	b9 f7       	brne	.-18     	; 0x103e <gpioInit+0xc>
	{
		gpioPinMode(i, gpio_tbl[i].mode);
	}
	return ret;
}
    1050:	81 e0       	ldi	r24, 0x01	; 1
    1052:	cf 91       	pop	r28
    1054:	1f 91       	pop	r17
    1056:	0f 91       	pop	r16
    1058:	08 95       	ret

0000105a <gpioPinWrite>:
	return ret;
}

void gpioPinWrite(uint8_t ch, bool value)
{
	if (ch < 0 || ch >= GPIO_MAX_CH) return;
    105a:	85 30       	cpi	r24, 0x05	; 5
    105c:	00 f5       	brcc	.+64     	; 0x109e <gpioPinWrite+0x44>
	if (value)
    105e:	66 23       	and	r22, r22
    1060:	81 f0       	breq	.+32     	; 0x1082 <gpioPinWrite+0x28>
	{
		GPIO_WritePin(gpio_tbl[ch].port, gpio_tbl[ch].pin, gpio_tbl[ch].on_state);
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	fc 01       	movw	r30, r24
    1066:	ee 0f       	add	r30, r30
    1068:	ff 1f       	adc	r31, r31
    106a:	ee 0f       	add	r30, r30
    106c:	ff 1f       	adc	r31, r31
    106e:	8e 0f       	add	r24, r30
    1070:	9f 1f       	adc	r25, r31
    1072:	fc 01       	movw	r30, r24
    1074:	e0 50       	subi	r30, 0x00	; 0
    1076:	ff 4f       	sbci	r31, 0xFF	; 255
    1078:	43 81       	ldd	r20, Z+3	; 0x03
    107a:	61 81       	ldd	r22, Z+1	; 0x01
    107c:	80 81       	ld	r24, Z
    107e:	37 c1       	rjmp	.+622    	; 0x12ee <GPIO_WritePin>
    1080:	08 95       	ret
	}
	else
	{
		GPIO_WritePin(gpio_tbl[ch].port, gpio_tbl[ch].pin, gpio_tbl[ch].off_state);
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	fc 01       	movw	r30, r24
    1086:	ee 0f       	add	r30, r30
    1088:	ff 1f       	adc	r31, r31
    108a:	ee 0f       	add	r30, r30
    108c:	ff 1f       	adc	r31, r31
    108e:	e8 0f       	add	r30, r24
    1090:	f9 1f       	adc	r31, r25
    1092:	e0 50       	subi	r30, 0x00	; 0
    1094:	ff 4f       	sbci	r31, 0xFF	; 255
    1096:	44 81       	ldd	r20, Z+4	; 0x04
    1098:	61 81       	ldd	r22, Z+1	; 0x01
    109a:	80 81       	ld	r24, Z
    109c:	28 c1       	rjmp	.+592    	; 0x12ee <GPIO_WritePin>
    109e:	08 95       	ret

000010a0 <pwmInit>:

pwm_t pwm_tbl[PWM_MAX_CH];


bool pwmInit(void)
{
    10a0:	e9 e7       	ldi	r30, 0x79	; 121
    10a2:	f3 e0       	ldi	r31, 0x03	; 3
    10a4:	8d e9       	ldi	r24, 0x9D	; 157
    10a6:	93 e0       	ldi	r25, 0x03	; 3
	bool ret = true;
	
	for (int i = 0; i < PWM_MAX_CH; i++)
	{
		pwm_tbl[i].is_open		= false;
    10a8:	10 82       	st	Z, r1
		pwm_tbl[i].h_tim8		= NULL;
    10aa:	12 82       	std	Z+2, r1	; 0x02
    10ac:	11 82       	std	Z+1, r1	; 0x01
		pwm_tbl[i].h_tim16		= NULL;
    10ae:	14 82       	std	Z+4, r1	; 0x04
    10b0:	13 82       	std	Z+3, r1	; 0x03
		pwm_tbl[i].h_tim8_pwm	= NULL;
    10b2:	16 82       	std	Z+6, r1	; 0x06
    10b4:	15 82       	std	Z+5, r1	; 0x05
		pwm_tbl[i].h_tim16_pwm	= NULL;
    10b6:	10 86       	std	Z+8, r1	; 0x08
    10b8:	17 82       	std	Z+7, r1	; 0x07
    10ba:	39 96       	adiw	r30, 0x09	; 9

bool pwmInit(void)
{
	bool ret = true;
	
	for (int i = 0; i < PWM_MAX_CH; i++)
    10bc:	e8 17       	cp	r30, r24
    10be:	f9 07       	cpc	r31, r25
    10c0:	99 f7       	brne	.-26     	; 0x10a8 <pwmInit+0x8>
		pwm_tbl[i].h_tim8_pwm	= NULL;
		pwm_tbl[i].h_tim16_pwm	= NULL;
	}
	
	return ret;
}
    10c2:	81 e0       	ldi	r24, 0x01	; 1
    10c4:	08 95       	ret

000010c6 <uartInit>:
		case _DEF_UART1:
		baud = huart2.Init.BaudRate;
		break;
	}
	return baud;
}
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	08 95       	ret

000010ca <uartOpen>:
    10ca:	88 23       	and	r24, r24
    10cc:	19 f0       	breq	.+6      	; 0x10d4 <uartOpen+0xa>
    10ce:	81 30       	cpi	r24, 0x01	; 1
    10d0:	41 f1       	breq	.+80     	; 0x1122 <__stack+0x23>
    10d2:	4f c0       	rjmp	.+158    	; 0x1172 <__stack+0x73>
    10d4:	e5 eb       	ldi	r30, 0xB5	; 181
    10d6:	f3 e0       	ldi	r31, 0x03	; 3
    10d8:	10 82       	st	Z, r1
    10da:	41 83       	std	Z+1, r20	; 0x01
    10dc:	52 83       	std	Z+2, r21	; 0x02
    10de:	63 83       	std	Z+3, r22	; 0x03
    10e0:	74 83       	std	Z+4, r23	; 0x04
    10e2:	16 82       	std	Z+6, r1	; 0x06
    10e4:	17 82       	std	Z+7, r1	; 0x07
    10e6:	15 82       	std	Z+5, r1	; 0x05
    10e8:	82 e0       	ldi	r24, 0x02	; 2
    10ea:	80 87       	std	Z+8, r24	; 0x08
    10ec:	11 86       	std	Z+9, r1	; 0x09
    10ee:	20 e0       	ldi	r18, 0x00	; 0
    10f0:	31 e0       	ldi	r19, 0x01	; 1
    10f2:	40 e0       	ldi	r20, 0x00	; 0
    10f4:	50 e0       	ldi	r21, 0x00	; 0
    10f6:	67 eb       	ldi	r22, 0xB7	; 183
    10f8:	71 e0       	ldi	r23, 0x01	; 1
    10fa:	87 eb       	ldi	r24, 0xB7	; 183
    10fc:	92 e0       	ldi	r25, 0x02	; 2
    10fe:	c2 d9       	rcall	.-3196   	; 0x484 <qbufferCreate>
    1100:	85 eb       	ldi	r24, 0xB5	; 181
    1102:	93 e0       	ldi	r25, 0x03	; 3
    1104:	55 d4       	rcall	.+2218   	; 0x19b0 <UART_Init>
    1106:	81 11       	cpse	r24, r1
    1108:	36 c0       	rjmp	.+108    	; 0x1176 <__stack+0x77>
    110a:	41 e0       	ldi	r20, 0x01	; 1
    110c:	50 e0       	ldi	r21, 0x00	; 0
    110e:	65 eb       	ldi	r22, 0xB5	; 181
    1110:	71 e0       	ldi	r23, 0x01	; 1
    1112:	85 eb       	ldi	r24, 0xB5	; 181
    1114:	93 e0       	ldi	r25, 0x03	; 3
    1116:	1e d7       	rcall	.+3644   	; 0x1f54 <UART_Receive_IT>
    1118:	91 e0       	ldi	r25, 0x01	; 1
    111a:	88 23       	and	r24, r24
    111c:	79 f1       	breq	.+94     	; 0x117c <__stack+0x7d>
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	2d c0       	rjmp	.+90     	; 0x117c <__stack+0x7d>
    1122:	ec ec       	ldi	r30, 0xCC	; 204
    1124:	f3 e0       	ldi	r31, 0x03	; 3
    1126:	81 e0       	ldi	r24, 0x01	; 1
    1128:	80 83       	st	Z, r24
    112a:	41 83       	std	Z+1, r20	; 0x01
    112c:	52 83       	std	Z+2, r21	; 0x02
    112e:	63 83       	std	Z+3, r22	; 0x03
    1130:	74 83       	std	Z+4, r23	; 0x04
    1132:	16 82       	std	Z+6, r1	; 0x06
    1134:	17 82       	std	Z+7, r1	; 0x07
    1136:	15 82       	std	Z+5, r1	; 0x05
    1138:	82 e0       	ldi	r24, 0x02	; 2
    113a:	80 87       	std	Z+8, r24	; 0x08
    113c:	11 86       	std	Z+9, r1	; 0x09
    113e:	20 e0       	ldi	r18, 0x00	; 0
    1140:	31 e0       	ldi	r19, 0x01	; 1
    1142:	40 e0       	ldi	r20, 0x00	; 0
    1144:	50 e0       	ldi	r21, 0x00	; 0
    1146:	67 eb       	ldi	r22, 0xB7	; 183
    1148:	71 e0       	ldi	r23, 0x01	; 1
    114a:	85 ec       	ldi	r24, 0xC5	; 197
    114c:	92 e0       	ldi	r25, 0x02	; 2
    114e:	9a d9       	rcall	.-3276   	; 0x484 <qbufferCreate>
    1150:	8c ec       	ldi	r24, 0xCC	; 204
    1152:	93 e0       	ldi	r25, 0x03	; 3
    1154:	2d d4       	rcall	.+2138   	; 0x19b0 <UART_Init>
    1156:	81 11       	cpse	r24, r1
    1158:	10 c0       	rjmp	.+32     	; 0x117a <__stack+0x7b>
    115a:	41 e0       	ldi	r20, 0x01	; 1
    115c:	50 e0       	ldi	r21, 0x00	; 0
    115e:	66 eb       	ldi	r22, 0xB6	; 182
    1160:	71 e0       	ldi	r23, 0x01	; 1
    1162:	8c ec       	ldi	r24, 0xCC	; 204
    1164:	93 e0       	ldi	r25, 0x03	; 3
    1166:	f6 d6       	rcall	.+3564   	; 0x1f54 <UART_Receive_IT>
    1168:	91 e0       	ldi	r25, 0x01	; 1
    116a:	88 23       	and	r24, r24
    116c:	39 f0       	breq	.+14     	; 0x117c <__stack+0x7d>
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	05 c0       	rjmp	.+10     	; 0x117c <__stack+0x7d>
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	03 c0       	rjmp	.+6      	; 0x117c <__stack+0x7d>
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	01 c0       	rjmp	.+2      	; 0x117c <__stack+0x7d>
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	89 2f       	mov	r24, r25
    117e:	08 95       	ret

00001180 <uartWrite>:
    1180:	cf 92       	push	r12
    1182:	df 92       	push	r13
    1184:	ef 92       	push	r14
    1186:	ff 92       	push	r15
    1188:	0f 93       	push	r16
    118a:	1f 93       	push	r17
    118c:	69 01       	movw	r12, r18
    118e:	7a 01       	movw	r14, r20
    1190:	88 23       	and	r24, r24
    1192:	19 f0       	breq	.+6      	; 0x119a <uartWrite+0x1a>
    1194:	81 30       	cpi	r24, 0x01	; 1
    1196:	61 f0       	breq	.+24     	; 0x11b0 <uartWrite+0x30>
    1198:	16 c0       	rjmp	.+44     	; 0x11c6 <uartWrite+0x46>
    119a:	04 e6       	ldi	r16, 0x64	; 100
    119c:	10 e0       	ldi	r17, 0x00	; 0
    119e:	20 e0       	ldi	r18, 0x00	; 0
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	a6 01       	movw	r20, r12
    11a4:	85 eb       	ldi	r24, 0xB5	; 181
    11a6:	93 e0       	ldi	r25, 0x03	; 3
    11a8:	00 d6       	rcall	.+3072   	; 0x1daa <UART_Transmit>
    11aa:	81 11       	cpse	r24, r1
    11ac:	10 c0       	rjmp	.+32     	; 0x11ce <uartWrite+0x4e>
    11ae:	16 c0       	rjmp	.+44     	; 0x11dc <uartWrite+0x5c>
    11b0:	04 e6       	ldi	r16, 0x64	; 100
    11b2:	10 e0       	ldi	r17, 0x00	; 0
    11b4:	20 e0       	ldi	r18, 0x00	; 0
    11b6:	30 e0       	ldi	r19, 0x00	; 0
    11b8:	a6 01       	movw	r20, r12
    11ba:	8c ec       	ldi	r24, 0xCC	; 204
    11bc:	93 e0       	ldi	r25, 0x03	; 3
    11be:	f5 d5       	rcall	.+3050   	; 0x1daa <UART_Transmit>
    11c0:	88 23       	and	r24, r24
    11c2:	61 f0       	breq	.+24     	; 0x11dc <uartWrite+0x5c>
    11c4:	08 c0       	rjmp	.+16     	; 0x11d6 <uartWrite+0x56>
    11c6:	c1 2c       	mov	r12, r1
    11c8:	d1 2c       	mov	r13, r1
    11ca:	76 01       	movw	r14, r12
    11cc:	07 c0       	rjmp	.+14     	; 0x11dc <uartWrite+0x5c>
    11ce:	c1 2c       	mov	r12, r1
    11d0:	d1 2c       	mov	r13, r1
    11d2:	76 01       	movw	r14, r12
    11d4:	03 c0       	rjmp	.+6      	; 0x11dc <uartWrite+0x5c>
    11d6:	c1 2c       	mov	r12, r1
    11d8:	d1 2c       	mov	r13, r1
    11da:	76 01       	movw	r14, r12
    11dc:	c7 01       	movw	r24, r14
    11de:	b6 01       	movw	r22, r12
    11e0:	1f 91       	pop	r17
    11e2:	0f 91       	pop	r16
    11e4:	ff 90       	pop	r15
    11e6:	ef 90       	pop	r14
    11e8:	df 90       	pop	r13
    11ea:	cf 90       	pop	r12
    11ec:	08 95       	ret

000011ee <uartPrintf>:
    11ee:	cf 93       	push	r28
    11f0:	df 93       	push	r29
    11f2:	cd b7       	in	r28, 0x3d	; 61
    11f4:	de b7       	in	r29, 0x3e	; 62
    11f6:	da 95       	dec	r29
    11f8:	0f b6       	in	r0, 0x3f	; 63
    11fa:	f8 94       	cli
    11fc:	de bf       	out	0x3e, r29	; 62
    11fe:	0f be       	out	0x3f, r0	; 63
    1200:	cd bf       	out	0x3d, r28	; 61
    1202:	9e 01       	movw	r18, r28
    1204:	28 5f       	subi	r18, 0xF8	; 248
    1206:	3e 4f       	sbci	r19, 0xFE	; 254
    1208:	ca 5f       	subi	r28, 0xFA	; 250
    120a:	de 4f       	sbci	r29, 0xFE	; 254
    120c:	48 81       	ld	r20, Y
    120e:	59 81       	ldd	r21, Y+1	; 0x01
    1210:	c6 50       	subi	r28, 0x06	; 6
    1212:	d1 40       	sbci	r29, 0x01	; 1
    1214:	60 e0       	ldi	r22, 0x00	; 0
    1216:	71 e0       	ldi	r23, 0x01	; 1
    1218:	ce 01       	movw	r24, r28
    121a:	01 96       	adiw	r24, 0x01	; 1
    121c:	0e 94 be 11 	call	0x237c	; 0x237c <vsnprintf>
    1220:	9c 01       	movw	r18, r24
    1222:	99 0f       	add	r25, r25
    1224:	44 0b       	sbc	r20, r20
    1226:	55 0b       	sbc	r21, r21
    1228:	be 01       	movw	r22, r28
    122a:	6f 5f       	subi	r22, 0xFF	; 255
    122c:	7f 4f       	sbci	r23, 0xFF	; 255
    122e:	cb 5f       	subi	r28, 0xFB	; 251
    1230:	de 4f       	sbci	r29, 0xFE	; 254
    1232:	88 81       	ld	r24, Y
    1234:	c5 50       	subi	r28, 0x05	; 5
    1236:	d1 40       	sbci	r29, 0x01	; 1
    1238:	a3 df       	rcall	.-186    	; 0x1180 <uartWrite>
    123a:	d3 95       	inc	r29
    123c:	0f b6       	in	r0, 0x3f	; 63
    123e:	f8 94       	cli
    1240:	de bf       	out	0x3e, r29	; 62
    1242:	0f be       	out	0x3f, r0	; 63
    1244:	cd bf       	out	0x3d, r28	; 61
    1246:	df 91       	pop	r29
    1248:	cf 91       	pop	r28
    124a:	08 95       	ret

0000124c <UART_TxCpltCallback>:


void UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
    124c:	08 95       	ret

0000124e <UART_RxCpltCallback>:
	return;
}

void UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	switch(huart->USARTn)
    124e:	fc 01       	movw	r30, r24
    1250:	20 81       	ld	r18, Z
    1252:	21 11       	cpse	r18, r1
    1254:	09 c0       	rjmp	.+18     	; 0x1268 <UART_RxCpltCallback+0x1a>
	{
		case USART0:
		qbufferWrite(&qbuffer[_DEF_UART0], huart->pRxBuffPtr, huart->RxXferSize);
    1256:	20 89       	ldd	r18, Z+16	; 0x10
    1258:	31 89       	ldd	r19, Z+17	; 0x11
    125a:	40 e0       	ldi	r20, 0x00	; 0
    125c:	50 e0       	ldi	r21, 0x00	; 0
    125e:	64 85       	ldd	r22, Z+12	; 0x0c
    1260:	75 85       	ldd	r23, Z+13	; 0x0d
    1262:	87 eb       	ldi	r24, 0xB7	; 183
    1264:	92 e0       	ldi	r25, 0x02	; 2
    1266:	1f c9       	rjmp	.-3522   	; 0x4a6 <qbufferWrite>
    1268:	08 95       	ret

0000126a <hwInit>:
ï»¿#include "hw.h"

void hwInit(void)
{
	bspInit();
    126a:	0b d9       	rcall	.-3562   	; 0x482 <bspInit>
	gpioInit();
    126c:	e2 de       	rcall	.-572    	; 0x1032 <gpioInit>
	uartInit();
    126e:	2b df       	rcall	.-426    	; 0x10c6 <uartInit>
	//timerInit();
	//a4988Init();
	ctcInit();
    1270:	c0 d9       	rcall	.-3200   	; 0x5f2 <ctcInit>
    1272:	16 df       	rcall	.-468    	; 0x10a0 <pwmInit>
	pwmInit();
    1274:	23 cd       	rjmp	.-1466   	; 0xcbc <motorInit>
    1276:	08 95       	ret

00001278 <GPIO_Init>:
	motorInit();
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	db 01       	movw	r26, r22
    127c:	11 96       	adiw	r26, 0x01	; 1
	GPIO_PinState ret = 0x00;
	GPIO_TypeDef *gpio = &GPIO_descripter[port];

	ret = READB(*(gpio->PINn), pin);
	return ret;
}
    127e:	2c 91       	ld	r18, X
    1280:	11 97       	sbiw	r26, 0x01	; 1
    1282:	21 11       	cpse	r18, r1
    1284:	19 c0       	rjmp	.+50     	; 0x12b8 <GPIO_Init+0x40>
    1286:	fc 01       	movw	r30, r24
    1288:	ee 0f       	add	r30, r30
    128a:	ff 1f       	adc	r31, r31
    128c:	e8 0f       	add	r30, r24
    128e:	f9 1f       	adc	r31, r25
    1290:	ee 0f       	add	r30, r30
    1292:	ff 1f       	adc	r31, r31
    1294:	e7 5e       	subi	r30, 0xE7	; 231
    1296:	fe 4f       	sbci	r31, 0xFE	; 254
    1298:	01 90       	ld	r0, Z+
    129a:	f0 81       	ld	r31, Z
    129c:	e0 2d       	mov	r30, r0
    129e:	20 81       	ld	r18, Z
    12a0:	81 e0       	ldi	r24, 0x01	; 1
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	0c 90       	ld	r0, X
    12a6:	02 c0       	rjmp	.+4      	; 0x12ac <GPIO_Init+0x34>
    12a8:	88 0f       	add	r24, r24
    12aa:	99 1f       	adc	r25, r25
    12ac:	0a 94       	dec	r0
    12ae:	e2 f7       	brpl	.-8      	; 0x12a8 <GPIO_Init+0x30>
    12b0:	80 95       	com	r24
    12b2:	82 23       	and	r24, r18
    12b4:	80 83       	st	Z, r24
    12b6:	08 95       	ret
    12b8:	21 30       	cpi	r18, 0x01	; 1
    12ba:	c1 f4       	brne	.+48     	; 0x12ec <GPIO_Init+0x74>
    12bc:	fc 01       	movw	r30, r24
    12be:	ee 0f       	add	r30, r30
    12c0:	ff 1f       	adc	r31, r31
    12c2:	e8 0f       	add	r30, r24
    12c4:	f9 1f       	adc	r31, r25
    12c6:	ee 0f       	add	r30, r30
    12c8:	ff 1f       	adc	r31, r31
    12ca:	e7 5e       	subi	r30, 0xE7	; 231
    12cc:	fe 4f       	sbci	r31, 0xFE	; 254
    12ce:	01 90       	ld	r0, Z+
    12d0:	f0 81       	ld	r31, Z
    12d2:	e0 2d       	mov	r30, r0
    12d4:	20 81       	ld	r18, Z
    12d6:	81 e0       	ldi	r24, 0x01	; 1
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	db 01       	movw	r26, r22
    12dc:	0c 90       	ld	r0, X
    12de:	02 c0       	rjmp	.+4      	; 0x12e4 <GPIO_Init+0x6c>
    12e0:	88 0f       	add	r24, r24
    12e2:	99 1f       	adc	r25, r25
    12e4:	0a 94       	dec	r0
    12e6:	e2 f7       	brpl	.-8      	; 0x12e0 <GPIO_Init+0x68>
    12e8:	82 2b       	or	r24, r18
    12ea:	80 83       	st	Z, r24
    12ec:	08 95       	ret

000012ee <GPIO_WritePin>:

void GPIO_WritePin(uint8_t port, uint8_t pin, GPIO_PinState pinState)
{
	GPIO_TypeDef *gpio = &GPIO_descripter[port];
    12ee:	90 e0       	ldi	r25, 0x00	; 0
	
	if(pinState == PIN_RESET)
    12f0:	41 11       	cpse	r20, r1
    12f2:	18 c0       	rjmp	.+48     	; 0x1324 <GPIO_WritePin+0x36>
	{
		CLRB(*(gpio->PORTn), pin);
    12f4:	fc 01       	movw	r30, r24
    12f6:	ee 0f       	add	r30, r30
    12f8:	ff 1f       	adc	r31, r31
    12fa:	e8 0f       	add	r30, r24
    12fc:	f9 1f       	adc	r31, r25
    12fe:	ee 0f       	add	r30, r30
    1300:	ff 1f       	adc	r31, r31
    1302:	e7 5e       	subi	r30, 0xE7	; 231
    1304:	fe 4f       	sbci	r31, 0xFE	; 254
    1306:	02 80       	ldd	r0, Z+2	; 0x02
    1308:	f3 81       	ldd	r31, Z+3	; 0x03
    130a:	e0 2d       	mov	r30, r0
    130c:	20 81       	ld	r18, Z
    130e:	81 e0       	ldi	r24, 0x01	; 1
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	02 c0       	rjmp	.+4      	; 0x1318 <GPIO_WritePin+0x2a>
    1314:	88 0f       	add	r24, r24
    1316:	99 1f       	adc	r25, r25
    1318:	6a 95       	dec	r22
    131a:	e2 f7       	brpl	.-8      	; 0x1314 <GPIO_WritePin+0x26>
    131c:	80 95       	com	r24
    131e:	82 23       	and	r24, r18
    1320:	80 83       	st	Z, r24
    1322:	08 95       	ret
	}
	else if(pinState == PIN_SET)
    1324:	41 30       	cpi	r20, 0x01	; 1
    1326:	b1 f4       	brne	.+44     	; 0x1354 <GPIO_WritePin+0x66>
	{
		SETB(*(gpio->PORTn), pin);
    1328:	fc 01       	movw	r30, r24
    132a:	ee 0f       	add	r30, r30
    132c:	ff 1f       	adc	r31, r31
    132e:	e8 0f       	add	r30, r24
    1330:	f9 1f       	adc	r31, r25
    1332:	ee 0f       	add	r30, r30
    1334:	ff 1f       	adc	r31, r31
    1336:	e7 5e       	subi	r30, 0xE7	; 231
    1338:	fe 4f       	sbci	r31, 0xFE	; 254
    133a:	02 80       	ldd	r0, Z+2	; 0x02
    133c:	f3 81       	ldd	r31, Z+3	; 0x03
    133e:	e0 2d       	mov	r30, r0
    1340:	20 81       	ld	r18, Z
    1342:	81 e0       	ldi	r24, 0x01	; 1
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	02 c0       	rjmp	.+4      	; 0x134c <GPIO_WritePin+0x5e>
    1348:	88 0f       	add	r24, r24
    134a:	99 1f       	adc	r25, r25
    134c:	6a 95       	dec	r22
    134e:	e2 f7       	brpl	.-8      	; 0x1348 <GPIO_WritePin+0x5a>
    1350:	82 2b       	or	r24, r18
    1352:	80 83       	st	Z, r24
    1354:	08 95       	ret

00001356 <TIM8_Base_Init>:
{
	TIM2_OVF_ElapsedCallback(htim);
}
void TIM3_OVF_IRQHandler(TIM16_HandleTypeDef *htim)
{
	TIM3_OVF_ElapsedCallback(htim);
    1356:	fc 01       	movw	r30, r24
    1358:	80 81       	ld	r24, Z
    135a:	88 23       	and	r24, r24
    135c:	09 f4       	brne	.+2      	; 0x1360 <TIM8_Base_Init+0xa>
    135e:	48 c0       	rjmp	.+144    	; 0x13f0 <TIM8_Base_Init+0x9a>
    1360:	82 30       	cpi	r24, 0x02	; 2
    1362:	e9 f1       	breq	.+122    	; 0x13de <TIM8_Base_Init+0x88>
    1364:	38 c0       	rjmp	.+112    	; 0x13d6 <TIM8_Base_Init+0x80>
    1366:	81 81       	ldd	r24, Z+1	; 0x01
    1368:	81 30       	cpi	r24, 0x01	; 1
    136a:	19 f0       	breq	.+6      	; 0x1372 <TIM8_Base_Init+0x1c>
    136c:	82 30       	cpi	r24, 0x02	; 2
    136e:	d1 f0       	breq	.+52     	; 0x13a4 <TIM8_Base_Init+0x4e>
    1370:	34 c0       	rjmp	.+104    	; 0x13da <TIM8_Base_Init+0x84>
    1372:	ef e6       	ldi	r30, 0x6F	; 111
    1374:	f1 e0       	ldi	r31, 0x01	; 1
    1376:	a0 85       	ldd	r26, Z+8	; 0x08
    1378:	b1 85       	ldd	r27, Z+9	; 0x09
    137a:	8c 91       	ld	r24, X
    137c:	88 7f       	andi	r24, 0xF8	; 248
    137e:	8c 93       	st	X, r24
    1380:	a0 85       	ldd	r26, Z+8	; 0x08
    1382:	b1 85       	ldd	r27, Z+9	; 0x09
    1384:	8c 91       	ld	r24, X
    1386:	84 60       	ori	r24, 0x04	; 4
    1388:	8c 93       	st	X, r24
    138a:	a0 85       	ldd	r26, Z+8	; 0x08
    138c:	b1 85       	ldd	r27, Z+9	; 0x09
    138e:	8c 91       	ld	r24, X
    1390:	82 60       	ori	r24, 0x02	; 2
    1392:	8c 93       	st	X, r24
    1394:	00 84       	ldd	r0, Z+8	; 0x08
    1396:	f1 85       	ldd	r31, Z+9	; 0x09
    1398:	e0 2d       	mov	r30, r0
    139a:	80 81       	ld	r24, Z
    139c:	8e 7f       	andi	r24, 0xFE	; 254
    139e:	80 83       	st	Z, r24
    13a0:	80 e0       	ldi	r24, 0x00	; 0
    13a2:	08 95       	ret
    13a4:	ef e6       	ldi	r30, 0x6F	; 111
    13a6:	f1 e0       	ldi	r31, 0x01	; 1
    13a8:	a0 85       	ldd	r26, Z+8	; 0x08
    13aa:	b1 85       	ldd	r27, Z+9	; 0x09
    13ac:	8c 91       	ld	r24, X
    13ae:	88 7f       	andi	r24, 0xF8	; 248
    13b0:	8c 93       	st	X, r24
    13b2:	a0 85       	ldd	r26, Z+8	; 0x08
    13b4:	b1 85       	ldd	r27, Z+9	; 0x09
    13b6:	8c 91       	ld	r24, X
    13b8:	84 60       	ori	r24, 0x04	; 4
    13ba:	8c 93       	st	X, r24
    13bc:	a0 85       	ldd	r26, Z+8	; 0x08
    13be:	b1 85       	ldd	r27, Z+9	; 0x09
    13c0:	8c 91       	ld	r24, X
    13c2:	82 60       	ori	r24, 0x02	; 2
    13c4:	8c 93       	st	X, r24
    13c6:	00 84       	ldd	r0, Z+8	; 0x08
    13c8:	f1 85       	ldd	r31, Z+9	; 0x09
    13ca:	e0 2d       	mov	r30, r0
    13cc:	80 81       	ld	r24, Z
    13ce:	81 60       	ori	r24, 0x01	; 1
    13d0:	80 83       	st	Z, r24
    13d2:	80 e0       	ldi	r24, 0x00	; 0
    13d4:	08 95       	ret
    13d6:	81 e0       	ldi	r24, 0x01	; 1
    13d8:	08 95       	ret
    13da:	80 e0       	ldi	r24, 0x00	; 0
    13dc:	08 95       	ret
    13de:	27 e7       	ldi	r18, 0x77	; 119
    13e0:	31 e0       	ldi	r19, 0x01	; 1
    13e2:	35 83       	std	Z+5, r19	; 0x05
    13e4:	24 83       	std	Z+4, r18	; 0x04
    13e6:	82 30       	cpi	r24, 0x02	; 2
    13e8:	09 f4       	brne	.+2      	; 0x13ec <TIM8_Base_Init+0x96>
    13ea:	bd cf       	rjmp	.-134    	; 0x1366 <TIM8_Base_Init+0x10>
    13ec:	80 e0       	ldi	r24, 0x00	; 0
    13ee:	08 95       	ret
    13f0:	8f e6       	ldi	r24, 0x6F	; 111
    13f2:	91 e0       	ldi	r25, 0x01	; 1
    13f4:	95 83       	std	Z+5, r25	; 0x05
    13f6:	84 83       	std	Z+4, r24	; 0x04
    13f8:	80 e0       	ldi	r24, 0x00	; 0
    13fa:	08 95       	ret

000013fc <TIM8_OC_Init>:
    13fc:	0f 93       	push	r16
    13fe:	1f 93       	push	r17
    1400:	cf 93       	push	r28
    1402:	df 93       	push	r29
    1404:	dc 01       	movw	r26, r24
    1406:	2c 91       	ld	r18, X
    1408:	22 23       	and	r18, r18
    140a:	09 f4       	brne	.+2      	; 0x140e <TIM8_OC_Init+0x12>
    140c:	7f c0       	rjmp	.+254    	; 0x150c <TIM8_OC_Init+0x110>
    140e:	22 30       	cpi	r18, 0x02	; 2
    1410:	09 f0       	breq	.+2      	; 0x1414 <TIM8_OC_Init+0x18>
    1412:	7a c0       	rjmp	.+244    	; 0x1508 <TIM8_OC_Init+0x10c>
    1414:	07 e7       	ldi	r16, 0x77	; 119
    1416:	11 e0       	ldi	r17, 0x01	; 1
    1418:	7b c0       	rjmp	.+246    	; 0x1510 <TIM8_OC_Init+0x114>
    141a:	d8 01       	movw	r26, r16
    141c:	ed 91       	ld	r30, X+
    141e:	fc 91       	ld	r31, X
    1420:	11 97       	sbiw	r26, 0x01	; 1
    1422:	80 81       	ld	r24, Z
    1424:	8f 7b       	andi	r24, 0xBF	; 191
    1426:	80 83       	st	Z, r24
    1428:	ed 91       	ld	r30, X+
    142a:	fc 91       	ld	r31, X
    142c:	80 81       	ld	r24, Z
    142e:	87 7f       	andi	r24, 0xF7	; 247
    1430:	80 83       	st	Z, r24
    1432:	0c c0       	rjmp	.+24     	; 0x144c <TIM8_OC_Init+0x50>
    1434:	d8 01       	movw	r26, r16
    1436:	ed 91       	ld	r30, X+
    1438:	fc 91       	ld	r31, X
    143a:	11 97       	sbiw	r26, 0x01	; 1
    143c:	80 81       	ld	r24, Z
    143e:	8f 7b       	andi	r24, 0xBF	; 191
    1440:	80 83       	st	Z, r24
    1442:	ed 91       	ld	r30, X+
    1444:	fc 91       	ld	r31, X
    1446:	80 81       	ld	r24, Z
    1448:	88 60       	ori	r24, 0x08	; 8
    144a:	80 83       	st	Z, r24
    144c:	89 81       	ldd	r24, Y+1	; 0x01
    144e:	88 23       	and	r24, r24
    1450:	19 f0       	breq	.+6      	; 0x1458 <TIM8_OC_Init+0x5c>
    1452:	81 30       	cpi	r24, 0x01	; 1
    1454:	41 f0       	breq	.+16     	; 0x1466 <TIM8_OC_Init+0x6a>
    1456:	0d c0       	rjmp	.+26     	; 0x1472 <TIM8_OC_Init+0x76>
    1458:	d8 01       	movw	r26, r16
    145a:	ed 91       	ld	r30, X+
    145c:	fc 91       	ld	r31, X
    145e:	80 81       	ld	r24, Z
    1460:	8f 77       	andi	r24, 0x7F	; 127
    1462:	80 83       	st	Z, r24
    1464:	06 c0       	rjmp	.+12     	; 0x1472 <TIM8_OC_Init+0x76>
    1466:	d8 01       	movw	r26, r16
    1468:	ed 91       	ld	r30, X+
    146a:	fc 91       	ld	r31, X
    146c:	80 81       	ld	r24, Z
    146e:	80 68       	ori	r24, 0x80	; 128
    1470:	80 83       	st	Z, r24
    1472:	8a 81       	ldd	r24, Y+2	; 0x02
    1474:	81 30       	cpi	r24, 0x01	; 1
    1476:	99 f0       	breq	.+38     	; 0x149e <TIM8_OC_Init+0xa2>
    1478:	28 f0       	brcs	.+10     	; 0x1484 <TIM8_OC_Init+0x88>
    147a:	82 30       	cpi	r24, 0x02	; 2
    147c:	e9 f0       	breq	.+58     	; 0x14b8 <TIM8_OC_Init+0xbc>
    147e:	83 30       	cpi	r24, 0x03	; 3
    1480:	41 f1       	breq	.+80     	; 0x14d2 <TIM8_OC_Init+0xd6>
    1482:	33 c0       	rjmp	.+102    	; 0x14ea <TIM8_OC_Init+0xee>
    1484:	d8 01       	movw	r26, r16
    1486:	ed 91       	ld	r30, X+
    1488:	fc 91       	ld	r31, X
    148a:	11 97       	sbiw	r26, 0x01	; 1
    148c:	80 81       	ld	r24, Z
    148e:	8f 7e       	andi	r24, 0xEF	; 239
    1490:	80 83       	st	Z, r24
    1492:	ed 91       	ld	r30, X+
    1494:	fc 91       	ld	r31, X
    1496:	80 81       	ld	r24, Z
    1498:	8f 7d       	andi	r24, 0xDF	; 223
    149a:	80 83       	st	Z, r24
    149c:	26 c0       	rjmp	.+76     	; 0x14ea <TIM8_OC_Init+0xee>
    149e:	d8 01       	movw	r26, r16
    14a0:	ed 91       	ld	r30, X+
    14a2:	fc 91       	ld	r31, X
    14a4:	11 97       	sbiw	r26, 0x01	; 1
    14a6:	80 81       	ld	r24, Z
    14a8:	80 61       	ori	r24, 0x10	; 16
    14aa:	80 83       	st	Z, r24
    14ac:	ed 91       	ld	r30, X+
    14ae:	fc 91       	ld	r31, X
    14b0:	80 81       	ld	r24, Z
    14b2:	8f 7d       	andi	r24, 0xDF	; 223
    14b4:	80 83       	st	Z, r24
    14b6:	19 c0       	rjmp	.+50     	; 0x14ea <TIM8_OC_Init+0xee>
    14b8:	d8 01       	movw	r26, r16
    14ba:	ed 91       	ld	r30, X+
    14bc:	fc 91       	ld	r31, X
    14be:	11 97       	sbiw	r26, 0x01	; 1
    14c0:	80 81       	ld	r24, Z
    14c2:	8f 7e       	andi	r24, 0xEF	; 239
    14c4:	80 83       	st	Z, r24
    14c6:	ed 91       	ld	r30, X+
    14c8:	fc 91       	ld	r31, X
    14ca:	80 81       	ld	r24, Z
    14cc:	80 62       	ori	r24, 0x20	; 32
    14ce:	80 83       	st	Z, r24
    14d0:	0c c0       	rjmp	.+24     	; 0x14ea <TIM8_OC_Init+0xee>
    14d2:	d8 01       	movw	r26, r16
    14d4:	ed 91       	ld	r30, X+
    14d6:	fc 91       	ld	r31, X
    14d8:	11 97       	sbiw	r26, 0x01	; 1
    14da:	80 81       	ld	r24, Z
    14dc:	80 61       	ori	r24, 0x10	; 16
    14de:	80 83       	st	Z, r24
    14e0:	ed 91       	ld	r30, X+
    14e2:	fc 91       	ld	r31, X
    14e4:	80 81       	ld	r24, Z
    14e6:	80 62       	ori	r24, 0x20	; 32
    14e8:	80 83       	st	Z, r24
    14ea:	d8 01       	movw	r26, r16
    14ec:	14 96       	adiw	r26, 0x04	; 4
    14ee:	ed 91       	ld	r30, X+
    14f0:	fc 91       	ld	r31, X
    14f2:	15 97       	sbiw	r26, 0x05	; 5
    14f4:	8c 81       	ldd	r24, Y+4	; 0x04
    14f6:	80 83       	st	Z, r24
    14f8:	12 96       	adiw	r26, 0x02	; 2
    14fa:	ed 91       	ld	r30, X+
    14fc:	fc 91       	ld	r31, X
    14fe:	13 97       	sbiw	r26, 0x03	; 3
    1500:	8b 81       	ldd	r24, Y+3	; 0x03
    1502:	80 83       	st	Z, r24
    1504:	80 e0       	ldi	r24, 0x00	; 0
    1506:	0e c0       	rjmp	.+28     	; 0x1524 <TIM8_OC_Init+0x128>
    1508:	81 e0       	ldi	r24, 0x01	; 1
    150a:	0c c0       	rjmp	.+24     	; 0x1524 <TIM8_OC_Init+0x128>
    150c:	0f e6       	ldi	r16, 0x6F	; 111
    150e:	11 e0       	ldi	r17, 0x01	; 1
    1510:	eb 01       	movw	r28, r22
    1512:	21 df       	rcall	.-446    	; 0x1356 <TIM8_Base_Init>
    1514:	88 81       	ld	r24, Y
    1516:	88 23       	and	r24, r24
    1518:	09 f4       	brne	.+2      	; 0x151c <TIM8_OC_Init+0x120>
    151a:	7f cf       	rjmp	.-258    	; 0x141a <TIM8_OC_Init+0x1e>
    151c:	81 30       	cpi	r24, 0x01	; 1
    151e:	09 f4       	brne	.+2      	; 0x1522 <TIM8_OC_Init+0x126>
    1520:	89 cf       	rjmp	.-238    	; 0x1434 <TIM8_OC_Init+0x38>
    1522:	94 cf       	rjmp	.-216    	; 0x144c <TIM8_OC_Init+0x50>
    1524:	df 91       	pop	r29
    1526:	cf 91       	pop	r28
    1528:	1f 91       	pop	r17
    152a:	0f 91       	pop	r16
    152c:	08 95       	ret

0000152e <TIM8_OC_Stop>:
    152e:	fc 01       	movw	r30, r24
    1530:	80 81       	ld	r24, Z
    1532:	88 23       	and	r24, r24
    1534:	39 f0       	breq	.+14     	; 0x1544 <TIM8_OC_Stop+0x16>
    1536:	82 30       	cpi	r24, 0x02	; 2
    1538:	19 f4       	brne	.+6      	; 0x1540 <TIM8_OC_Stop+0x12>
    153a:	e7 e7       	ldi	r30, 0x77	; 119
    153c:	f1 e0       	ldi	r31, 0x01	; 1
    153e:	04 c0       	rjmp	.+8      	; 0x1548 <TIM8_OC_Stop+0x1a>
    1540:	81 e0       	ldi	r24, 0x01	; 1
    1542:	08 95       	ret
    1544:	ef e6       	ldi	r30, 0x6F	; 111
    1546:	f1 e0       	ldi	r31, 0x01	; 1
    1548:	01 90       	ld	r0, Z+
    154a:	f0 81       	ld	r31, Z
    154c:	e0 2d       	mov	r30, r0
    154e:	80 81       	ld	r24, Z
    1550:	88 7f       	andi	r24, 0xF8	; 248
    1552:	80 83       	st	Z, r24
    1554:	80 e0       	ldi	r24, 0x00	; 0
    1556:	08 95       	ret

00001558 <TIM16_OC_Stop>:
    1558:	fc 01       	movw	r30, r24
    155a:	80 81       	ld	r24, Z
    155c:	81 30       	cpi	r24, 0x01	; 1
    155e:	39 f0       	breq	.+14     	; 0x156e <TIM16_OC_Stop+0x16>
    1560:	83 30       	cpi	r24, 0x03	; 3
    1562:	19 f4       	brne	.+6      	; 0x156a <TIM16_OC_Stop+0x12>
    1564:	e9 e5       	ldi	r30, 0x59	; 89
    1566:	f1 e0       	ldi	r31, 0x01	; 1
    1568:	04 c0       	rjmp	.+8      	; 0x1572 <TIM16_OC_Stop+0x1a>
    156a:	81 e0       	ldi	r24, 0x01	; 1
    156c:	08 95       	ret
    156e:	e3 e4       	ldi	r30, 0x43	; 67
    1570:	f1 e0       	ldi	r31, 0x01	; 1
    1572:	02 80       	ldd	r0, Z+2	; 0x02
    1574:	f3 81       	ldd	r31, Z+3	; 0x03
    1576:	e0 2d       	mov	r30, r0
    1578:	80 81       	ld	r24, Z
    157a:	88 7f       	andi	r24, 0xF8	; 248
    157c:	80 83       	st	Z, r24
    157e:	80 e0       	ldi	r24, 0x00	; 0
    1580:	08 95       	ret

00001582 <TIM0_CLK_Configuration>:
    1582:	dc 01       	movw	r26, r24
    1584:	12 96       	adiw	r26, 0x02	; 2
    1586:	ec 91       	ld	r30, X
    1588:	8e 2f       	mov	r24, r30
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	87 30       	cpi	r24, 0x07	; 7
    158e:	91 05       	cpc	r25, r1
    1590:	08 f0       	brcs	.+2      	; 0x1594 <TIM0_CLK_Configuration+0x12>
    1592:	88 c0       	rjmp	.+272    	; 0x16a4 <TIM0_CLK_Configuration+0x122>
    1594:	fc 01       	movw	r30, r24
    1596:	ea 5b       	subi	r30, 0xBA	; 186
    1598:	ff 4f       	sbci	r31, 0xFF	; 255
    159a:	d3 c6       	rjmp	.+3494   	; 0x2342 <__tablejump2__>
    159c:	ef e6       	ldi	r30, 0x6F	; 111
    159e:	f1 e0       	ldi	r31, 0x01	; 1
    15a0:	a0 81       	ld	r26, Z
    15a2:	b1 81       	ldd	r27, Z+1	; 0x01
    15a4:	8c 91       	ld	r24, X
    15a6:	8b 7f       	andi	r24, 0xFB	; 251
    15a8:	8c 93       	st	X, r24
    15aa:	a0 81       	ld	r26, Z
    15ac:	b1 81       	ldd	r27, Z+1	; 0x01
    15ae:	8c 91       	ld	r24, X
    15b0:	8d 7f       	andi	r24, 0xFD	; 253
    15b2:	8c 93       	st	X, r24
    15b4:	01 90       	ld	r0, Z+
    15b6:	f0 81       	ld	r31, Z
    15b8:	e0 2d       	mov	r30, r0
    15ba:	80 81       	ld	r24, Z
    15bc:	81 60       	ori	r24, 0x01	; 1
    15be:	80 83       	st	Z, r24
    15c0:	08 95       	ret
    15c2:	ef e6       	ldi	r30, 0x6F	; 111
    15c4:	f1 e0       	ldi	r31, 0x01	; 1
    15c6:	a0 81       	ld	r26, Z
    15c8:	b1 81       	ldd	r27, Z+1	; 0x01
    15ca:	8c 91       	ld	r24, X
    15cc:	8b 7f       	andi	r24, 0xFB	; 251
    15ce:	8c 93       	st	X, r24
    15d0:	a0 81       	ld	r26, Z
    15d2:	b1 81       	ldd	r27, Z+1	; 0x01
    15d4:	8c 91       	ld	r24, X
    15d6:	82 60       	ori	r24, 0x02	; 2
    15d8:	8c 93       	st	X, r24
    15da:	01 90       	ld	r0, Z+
    15dc:	f0 81       	ld	r31, Z
    15de:	e0 2d       	mov	r30, r0
    15e0:	80 81       	ld	r24, Z
    15e2:	8e 7f       	andi	r24, 0xFE	; 254
    15e4:	80 83       	st	Z, r24
    15e6:	08 95       	ret
    15e8:	ef e6       	ldi	r30, 0x6F	; 111
    15ea:	f1 e0       	ldi	r31, 0x01	; 1
    15ec:	a0 81       	ld	r26, Z
    15ee:	b1 81       	ldd	r27, Z+1	; 0x01
    15f0:	8c 91       	ld	r24, X
    15f2:	8b 7f       	andi	r24, 0xFB	; 251
    15f4:	8c 93       	st	X, r24
    15f6:	a0 81       	ld	r26, Z
    15f8:	b1 81       	ldd	r27, Z+1	; 0x01
    15fa:	8c 91       	ld	r24, X
    15fc:	82 60       	ori	r24, 0x02	; 2
    15fe:	8c 93       	st	X, r24
    1600:	01 90       	ld	r0, Z+
    1602:	f0 81       	ld	r31, Z
    1604:	e0 2d       	mov	r30, r0
    1606:	80 81       	ld	r24, Z
    1608:	81 60       	ori	r24, 0x01	; 1
    160a:	80 83       	st	Z, r24
    160c:	08 95       	ret
    160e:	ef e6       	ldi	r30, 0x6F	; 111
    1610:	f1 e0       	ldi	r31, 0x01	; 1
    1612:	a0 81       	ld	r26, Z
    1614:	b1 81       	ldd	r27, Z+1	; 0x01
    1616:	8c 91       	ld	r24, X
    1618:	84 60       	ori	r24, 0x04	; 4
    161a:	8c 93       	st	X, r24
    161c:	a0 81       	ld	r26, Z
    161e:	b1 81       	ldd	r27, Z+1	; 0x01
    1620:	8c 91       	ld	r24, X
    1622:	8d 7f       	andi	r24, 0xFD	; 253
    1624:	8c 93       	st	X, r24
    1626:	01 90       	ld	r0, Z+
    1628:	f0 81       	ld	r31, Z
    162a:	e0 2d       	mov	r30, r0
    162c:	80 81       	ld	r24, Z
    162e:	8e 7f       	andi	r24, 0xFE	; 254
    1630:	80 83       	st	Z, r24
    1632:	08 95       	ret
    1634:	ef e6       	ldi	r30, 0x6F	; 111
    1636:	f1 e0       	ldi	r31, 0x01	; 1
    1638:	a0 81       	ld	r26, Z
    163a:	b1 81       	ldd	r27, Z+1	; 0x01
    163c:	8c 91       	ld	r24, X
    163e:	84 60       	ori	r24, 0x04	; 4
    1640:	8c 93       	st	X, r24
    1642:	a0 81       	ld	r26, Z
    1644:	b1 81       	ldd	r27, Z+1	; 0x01
    1646:	8c 91       	ld	r24, X
    1648:	8d 7f       	andi	r24, 0xFD	; 253
    164a:	8c 93       	st	X, r24
    164c:	01 90       	ld	r0, Z+
    164e:	f0 81       	ld	r31, Z
    1650:	e0 2d       	mov	r30, r0
    1652:	80 81       	ld	r24, Z
    1654:	81 60       	ori	r24, 0x01	; 1
    1656:	80 83       	st	Z, r24
    1658:	08 95       	ret
    165a:	ef e6       	ldi	r30, 0x6F	; 111
    165c:	f1 e0       	ldi	r31, 0x01	; 1
    165e:	a0 81       	ld	r26, Z
    1660:	b1 81       	ldd	r27, Z+1	; 0x01
    1662:	8c 91       	ld	r24, X
    1664:	84 60       	ori	r24, 0x04	; 4
    1666:	8c 93       	st	X, r24
    1668:	a0 81       	ld	r26, Z
    166a:	b1 81       	ldd	r27, Z+1	; 0x01
    166c:	8c 91       	ld	r24, X
    166e:	82 60       	ori	r24, 0x02	; 2
    1670:	8c 93       	st	X, r24
    1672:	01 90       	ld	r0, Z+
    1674:	f0 81       	ld	r31, Z
    1676:	e0 2d       	mov	r30, r0
    1678:	80 81       	ld	r24, Z
    167a:	8e 7f       	andi	r24, 0xFE	; 254
    167c:	80 83       	st	Z, r24
    167e:	08 95       	ret
    1680:	ef e6       	ldi	r30, 0x6F	; 111
    1682:	f1 e0       	ldi	r31, 0x01	; 1
    1684:	a0 81       	ld	r26, Z
    1686:	b1 81       	ldd	r27, Z+1	; 0x01
    1688:	8c 91       	ld	r24, X
    168a:	84 60       	ori	r24, 0x04	; 4
    168c:	8c 93       	st	X, r24
    168e:	a0 81       	ld	r26, Z
    1690:	b1 81       	ldd	r27, Z+1	; 0x01
    1692:	8c 91       	ld	r24, X
    1694:	82 60       	ori	r24, 0x02	; 2
    1696:	8c 93       	st	X, r24
    1698:	01 90       	ld	r0, Z+
    169a:	f0 81       	ld	r31, Z
    169c:	e0 2d       	mov	r30, r0
    169e:	80 81       	ld	r24, Z
    16a0:	81 60       	ori	r24, 0x01	; 1
    16a2:	80 83       	st	Z, r24
    16a4:	08 95       	ret

000016a6 <TIM2_CLK_Configuration>:
    16a6:	e0 91 77 01 	lds	r30, 0x0177	; 0x800177 <TIM8_descripter+0x8>
    16aa:	f0 91 78 01 	lds	r31, 0x0178	; 0x800178 <TIM8_descripter+0x9>
    16ae:	20 81       	ld	r18, Z
    16b0:	20 81       	ld	r18, Z
    16b2:	dc 01       	movw	r26, r24
    16b4:	12 96       	adiw	r26, 0x02	; 2
    16b6:	8c 91       	ld	r24, X
    16b8:	83 30       	cpi	r24, 0x03	; 3
    16ba:	71 f1       	breq	.+92     	; 0x1718 <TIM2_CLK_Configuration+0x72>
    16bc:	28 f4       	brcc	.+10     	; 0x16c8 <TIM2_CLK_Configuration+0x22>
    16be:	88 23       	and	r24, r24
    16c0:	49 f0       	breq	.+18     	; 0x16d4 <TIM2_CLK_Configuration+0x2e>
    16c2:	81 30       	cpi	r24, 0x01	; 1
    16c4:	c1 f0       	breq	.+48     	; 0x16f6 <TIM2_CLK_Configuration+0x50>
    16c6:	08 95       	ret
    16c8:	85 30       	cpi	r24, 0x05	; 5
    16ca:	b9 f1       	breq	.+110    	; 0x173a <TIM2_CLK_Configuration+0x94>
    16cc:	86 30       	cpi	r24, 0x06	; 6
    16ce:	09 f4       	brne	.+2      	; 0x16d2 <TIM2_CLK_Configuration+0x2c>
    16d0:	45 c0       	rjmp	.+138    	; 0x175c <TIM2_CLK_Configuration+0xb6>
    16d2:	08 95       	ret
    16d4:	80 81       	ld	r24, Z
    16d6:	8b 7f       	andi	r24, 0xFB	; 251
    16d8:	80 83       	st	Z, r24
    16da:	ef e6       	ldi	r30, 0x6F	; 111
    16dc:	f1 e0       	ldi	r31, 0x01	; 1
    16de:	a0 85       	ldd	r26, Z+8	; 0x08
    16e0:	b1 85       	ldd	r27, Z+9	; 0x09
    16e2:	8c 91       	ld	r24, X
    16e4:	8d 7f       	andi	r24, 0xFD	; 253
    16e6:	8c 93       	st	X, r24
    16e8:	00 84       	ldd	r0, Z+8	; 0x08
    16ea:	f1 85       	ldd	r31, Z+9	; 0x09
    16ec:	e0 2d       	mov	r30, r0
    16ee:	80 81       	ld	r24, Z
    16f0:	81 60       	ori	r24, 0x01	; 1
    16f2:	80 83       	st	Z, r24
    16f4:	08 95       	ret
    16f6:	80 81       	ld	r24, Z
    16f8:	8b 7f       	andi	r24, 0xFB	; 251
    16fa:	80 83       	st	Z, r24
    16fc:	ef e6       	ldi	r30, 0x6F	; 111
    16fe:	f1 e0       	ldi	r31, 0x01	; 1
    1700:	a0 85       	ldd	r26, Z+8	; 0x08
    1702:	b1 85       	ldd	r27, Z+9	; 0x09
    1704:	8c 91       	ld	r24, X
    1706:	82 60       	ori	r24, 0x02	; 2
    1708:	8c 93       	st	X, r24
    170a:	00 84       	ldd	r0, Z+8	; 0x08
    170c:	f1 85       	ldd	r31, Z+9	; 0x09
    170e:	e0 2d       	mov	r30, r0
    1710:	80 81       	ld	r24, Z
    1712:	8e 7f       	andi	r24, 0xFE	; 254
    1714:	80 83       	st	Z, r24
    1716:	08 95       	ret
    1718:	80 81       	ld	r24, Z
    171a:	8b 7f       	andi	r24, 0xFB	; 251
    171c:	80 83       	st	Z, r24
    171e:	ef e6       	ldi	r30, 0x6F	; 111
    1720:	f1 e0       	ldi	r31, 0x01	; 1
    1722:	a0 85       	ldd	r26, Z+8	; 0x08
    1724:	b1 85       	ldd	r27, Z+9	; 0x09
    1726:	8c 91       	ld	r24, X
    1728:	82 60       	ori	r24, 0x02	; 2
    172a:	8c 93       	st	X, r24
    172c:	00 84       	ldd	r0, Z+8	; 0x08
    172e:	f1 85       	ldd	r31, Z+9	; 0x09
    1730:	e0 2d       	mov	r30, r0
    1732:	80 81       	ld	r24, Z
    1734:	81 60       	ori	r24, 0x01	; 1
    1736:	80 83       	st	Z, r24
    1738:	08 95       	ret
    173a:	80 81       	ld	r24, Z
    173c:	84 60       	ori	r24, 0x04	; 4
    173e:	80 83       	st	Z, r24
    1740:	ef e6       	ldi	r30, 0x6F	; 111
    1742:	f1 e0       	ldi	r31, 0x01	; 1
    1744:	a0 85       	ldd	r26, Z+8	; 0x08
    1746:	b1 85       	ldd	r27, Z+9	; 0x09
    1748:	8c 91       	ld	r24, X
    174a:	8d 7f       	andi	r24, 0xFD	; 253
    174c:	8c 93       	st	X, r24
    174e:	00 84       	ldd	r0, Z+8	; 0x08
    1750:	f1 85       	ldd	r31, Z+9	; 0x09
    1752:	e0 2d       	mov	r30, r0
    1754:	80 81       	ld	r24, Z
    1756:	8e 7f       	andi	r24, 0xFE	; 254
    1758:	80 83       	st	Z, r24
    175a:	08 95       	ret
    175c:	80 81       	ld	r24, Z
    175e:	84 60       	ori	r24, 0x04	; 4
    1760:	80 83       	st	Z, r24
    1762:	ef e6       	ldi	r30, 0x6F	; 111
    1764:	f1 e0       	ldi	r31, 0x01	; 1
    1766:	a0 85       	ldd	r26, Z+8	; 0x08
    1768:	b1 85       	ldd	r27, Z+9	; 0x09
    176a:	8c 91       	ld	r24, X
    176c:	8d 7f       	andi	r24, 0xFD	; 253
    176e:	8c 93       	st	X, r24
    1770:	00 84       	ldd	r0, Z+8	; 0x08
    1772:	f1 85       	ldd	r31, Z+9	; 0x09
    1774:	e0 2d       	mov	r30, r0
    1776:	80 81       	ld	r24, Z
    1778:	81 60       	ori	r24, 0x01	; 1
    177a:	80 83       	st	Z, r24
    177c:	08 95       	ret

0000177e <TIM8_OC_Start>:
    177e:	fc 01       	movw	r30, r24
    1780:	20 81       	ld	r18, Z
    1782:	22 23       	and	r18, r18
    1784:	89 f0       	breq	.+34     	; 0x17a8 <TIM8_OC_Start+0x2a>
    1786:	22 30       	cpi	r18, 0x02	; 2
    1788:	59 f4       	brne	.+22     	; 0x17a0 <TIM8_OC_Start+0x22>
    178a:	a7 e7       	ldi	r26, 0x77	; 119
    178c:	b1 e0       	ldi	r27, 0x01	; 1
    178e:	0e c0       	rjmp	.+28     	; 0x17ac <TIM8_OC_Start+0x2e>
    1790:	cf 01       	movw	r24, r30
    1792:	f7 de       	rcall	.-530    	; 0x1582 <TIM0_CLK_Configuration>
    1794:	80 e0       	ldi	r24, 0x00	; 0
    1796:	08 95       	ret
    1798:	cf 01       	movw	r24, r30
    179a:	85 df       	rcall	.-246    	; 0x16a6 <TIM2_CLK_Configuration>
    179c:	80 e0       	ldi	r24, 0x00	; 0
    179e:	08 95       	ret
    17a0:	81 e0       	ldi	r24, 0x01	; 1
    17a2:	08 95       	ret
    17a4:	80 e0       	ldi	r24, 0x00	; 0
    17a6:	08 95       	ret
    17a8:	af e6       	ldi	r26, 0x6F	; 111
    17aa:	b1 e0       	ldi	r27, 0x01	; 1
    17ac:	fc 01       	movw	r30, r24
    17ae:	12 96       	adiw	r26, 0x02	; 2
    17b0:	0d 90       	ld	r0, X+
    17b2:	bc 91       	ld	r27, X
    17b4:	a0 2d       	mov	r26, r0
    17b6:	83 81       	ldd	r24, Z+3	; 0x03
    17b8:	8c 93       	st	X, r24
    17ba:	80 81       	ld	r24, Z
    17bc:	88 23       	and	r24, r24
    17be:	41 f3       	breq	.-48     	; 0x1790 <TIM8_OC_Start+0x12>
    17c0:	82 30       	cpi	r24, 0x02	; 2
    17c2:	51 f3       	breq	.-44     	; 0x1798 <TIM8_OC_Start+0x1a>
    17c4:	ef cf       	rjmp	.-34     	; 0x17a4 <TIM8_OC_Start+0x26>

000017c6 <TIM1_CLK_Configuration>:
    17c6:	e0 91 45 01 	lds	r30, 0x0145	; 0x800145 <TIM16_descripter+0x2>
    17ca:	f0 91 46 01 	lds	r31, 0x0146	; 0x800146 <TIM16_descripter+0x3>
    17ce:	20 81       	ld	r18, Z
    17d0:	20 81       	ld	r18, Z
    17d2:	dc 01       	movw	r26, r24
    17d4:	12 96       	adiw	r26, 0x02	; 2
    17d6:	8c 91       	ld	r24, X
    17d8:	83 30       	cpi	r24, 0x03	; 3
    17da:	71 f1       	breq	.+92     	; 0x1838 <TIM1_CLK_Configuration+0x72>
    17dc:	28 f4       	brcc	.+10     	; 0x17e8 <TIM1_CLK_Configuration+0x22>
    17de:	88 23       	and	r24, r24
    17e0:	49 f0       	breq	.+18     	; 0x17f4 <TIM1_CLK_Configuration+0x2e>
    17e2:	81 30       	cpi	r24, 0x01	; 1
    17e4:	c1 f0       	breq	.+48     	; 0x1816 <TIM1_CLK_Configuration+0x50>
    17e6:	08 95       	ret
    17e8:	85 30       	cpi	r24, 0x05	; 5
    17ea:	b9 f1       	breq	.+110    	; 0x185a <TIM1_CLK_Configuration+0x94>
    17ec:	86 30       	cpi	r24, 0x06	; 6
    17ee:	09 f4       	brne	.+2      	; 0x17f2 <TIM1_CLK_Configuration+0x2c>
    17f0:	45 c0       	rjmp	.+138    	; 0x187c <TIM1_CLK_Configuration+0xb6>
    17f2:	08 95       	ret
    17f4:	80 81       	ld	r24, Z
    17f6:	8b 7f       	andi	r24, 0xFB	; 251
    17f8:	80 83       	st	Z, r24
    17fa:	e3 e4       	ldi	r30, 0x43	; 67
    17fc:	f1 e0       	ldi	r31, 0x01	; 1
    17fe:	a2 81       	ldd	r26, Z+2	; 0x02
    1800:	b3 81       	ldd	r27, Z+3	; 0x03
    1802:	8c 91       	ld	r24, X
    1804:	8d 7f       	andi	r24, 0xFD	; 253
    1806:	8c 93       	st	X, r24
    1808:	02 80       	ldd	r0, Z+2	; 0x02
    180a:	f3 81       	ldd	r31, Z+3	; 0x03
    180c:	e0 2d       	mov	r30, r0
    180e:	80 81       	ld	r24, Z
    1810:	81 60       	ori	r24, 0x01	; 1
    1812:	80 83       	st	Z, r24
    1814:	08 95       	ret
    1816:	80 81       	ld	r24, Z
    1818:	8b 7f       	andi	r24, 0xFB	; 251
    181a:	80 83       	st	Z, r24
    181c:	e3 e4       	ldi	r30, 0x43	; 67
    181e:	f1 e0       	ldi	r31, 0x01	; 1
    1820:	a2 81       	ldd	r26, Z+2	; 0x02
    1822:	b3 81       	ldd	r27, Z+3	; 0x03
    1824:	8c 91       	ld	r24, X
    1826:	82 60       	ori	r24, 0x02	; 2
    1828:	8c 93       	st	X, r24
    182a:	02 80       	ldd	r0, Z+2	; 0x02
    182c:	f3 81       	ldd	r31, Z+3	; 0x03
    182e:	e0 2d       	mov	r30, r0
    1830:	80 81       	ld	r24, Z
    1832:	8e 7f       	andi	r24, 0xFE	; 254
    1834:	80 83       	st	Z, r24
    1836:	08 95       	ret
    1838:	80 81       	ld	r24, Z
    183a:	8b 7f       	andi	r24, 0xFB	; 251
    183c:	80 83       	st	Z, r24
    183e:	e3 e4       	ldi	r30, 0x43	; 67
    1840:	f1 e0       	ldi	r31, 0x01	; 1
    1842:	a2 81       	ldd	r26, Z+2	; 0x02
    1844:	b3 81       	ldd	r27, Z+3	; 0x03
    1846:	8c 91       	ld	r24, X
    1848:	82 60       	ori	r24, 0x02	; 2
    184a:	8c 93       	st	X, r24
    184c:	02 80       	ldd	r0, Z+2	; 0x02
    184e:	f3 81       	ldd	r31, Z+3	; 0x03
    1850:	e0 2d       	mov	r30, r0
    1852:	80 81       	ld	r24, Z
    1854:	81 60       	ori	r24, 0x01	; 1
    1856:	80 83       	st	Z, r24
    1858:	08 95       	ret
    185a:	80 81       	ld	r24, Z
    185c:	84 60       	ori	r24, 0x04	; 4
    185e:	80 83       	st	Z, r24
    1860:	e3 e4       	ldi	r30, 0x43	; 67
    1862:	f1 e0       	ldi	r31, 0x01	; 1
    1864:	a2 81       	ldd	r26, Z+2	; 0x02
    1866:	b3 81       	ldd	r27, Z+3	; 0x03
    1868:	8c 91       	ld	r24, X
    186a:	8d 7f       	andi	r24, 0xFD	; 253
    186c:	8c 93       	st	X, r24
    186e:	02 80       	ldd	r0, Z+2	; 0x02
    1870:	f3 81       	ldd	r31, Z+3	; 0x03
    1872:	e0 2d       	mov	r30, r0
    1874:	80 81       	ld	r24, Z
    1876:	8e 7f       	andi	r24, 0xFE	; 254
    1878:	80 83       	st	Z, r24
    187a:	08 95       	ret
    187c:	80 81       	ld	r24, Z
    187e:	84 60       	ori	r24, 0x04	; 4
    1880:	80 83       	st	Z, r24
    1882:	e3 e4       	ldi	r30, 0x43	; 67
    1884:	f1 e0       	ldi	r31, 0x01	; 1
    1886:	a2 81       	ldd	r26, Z+2	; 0x02
    1888:	b3 81       	ldd	r27, Z+3	; 0x03
    188a:	8c 91       	ld	r24, X
    188c:	8d 7f       	andi	r24, 0xFD	; 253
    188e:	8c 93       	st	X, r24
    1890:	02 80       	ldd	r0, Z+2	; 0x02
    1892:	f3 81       	ldd	r31, Z+3	; 0x03
    1894:	e0 2d       	mov	r30, r0
    1896:	80 81       	ld	r24, Z
    1898:	81 60       	ori	r24, 0x01	; 1
    189a:	80 83       	st	Z, r24
    189c:	08 95       	ret

0000189e <TIM3_CLK_Configuration>:
    189e:	e0 91 5b 01 	lds	r30, 0x015B	; 0x80015b <TIM16_descripter+0x18>
    18a2:	f0 91 5c 01 	lds	r31, 0x015C	; 0x80015c <TIM16_descripter+0x19>
    18a6:	20 81       	ld	r18, Z
    18a8:	20 81       	ld	r18, Z
    18aa:	dc 01       	movw	r26, r24
    18ac:	12 96       	adiw	r26, 0x02	; 2
    18ae:	8c 91       	ld	r24, X
    18b0:	83 30       	cpi	r24, 0x03	; 3
    18b2:	71 f1       	breq	.+92     	; 0x1910 <TIM3_CLK_Configuration+0x72>
    18b4:	28 f4       	brcc	.+10     	; 0x18c0 <TIM3_CLK_Configuration+0x22>
    18b6:	88 23       	and	r24, r24
    18b8:	49 f0       	breq	.+18     	; 0x18cc <TIM3_CLK_Configuration+0x2e>
    18ba:	81 30       	cpi	r24, 0x01	; 1
    18bc:	c1 f0       	breq	.+48     	; 0x18ee <TIM3_CLK_Configuration+0x50>
    18be:	08 95       	ret
    18c0:	85 30       	cpi	r24, 0x05	; 5
    18c2:	b9 f1       	breq	.+110    	; 0x1932 <TIM3_CLK_Configuration+0x94>
    18c4:	86 30       	cpi	r24, 0x06	; 6
    18c6:	09 f4       	brne	.+2      	; 0x18ca <TIM3_CLK_Configuration+0x2c>
    18c8:	45 c0       	rjmp	.+138    	; 0x1954 <TIM3_CLK_Configuration+0xb6>
    18ca:	08 95       	ret
    18cc:	80 81       	ld	r24, Z
    18ce:	8b 7f       	andi	r24, 0xFB	; 251
    18d0:	80 83       	st	Z, r24
    18d2:	e3 e4       	ldi	r30, 0x43	; 67
    18d4:	f1 e0       	ldi	r31, 0x01	; 1
    18d6:	a0 8d       	ldd	r26, Z+24	; 0x18
    18d8:	b1 8d       	ldd	r27, Z+25	; 0x19
    18da:	8c 91       	ld	r24, X
    18dc:	8d 7f       	andi	r24, 0xFD	; 253
    18de:	8c 93       	st	X, r24
    18e0:	00 8c       	ldd	r0, Z+24	; 0x18
    18e2:	f1 8d       	ldd	r31, Z+25	; 0x19
    18e4:	e0 2d       	mov	r30, r0
    18e6:	80 81       	ld	r24, Z
    18e8:	81 60       	ori	r24, 0x01	; 1
    18ea:	80 83       	st	Z, r24
    18ec:	08 95       	ret
    18ee:	80 81       	ld	r24, Z
    18f0:	8b 7f       	andi	r24, 0xFB	; 251
    18f2:	80 83       	st	Z, r24
    18f4:	e3 e4       	ldi	r30, 0x43	; 67
    18f6:	f1 e0       	ldi	r31, 0x01	; 1
    18f8:	a0 8d       	ldd	r26, Z+24	; 0x18
    18fa:	b1 8d       	ldd	r27, Z+25	; 0x19
    18fc:	8c 91       	ld	r24, X
    18fe:	82 60       	ori	r24, 0x02	; 2
    1900:	8c 93       	st	X, r24
    1902:	00 8c       	ldd	r0, Z+24	; 0x18
    1904:	f1 8d       	ldd	r31, Z+25	; 0x19
    1906:	e0 2d       	mov	r30, r0
    1908:	80 81       	ld	r24, Z
    190a:	8e 7f       	andi	r24, 0xFE	; 254
    190c:	80 83       	st	Z, r24
    190e:	08 95       	ret
    1910:	80 81       	ld	r24, Z
    1912:	8b 7f       	andi	r24, 0xFB	; 251
    1914:	80 83       	st	Z, r24
    1916:	e3 e4       	ldi	r30, 0x43	; 67
    1918:	f1 e0       	ldi	r31, 0x01	; 1
    191a:	a0 8d       	ldd	r26, Z+24	; 0x18
    191c:	b1 8d       	ldd	r27, Z+25	; 0x19
    191e:	8c 91       	ld	r24, X
    1920:	82 60       	ori	r24, 0x02	; 2
    1922:	8c 93       	st	X, r24
    1924:	00 8c       	ldd	r0, Z+24	; 0x18
    1926:	f1 8d       	ldd	r31, Z+25	; 0x19
    1928:	e0 2d       	mov	r30, r0
    192a:	80 81       	ld	r24, Z
    192c:	81 60       	ori	r24, 0x01	; 1
    192e:	80 83       	st	Z, r24
    1930:	08 95       	ret
    1932:	80 81       	ld	r24, Z
    1934:	84 60       	ori	r24, 0x04	; 4
    1936:	80 83       	st	Z, r24
    1938:	e3 e4       	ldi	r30, 0x43	; 67
    193a:	f1 e0       	ldi	r31, 0x01	; 1
    193c:	a0 8d       	ldd	r26, Z+24	; 0x18
    193e:	b1 8d       	ldd	r27, Z+25	; 0x19
    1940:	8c 91       	ld	r24, X
    1942:	8d 7f       	andi	r24, 0xFD	; 253
    1944:	8c 93       	st	X, r24
    1946:	00 8c       	ldd	r0, Z+24	; 0x18
    1948:	f1 8d       	ldd	r31, Z+25	; 0x19
    194a:	e0 2d       	mov	r30, r0
    194c:	80 81       	ld	r24, Z
    194e:	8e 7f       	andi	r24, 0xFE	; 254
    1950:	80 83       	st	Z, r24
    1952:	08 95       	ret
    1954:	80 81       	ld	r24, Z
    1956:	84 60       	ori	r24, 0x04	; 4
    1958:	80 83       	st	Z, r24
    195a:	e3 e4       	ldi	r30, 0x43	; 67
    195c:	f1 e0       	ldi	r31, 0x01	; 1
    195e:	a0 8d       	ldd	r26, Z+24	; 0x18
    1960:	b1 8d       	ldd	r27, Z+25	; 0x19
    1962:	8c 91       	ld	r24, X
    1964:	8d 7f       	andi	r24, 0xFD	; 253
    1966:	8c 93       	st	X, r24
    1968:	00 8c       	ldd	r0, Z+24	; 0x18
    196a:	f1 8d       	ldd	r31, Z+25	; 0x19
    196c:	e0 2d       	mov	r30, r0
    196e:	80 81       	ld	r24, Z
    1970:	81 60       	ori	r24, 0x01	; 1
    1972:	80 83       	st	Z, r24
    1974:	08 95       	ret

00001976 <TIM16_OC_Start>:
    1976:	fc 01       	movw	r30, r24
    1978:	90 81       	ld	r25, Z
    197a:	91 30       	cpi	r25, 0x01	; 1
    197c:	19 f0       	breq	.+6      	; 0x1984 <TIM16_OC_Start+0xe>
    197e:	93 30       	cpi	r25, 0x03	; 3
    1980:	29 f0       	breq	.+10     	; 0x198c <TIM16_OC_Start+0x16>
    1982:	08 c0       	rjmp	.+16     	; 0x1994 <TIM16_OC_Start+0x1e>
    1984:	cf 01       	movw	r24, r30
    1986:	1f df       	rcall	.-450    	; 0x17c6 <TIM1_CLK_Configuration>
    1988:	80 e0       	ldi	r24, 0x00	; 0
    198a:	08 95       	ret
    198c:	cf 01       	movw	r24, r30
    198e:	87 df       	rcall	.-242    	; 0x189e <TIM3_CLK_Configuration>
    1990:	80 e0       	ldi	r24, 0x00	; 0
    1992:	08 95       	ret
    1994:	81 e0       	ldi	r24, 0x01	; 1
    1996:	08 95       	ret

00001998 <TIM0_OVF_ElapsedCallback>:
    1998:	08 95       	ret

0000199a <TIM0_OVF_IRQHandler>:
    199a:	fe cf       	rjmp	.-4      	; 0x1998 <TIM0_OVF_ElapsedCallback>
    199c:	08 95       	ret

0000199e <TIM2_OVF_ElapsedCallback>:
    199e:	08 95       	ret

000019a0 <TIM2_OVF_IRQHandler>:
    19a0:	fe cf       	rjmp	.-4      	; 0x199e <TIM2_OVF_ElapsedCallback>
    19a2:	08 95       	ret

000019a4 <TIM0_OC_ElapsedCallback>:
{
	UNUSED(htim);
}

__attribute__((weak)) void TIM0_OC_ElapsedCallback(TIM8_HandleTypeDef *htim)
{
    19a4:	08 95       	ret

000019a6 <TIM0_OC_IRQHandler>:
	TIM3_OVF_ElapsedCallback(htim);
}

void TIM0_OC_IRQHandler(TIM8_HandleTypeDef *htim)
{
	TIM0_OC_ElapsedCallback(htim);	
    19a6:	fe cf       	rjmp	.-4      	; 0x19a4 <TIM0_OC_ElapsedCallback>
    19a8:	08 95       	ret

000019aa <TIM2_OC_ElapsedCallback>:
{
	UNUSED(htim);
}

__attribute__((weak)) void TIM2_OC_ElapsedCallback(TIM8_HandleTypeDef *htim)
{
    19aa:	08 95       	ret

000019ac <TIM2_OC_IRQHandler>:
	TIM0_OC_ElapsedCallback(htim);	
}

void TIM2_OC_IRQHandler(TIM8_HandleTypeDef *htim)
{
	TIM2_OC_ElapsedCallback(htim);
    19ac:	fe cf       	rjmp	.-4      	; 0x19aa <TIM2_OC_ElapsedCallback>
    19ae:	08 95       	ret

000019b0 <UART_Init>:
{
	UNUSED(huart);
}

__attribute__((weak)) void UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
    19b0:	cf 92       	push	r12
    19b2:	df 92       	push	r13
    19b4:	ef 92       	push	r14
    19b6:	ff 92       	push	r15
    19b8:	0f 93       	push	r16
    19ba:	1f 93       	push	r17
    19bc:	cf 93       	push	r28
    19be:	df 93       	push	r29
    19c0:	fc 01       	movw	r30, r24
    19c2:	c0 81       	ld	r28, Z
    19c4:	d0 e0       	ldi	r29, 0x00	; 0
    19c6:	00 97       	sbiw	r24, 0x00	; 0
    19c8:	09 f4       	brne	.+2      	; 0x19cc <UART_Init+0x1c>
    19ca:	e3 c1       	rjmp	.+966    	; 0x1d92 <UART_Init+0x3e2>
    19cc:	8c 01       	movw	r16, r24
    19ce:	81 85       	ldd	r24, Z+9	; 0x09
    19d0:	88 23       	and	r24, r24
    19d2:	21 f0       	breq	.+8      	; 0x19dc <UART_Init+0x2c>
    19d4:	81 30       	cpi	r24, 0x01	; 1
    19d6:	09 f4       	brne	.+2      	; 0x19da <UART_Init+0x2a>
    19d8:	41 c0       	rjmp	.+130    	; 0x1a5c <UART_Init+0xac>
    19da:	7b c0       	rjmp	.+246    	; 0x1ad2 <UART_Init+0x122>
    19dc:	81 81       	ldd	r24, Z+1	; 0x01
    19de:	92 81       	ldd	r25, Z+2	; 0x02
    19e0:	a3 81       	ldd	r26, Z+3	; 0x03
    19e2:	b4 81       	ldd	r27, Z+4	; 0x04
    19e4:	88 0f       	add	r24, r24
    19e6:	99 1f       	adc	r25, r25
    19e8:	aa 1f       	adc	r26, r26
    19ea:	bb 1f       	adc	r27, r27
    19ec:	88 0f       	add	r24, r24
    19ee:	99 1f       	adc	r25, r25
    19f0:	aa 1f       	adc	r26, r26
    19f2:	bb 1f       	adc	r27, r27
    19f4:	bc 01       	movw	r22, r24
    19f6:	cd 01       	movw	r24, r26
    19f8:	66 0f       	add	r22, r22
    19fa:	77 1f       	adc	r23, r23
    19fc:	88 1f       	adc	r24, r24
    19fe:	99 1f       	adc	r25, r25
    1a00:	66 0f       	add	r22, r22
    1a02:	77 1f       	adc	r23, r23
    1a04:	88 1f       	adc	r24, r24
    1a06:	99 1f       	adc	r25, r25
    1a08:	d9 d3       	rcall	.+1970   	; 0x21bc <__floatunsisf>
    1a0a:	9b 01       	movw	r18, r22
    1a0c:	ac 01       	movw	r20, r24
    1a0e:	60 e0       	ldi	r22, 0x00	; 0
    1a10:	74 e2       	ldi	r23, 0x24	; 36
    1a12:	84 e7       	ldi	r24, 0x74	; 116
    1a14:	9b e4       	ldi	r25, 0x4B	; 75
    1a16:	3e d3       	rcall	.+1660   	; 0x2094 <__divsf3>
    1a18:	20 e0       	ldi	r18, 0x00	; 0
    1a1a:	30 e0       	ldi	r19, 0x00	; 0
    1a1c:	40 e0       	ldi	r20, 0x00	; 0
    1a1e:	5f e3       	ldi	r21, 0x3F	; 63
    1a20:	d4 d2       	rcall	.+1448   	; 0x1fca <__subsf3>
    1a22:	a0 d3       	rcall	.+1856   	; 0x2164 <__fixunssfsi>
    1a24:	fe 01       	movw	r30, r28
    1a26:	ee 0f       	add	r30, r30
    1a28:	ff 1f       	adc	r31, r31
    1a2a:	ec 0f       	add	r30, r28
    1a2c:	fd 1f       	adc	r31, r29
    1a2e:	ee 0f       	add	r30, r30
    1a30:	ff 1f       	adc	r31, r31
    1a32:	ee 0f       	add	r30, r30
    1a34:	ff 1f       	adc	r31, r31
    1a36:	e1 58       	subi	r30, 0x81	; 129
    1a38:	fe 4f       	sbci	r31, 0xFE	; 254
    1a3a:	a0 85       	ldd	r26, Z+8	; 0x08
    1a3c:	b1 85       	ldd	r27, Z+9	; 0x09
    1a3e:	c7 2e       	mov	r12, r23
    1a40:	d8 2e       	mov	r13, r24
    1a42:	e9 2e       	mov	r14, r25
    1a44:	ff 24       	eor	r15, r15
    1a46:	cc 92       	st	X, r12
    1a48:	a2 85       	ldd	r26, Z+10	; 0x0a
    1a4a:	b3 85       	ldd	r27, Z+11	; 0x0b
    1a4c:	6c 93       	st	X, r22
    1a4e:	02 80       	ldd	r0, Z+2	; 0x02
    1a50:	f3 81       	ldd	r31, Z+3	; 0x03
    1a52:	e0 2d       	mov	r30, r0
    1a54:	80 81       	ld	r24, Z
    1a56:	8d 7f       	andi	r24, 0xFD	; 253
    1a58:	80 83       	st	Z, r24
    1a5a:	3b c0       	rjmp	.+118    	; 0x1ad2 <UART_Init+0x122>
    1a5c:	81 81       	ldd	r24, Z+1	; 0x01
    1a5e:	92 81       	ldd	r25, Z+2	; 0x02
    1a60:	a3 81       	ldd	r26, Z+3	; 0x03
    1a62:	b4 81       	ldd	r27, Z+4	; 0x04
    1a64:	88 0f       	add	r24, r24
    1a66:	99 1f       	adc	r25, r25
    1a68:	aa 1f       	adc	r26, r26
    1a6a:	bb 1f       	adc	r27, r27
    1a6c:	88 0f       	add	r24, r24
    1a6e:	99 1f       	adc	r25, r25
    1a70:	aa 1f       	adc	r26, r26
    1a72:	bb 1f       	adc	r27, r27
    1a74:	bc 01       	movw	r22, r24
    1a76:	cd 01       	movw	r24, r26
    1a78:	66 0f       	add	r22, r22
    1a7a:	77 1f       	adc	r23, r23
    1a7c:	88 1f       	adc	r24, r24
    1a7e:	99 1f       	adc	r25, r25
    1a80:	9d d3       	rcall	.+1850   	; 0x21bc <__floatunsisf>
    1a82:	9b 01       	movw	r18, r22
    1a84:	ac 01       	movw	r20, r24
    1a86:	60 e0       	ldi	r22, 0x00	; 0
    1a88:	74 e2       	ldi	r23, 0x24	; 36
    1a8a:	84 e7       	ldi	r24, 0x74	; 116
    1a8c:	9b e4       	ldi	r25, 0x4B	; 75
    1a8e:	02 d3       	rcall	.+1540   	; 0x2094 <__divsf3>
    1a90:	20 e0       	ldi	r18, 0x00	; 0
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	40 e0       	ldi	r20, 0x00	; 0
    1a96:	5f e3       	ldi	r21, 0x3F	; 63
    1a98:	98 d2       	rcall	.+1328   	; 0x1fca <__subsf3>
    1a9a:	64 d3       	rcall	.+1736   	; 0x2164 <__fixunssfsi>
    1a9c:	fe 01       	movw	r30, r28
    1a9e:	ee 0f       	add	r30, r30
    1aa0:	ff 1f       	adc	r31, r31
    1aa2:	ec 0f       	add	r30, r28
    1aa4:	fd 1f       	adc	r31, r29
    1aa6:	ee 0f       	add	r30, r30
    1aa8:	ff 1f       	adc	r31, r31
    1aaa:	ee 0f       	add	r30, r30
    1aac:	ff 1f       	adc	r31, r31
    1aae:	e1 58       	subi	r30, 0x81	; 129
    1ab0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ab2:	a0 85       	ldd	r26, Z+8	; 0x08
    1ab4:	b1 85       	ldd	r27, Z+9	; 0x09
    1ab6:	c7 2e       	mov	r12, r23
    1ab8:	d8 2e       	mov	r13, r24
    1aba:	e9 2e       	mov	r14, r25
    1abc:	ff 24       	eor	r15, r15
    1abe:	cc 92       	st	X, r12
    1ac0:	a2 85       	ldd	r26, Z+10	; 0x0a
    1ac2:	b3 85       	ldd	r27, Z+11	; 0x0b
    1ac4:	6c 93       	st	X, r22
    1ac6:	02 80       	ldd	r0, Z+2	; 0x02
    1ac8:	f3 81       	ldd	r31, Z+3	; 0x03
    1aca:	e0 2d       	mov	r30, r0
    1acc:	80 81       	ld	r24, Z
    1ace:	82 60       	ori	r24, 0x02	; 2
    1ad0:	80 83       	st	Z, r24
    1ad2:	f8 01       	movw	r30, r16
    1ad4:	85 81       	ldd	r24, Z+5	; 0x05
    1ad6:	82 30       	cpi	r24, 0x02	; 2
    1ad8:	09 f4       	brne	.+2      	; 0x1adc <UART_Init+0x12c>
    1ada:	45 c0       	rjmp	.+138    	; 0x1b66 <UART_Init+0x1b6>
    1adc:	28 f4       	brcc	.+10     	; 0x1ae8 <UART_Init+0x138>
    1ade:	88 23       	and	r24, r24
    1ae0:	51 f0       	breq	.+20     	; 0x1af6 <UART_Init+0x146>
    1ae2:	81 30       	cpi	r24, 0x01	; 1
    1ae4:	21 f1       	breq	.+72     	; 0x1b2e <UART_Init+0x17e>
    1ae6:	92 c0       	rjmp	.+292    	; 0x1c0c <UART_Init+0x25c>
    1ae8:	83 30       	cpi	r24, 0x03	; 3
    1aea:	09 f4       	brne	.+2      	; 0x1aee <UART_Init+0x13e>
    1aec:	58 c0       	rjmp	.+176    	; 0x1b9e <UART_Init+0x1ee>
    1aee:	84 30       	cpi	r24, 0x04	; 4
    1af0:	09 f4       	brne	.+2      	; 0x1af4 <UART_Init+0x144>
    1af2:	71 c0       	rjmp	.+226    	; 0x1bd6 <UART_Init+0x226>
    1af4:	8b c0       	rjmp	.+278    	; 0x1c0c <UART_Init+0x25c>
    1af6:	fe 01       	movw	r30, r28
    1af8:	ee 0f       	add	r30, r30
    1afa:	ff 1f       	adc	r31, r31
    1afc:	ec 0f       	add	r30, r28
    1afe:	fd 1f       	adc	r31, r29
    1b00:	ee 0f       	add	r30, r30
    1b02:	ff 1f       	adc	r31, r31
    1b04:	ee 0f       	add	r30, r30
    1b06:	ff 1f       	adc	r31, r31
    1b08:	e1 58       	subi	r30, 0x81	; 129
    1b0a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b0c:	a4 81       	ldd	r26, Z+4	; 0x04
    1b0e:	b5 81       	ldd	r27, Z+5	; 0x05
    1b10:	8c 91       	ld	r24, X
    1b12:	8b 7f       	andi	r24, 0xFB	; 251
    1b14:	8c 93       	st	X, r24
    1b16:	a6 81       	ldd	r26, Z+6	; 0x06
    1b18:	b7 81       	ldd	r27, Z+7	; 0x07
    1b1a:	8c 91       	ld	r24, X
    1b1c:	84 60       	ori	r24, 0x04	; 4
    1b1e:	8c 93       	st	X, r24
    1b20:	06 80       	ldd	r0, Z+6	; 0x06
    1b22:	f7 81       	ldd	r31, Z+7	; 0x07
    1b24:	e0 2d       	mov	r30, r0
    1b26:	80 81       	ld	r24, Z
    1b28:	82 60       	ori	r24, 0x02	; 2
    1b2a:	80 83       	st	Z, r24
    1b2c:	6f c0       	rjmp	.+222    	; 0x1c0c <UART_Init+0x25c>
    1b2e:	fe 01       	movw	r30, r28
    1b30:	ee 0f       	add	r30, r30
    1b32:	ff 1f       	adc	r31, r31
    1b34:	ec 0f       	add	r30, r28
    1b36:	fd 1f       	adc	r31, r29
    1b38:	ee 0f       	add	r30, r30
    1b3a:	ff 1f       	adc	r31, r31
    1b3c:	ee 0f       	add	r30, r30
    1b3e:	ff 1f       	adc	r31, r31
    1b40:	e1 58       	subi	r30, 0x81	; 129
    1b42:	fe 4f       	sbci	r31, 0xFE	; 254
    1b44:	a4 81       	ldd	r26, Z+4	; 0x04
    1b46:	b5 81       	ldd	r27, Z+5	; 0x05
    1b48:	8c 91       	ld	r24, X
    1b4a:	8b 7f       	andi	r24, 0xFB	; 251
    1b4c:	8c 93       	st	X, r24
    1b4e:	a6 81       	ldd	r26, Z+6	; 0x06
    1b50:	b7 81       	ldd	r27, Z+7	; 0x07
    1b52:	8c 91       	ld	r24, X
    1b54:	8b 7f       	andi	r24, 0xFB	; 251
    1b56:	8c 93       	st	X, r24
    1b58:	06 80       	ldd	r0, Z+6	; 0x06
    1b5a:	f7 81       	ldd	r31, Z+7	; 0x07
    1b5c:	e0 2d       	mov	r30, r0
    1b5e:	80 81       	ld	r24, Z
    1b60:	8d 7f       	andi	r24, 0xFD	; 253
    1b62:	80 83       	st	Z, r24
    1b64:	53 c0       	rjmp	.+166    	; 0x1c0c <UART_Init+0x25c>
    1b66:	fe 01       	movw	r30, r28
    1b68:	ee 0f       	add	r30, r30
    1b6a:	ff 1f       	adc	r31, r31
    1b6c:	ec 0f       	add	r30, r28
    1b6e:	fd 1f       	adc	r31, r29
    1b70:	ee 0f       	add	r30, r30
    1b72:	ff 1f       	adc	r31, r31
    1b74:	ee 0f       	add	r30, r30
    1b76:	ff 1f       	adc	r31, r31
    1b78:	e1 58       	subi	r30, 0x81	; 129
    1b7a:	fe 4f       	sbci	r31, 0xFE	; 254
    1b7c:	a4 81       	ldd	r26, Z+4	; 0x04
    1b7e:	b5 81       	ldd	r27, Z+5	; 0x05
    1b80:	8c 91       	ld	r24, X
    1b82:	8b 7f       	andi	r24, 0xFB	; 251
    1b84:	8c 93       	st	X, r24
    1b86:	a6 81       	ldd	r26, Z+6	; 0x06
    1b88:	b7 81       	ldd	r27, Z+7	; 0x07
    1b8a:	8c 91       	ld	r24, X
    1b8c:	8b 7f       	andi	r24, 0xFB	; 251
    1b8e:	8c 93       	st	X, r24
    1b90:	06 80       	ldd	r0, Z+6	; 0x06
    1b92:	f7 81       	ldd	r31, Z+7	; 0x07
    1b94:	e0 2d       	mov	r30, r0
    1b96:	80 81       	ld	r24, Z
    1b98:	82 60       	ori	r24, 0x02	; 2
    1b9a:	80 83       	st	Z, r24
    1b9c:	37 c0       	rjmp	.+110    	; 0x1c0c <UART_Init+0x25c>
    1b9e:	fe 01       	movw	r30, r28
    1ba0:	ee 0f       	add	r30, r30
    1ba2:	ff 1f       	adc	r31, r31
    1ba4:	ec 0f       	add	r30, r28
    1ba6:	fd 1f       	adc	r31, r29
    1ba8:	ee 0f       	add	r30, r30
    1baa:	ff 1f       	adc	r31, r31
    1bac:	ee 0f       	add	r30, r30
    1bae:	ff 1f       	adc	r31, r31
    1bb0:	e1 58       	subi	r30, 0x81	; 129
    1bb2:	fe 4f       	sbci	r31, 0xFE	; 254
    1bb4:	a4 81       	ldd	r26, Z+4	; 0x04
    1bb6:	b5 81       	ldd	r27, Z+5	; 0x05
    1bb8:	8c 91       	ld	r24, X
    1bba:	8b 7f       	andi	r24, 0xFB	; 251
    1bbc:	8c 93       	st	X, r24
    1bbe:	a6 81       	ldd	r26, Z+6	; 0x06
    1bc0:	b7 81       	ldd	r27, Z+7	; 0x07
    1bc2:	8c 91       	ld	r24, X
    1bc4:	84 60       	ori	r24, 0x04	; 4
    1bc6:	8c 93       	st	X, r24
    1bc8:	06 80       	ldd	r0, Z+6	; 0x06
    1bca:	f7 81       	ldd	r31, Z+7	; 0x07
    1bcc:	e0 2d       	mov	r30, r0
    1bce:	80 81       	ld	r24, Z
    1bd0:	8d 7f       	andi	r24, 0xFD	; 253
    1bd2:	80 83       	st	Z, r24
    1bd4:	1b c0       	rjmp	.+54     	; 0x1c0c <UART_Init+0x25c>
    1bd6:	fe 01       	movw	r30, r28
    1bd8:	ee 0f       	add	r30, r30
    1bda:	ff 1f       	adc	r31, r31
    1bdc:	ec 0f       	add	r30, r28
    1bde:	fd 1f       	adc	r31, r29
    1be0:	ee 0f       	add	r30, r30
    1be2:	ff 1f       	adc	r31, r31
    1be4:	ee 0f       	add	r30, r30
    1be6:	ff 1f       	adc	r31, r31
    1be8:	e1 58       	subi	r30, 0x81	; 129
    1bea:	fe 4f       	sbci	r31, 0xFE	; 254
    1bec:	a4 81       	ldd	r26, Z+4	; 0x04
    1bee:	b5 81       	ldd	r27, Z+5	; 0x05
    1bf0:	8c 91       	ld	r24, X
    1bf2:	84 60       	ori	r24, 0x04	; 4
    1bf4:	8c 93       	st	X, r24
    1bf6:	a6 81       	ldd	r26, Z+6	; 0x06
    1bf8:	b7 81       	ldd	r27, Z+7	; 0x07
    1bfa:	8c 91       	ld	r24, X
    1bfc:	84 60       	ori	r24, 0x04	; 4
    1bfe:	8c 93       	st	X, r24
    1c00:	06 80       	ldd	r0, Z+6	; 0x06
    1c02:	f7 81       	ldd	r31, Z+7	; 0x07
    1c04:	e0 2d       	mov	r30, r0
    1c06:	80 81       	ld	r24, Z
    1c08:	82 60       	ori	r24, 0x02	; 2
    1c0a:	80 83       	st	Z, r24
    1c0c:	f8 01       	movw	r30, r16
    1c0e:	86 81       	ldd	r24, Z+6	; 0x06
    1c10:	88 23       	and	r24, r24
    1c12:	19 f0       	breq	.+6      	; 0x1c1a <UART_Init+0x26a>
    1c14:	81 30       	cpi	r24, 0x01	; 1
    1c16:	99 f0       	breq	.+38     	; 0x1c3e <UART_Init+0x28e>
    1c18:	23 c0       	rjmp	.+70     	; 0x1c60 <UART_Init+0x2b0>
    1c1a:	fe 01       	movw	r30, r28
    1c1c:	ee 0f       	add	r30, r30
    1c1e:	ff 1f       	adc	r31, r31
    1c20:	ec 0f       	add	r30, r28
    1c22:	fd 1f       	adc	r31, r29
    1c24:	ee 0f       	add	r30, r30
    1c26:	ff 1f       	adc	r31, r31
    1c28:	ee 0f       	add	r30, r30
    1c2a:	ff 1f       	adc	r31, r31
    1c2c:	e1 58       	subi	r30, 0x81	; 129
    1c2e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c30:	06 80       	ldd	r0, Z+6	; 0x06
    1c32:	f7 81       	ldd	r31, Z+7	; 0x07
    1c34:	e0 2d       	mov	r30, r0
    1c36:	80 81       	ld	r24, Z
    1c38:	8f 7e       	andi	r24, 0xEF	; 239
    1c3a:	80 83       	st	Z, r24
    1c3c:	11 c0       	rjmp	.+34     	; 0x1c60 <UART_Init+0x2b0>
    1c3e:	fe 01       	movw	r30, r28
    1c40:	ee 0f       	add	r30, r30
    1c42:	ff 1f       	adc	r31, r31
    1c44:	ec 0f       	add	r30, r28
    1c46:	fd 1f       	adc	r31, r29
    1c48:	ee 0f       	add	r30, r30
    1c4a:	ff 1f       	adc	r31, r31
    1c4c:	ee 0f       	add	r30, r30
    1c4e:	ff 1f       	adc	r31, r31
    1c50:	e1 58       	subi	r30, 0x81	; 129
    1c52:	fe 4f       	sbci	r31, 0xFE	; 254
    1c54:	06 80       	ldd	r0, Z+6	; 0x06
    1c56:	f7 81       	ldd	r31, Z+7	; 0x07
    1c58:	e0 2d       	mov	r30, r0
    1c5a:	80 81       	ld	r24, Z
    1c5c:	80 61       	ori	r24, 0x10	; 16
    1c5e:	80 83       	st	Z, r24
    1c60:	f8 01       	movw	r30, r16
    1c62:	87 81       	ldd	r24, Z+7	; 0x07
    1c64:	81 30       	cpi	r24, 0x01	; 1
    1c66:	d9 f0       	breq	.+54     	; 0x1c9e <UART_Init+0x2ee>
    1c68:	18 f0       	brcs	.+6      	; 0x1c70 <UART_Init+0x2c0>
    1c6a:	82 30       	cpi	r24, 0x02	; 2
    1c6c:	79 f1       	breq	.+94     	; 0x1ccc <UART_Init+0x31c>
    1c6e:	44 c0       	rjmp	.+136    	; 0x1cf8 <UART_Init+0x348>
    1c70:	fe 01       	movw	r30, r28
    1c72:	ee 0f       	add	r30, r30
    1c74:	ff 1f       	adc	r31, r31
    1c76:	ec 0f       	add	r30, r28
    1c78:	fd 1f       	adc	r31, r29
    1c7a:	ee 0f       	add	r30, r30
    1c7c:	ff 1f       	adc	r31, r31
    1c7e:	ee 0f       	add	r30, r30
    1c80:	ff 1f       	adc	r31, r31
    1c82:	e1 58       	subi	r30, 0x81	; 129
    1c84:	fe 4f       	sbci	r31, 0xFE	; 254
    1c86:	a6 81       	ldd	r26, Z+6	; 0x06
    1c88:	b7 81       	ldd	r27, Z+7	; 0x07
    1c8a:	8c 91       	ld	r24, X
    1c8c:	8f 7b       	andi	r24, 0xBF	; 191
    1c8e:	8c 93       	st	X, r24
    1c90:	06 80       	ldd	r0, Z+6	; 0x06
    1c92:	f7 81       	ldd	r31, Z+7	; 0x07
    1c94:	e0 2d       	mov	r30, r0
    1c96:	80 81       	ld	r24, Z
    1c98:	8f 7d       	andi	r24, 0xDF	; 223
    1c9a:	80 83       	st	Z, r24
    1c9c:	2d c0       	rjmp	.+90     	; 0x1cf8 <UART_Init+0x348>
    1c9e:	fe 01       	movw	r30, r28
    1ca0:	ee 0f       	add	r30, r30
    1ca2:	ff 1f       	adc	r31, r31
    1ca4:	ec 0f       	add	r30, r28
    1ca6:	fd 1f       	adc	r31, r29
    1ca8:	ee 0f       	add	r30, r30
    1caa:	ff 1f       	adc	r31, r31
    1cac:	ee 0f       	add	r30, r30
    1cae:	ff 1f       	adc	r31, r31
    1cb0:	e1 58       	subi	r30, 0x81	; 129
    1cb2:	fe 4f       	sbci	r31, 0xFE	; 254
    1cb4:	a6 81       	ldd	r26, Z+6	; 0x06
    1cb6:	b7 81       	ldd	r27, Z+7	; 0x07
    1cb8:	8c 91       	ld	r24, X
    1cba:	80 64       	ori	r24, 0x40	; 64
    1cbc:	8c 93       	st	X, r24
    1cbe:	06 80       	ldd	r0, Z+6	; 0x06
    1cc0:	f7 81       	ldd	r31, Z+7	; 0x07
    1cc2:	e0 2d       	mov	r30, r0
    1cc4:	80 81       	ld	r24, Z
    1cc6:	8f 7d       	andi	r24, 0xDF	; 223
    1cc8:	80 83       	st	Z, r24
    1cca:	16 c0       	rjmp	.+44     	; 0x1cf8 <UART_Init+0x348>
    1ccc:	fe 01       	movw	r30, r28
    1cce:	ee 0f       	add	r30, r30
    1cd0:	ff 1f       	adc	r31, r31
    1cd2:	ec 0f       	add	r30, r28
    1cd4:	fd 1f       	adc	r31, r29
    1cd6:	ee 0f       	add	r30, r30
    1cd8:	ff 1f       	adc	r31, r31
    1cda:	ee 0f       	add	r30, r30
    1cdc:	ff 1f       	adc	r31, r31
    1cde:	e1 58       	subi	r30, 0x81	; 129
    1ce0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ce2:	a6 81       	ldd	r26, Z+6	; 0x06
    1ce4:	b7 81       	ldd	r27, Z+7	; 0x07
    1ce6:	8c 91       	ld	r24, X
    1ce8:	80 64       	ori	r24, 0x40	; 64
    1cea:	8c 93       	st	X, r24
    1cec:	06 80       	ldd	r0, Z+6	; 0x06
    1cee:	f7 81       	ldd	r31, Z+7	; 0x07
    1cf0:	e0 2d       	mov	r30, r0
    1cf2:	80 81       	ld	r24, Z
    1cf4:	80 62       	ori	r24, 0x20	; 32
    1cf6:	80 83       	st	Z, r24
    1cf8:	f8 01       	movw	r30, r16
    1cfa:	80 85       	ldd	r24, Z+8	; 0x08
    1cfc:	81 30       	cpi	r24, 0x01	; 1
    1cfe:	b1 f0       	breq	.+44     	; 0x1d2c <UART_Init+0x37c>
    1d00:	18 f0       	brcs	.+6      	; 0x1d08 <UART_Init+0x358>
    1d02:	82 30       	cpi	r24, 0x02	; 2
    1d04:	29 f1       	breq	.+74     	; 0x1d50 <UART_Init+0x3a0>
    1d06:	47 c0       	rjmp	.+142    	; 0x1d96 <UART_Init+0x3e6>
    1d08:	ce 01       	movw	r24, r28
    1d0a:	88 0f       	add	r24, r24
    1d0c:	99 1f       	adc	r25, r25
    1d0e:	c8 0f       	add	r28, r24
    1d10:	d9 1f       	adc	r29, r25
    1d12:	cc 0f       	add	r28, r28
    1d14:	dd 1f       	adc	r29, r29
    1d16:	cc 0f       	add	r28, r28
    1d18:	dd 1f       	adc	r29, r29
    1d1a:	c1 58       	subi	r28, 0x81	; 129
    1d1c:	de 4f       	sbci	r29, 0xFE	; 254
    1d1e:	ec 81       	ldd	r30, Y+4	; 0x04
    1d20:	fd 81       	ldd	r31, Y+5	; 0x05
    1d22:	80 81       	ld	r24, Z
    1d24:	80 61       	ori	r24, 0x10	; 16
    1d26:	80 83       	st	Z, r24
    1d28:	80 e0       	ldi	r24, 0x00	; 0
    1d2a:	36 c0       	rjmp	.+108    	; 0x1d98 <UART_Init+0x3e8>
    1d2c:	ce 01       	movw	r24, r28
    1d2e:	88 0f       	add	r24, r24
    1d30:	99 1f       	adc	r25, r25
    1d32:	c8 0f       	add	r28, r24
    1d34:	d9 1f       	adc	r29, r25
    1d36:	cc 0f       	add	r28, r28
    1d38:	dd 1f       	adc	r29, r29
    1d3a:	cc 0f       	add	r28, r28
    1d3c:	dd 1f       	adc	r29, r29
    1d3e:	c1 58       	subi	r28, 0x81	; 129
    1d40:	de 4f       	sbci	r29, 0xFE	; 254
    1d42:	ec 81       	ldd	r30, Y+4	; 0x04
    1d44:	fd 81       	ldd	r31, Y+5	; 0x05
    1d46:	80 81       	ld	r24, Z
    1d48:	88 60       	ori	r24, 0x08	; 8
    1d4a:	80 83       	st	Z, r24
    1d4c:	80 e0       	ldi	r24, 0x00	; 0
    1d4e:	24 c0       	rjmp	.+72     	; 0x1d98 <UART_Init+0x3e8>
    1d50:	9e 01       	movw	r18, r28
    1d52:	22 0f       	add	r18, r18
    1d54:	33 1f       	adc	r19, r19
    1d56:	f9 01       	movw	r30, r18
    1d58:	ec 0f       	add	r30, r28
    1d5a:	fd 1f       	adc	r31, r29
    1d5c:	ee 0f       	add	r30, r30
    1d5e:	ff 1f       	adc	r31, r31
    1d60:	ee 0f       	add	r30, r30
    1d62:	ff 1f       	adc	r31, r31
    1d64:	e1 58       	subi	r30, 0x81	; 129
    1d66:	fe 4f       	sbci	r31, 0xFE	; 254
    1d68:	04 80       	ldd	r0, Z+4	; 0x04
    1d6a:	f5 81       	ldd	r31, Z+5	; 0x05
    1d6c:	e0 2d       	mov	r30, r0
    1d6e:	80 81       	ld	r24, Z
    1d70:	88 60       	ori	r24, 0x08	; 8
    1d72:	80 83       	st	Z, r24
    1d74:	c2 0f       	add	r28, r18
    1d76:	d3 1f       	adc	r29, r19
    1d78:	cc 0f       	add	r28, r28
    1d7a:	dd 1f       	adc	r29, r29
    1d7c:	cc 0f       	add	r28, r28
    1d7e:	dd 1f       	adc	r29, r29
    1d80:	c1 58       	subi	r28, 0x81	; 129
    1d82:	de 4f       	sbci	r29, 0xFE	; 254
    1d84:	ec 81       	ldd	r30, Y+4	; 0x04
    1d86:	fd 81       	ldd	r31, Y+5	; 0x05
    1d88:	80 81       	ld	r24, Z
    1d8a:	80 61       	ori	r24, 0x10	; 16
    1d8c:	80 83       	st	Z, r24
    1d8e:	80 e0       	ldi	r24, 0x00	; 0
    1d90:	03 c0       	rjmp	.+6      	; 0x1d98 <UART_Init+0x3e8>
    1d92:	81 e0       	ldi	r24, 0x01	; 1
    1d94:	01 c0       	rjmp	.+2      	; 0x1d98 <UART_Init+0x3e8>
    1d96:	80 e0       	ldi	r24, 0x00	; 0
    1d98:	df 91       	pop	r29
    1d9a:	cf 91       	pop	r28
    1d9c:	1f 91       	pop	r17
    1d9e:	0f 91       	pop	r16
    1da0:	ff 90       	pop	r15
    1da2:	ef 90       	pop	r14
    1da4:	df 90       	pop	r13
    1da6:	cf 90       	pop	r12
    1da8:	08 95       	ret

00001daa <UART_Transmit>:
    1daa:	af 92       	push	r10
    1dac:	bf 92       	push	r11
    1dae:	cf 92       	push	r12
    1db0:	df 92       	push	r13
    1db2:	ef 92       	push	r14
    1db4:	ff 92       	push	r15
    1db6:	0f 93       	push	r16
    1db8:	1f 93       	push	r17
    1dba:	cf 93       	push	r28
    1dbc:	df 93       	push	r29
    1dbe:	8c 01       	movw	r16, r24
    1dc0:	ec 01       	movw	r28, r24
    1dc2:	88 81       	ld	r24, Y
    1dc4:	90 e0       	ldi	r25, 0x00	; 0
    1dc6:	1e 8a       	std	Y+22, r1	; 0x16
    1dc8:	5f 87       	std	Y+15, r21	; 0x0f
    1dca:	4e 87       	std	Y+14, r20	; 0x0e
    1dcc:	5b 8b       	std	Y+19, r21	; 0x13
    1dce:	4a 8b       	std	Y+18, r20	; 0x12
    1dd0:	2d 81       	ldd	r18, Y+5	; 0x05
    1dd2:	24 30       	cpi	r18, 0x04	; 4
    1dd4:	41 f4       	brne	.+16     	; 0x1de6 <UART_Transmit+0x3c>
    1dd6:	2f 81       	ldd	r18, Y+7	; 0x07
    1dd8:	21 11       	cpse	r18, r1
    1dda:	08 c0       	rjmp	.+16     	; 0x1dec <UART_Transmit+0x42>
    1ddc:	e6 2e       	mov	r14, r22
    1dde:	f7 2e       	mov	r15, r23
    1de0:	60 e0       	ldi	r22, 0x00	; 0
    1de2:	70 e0       	ldi	r23, 0x00	; 0
    1de4:	05 c0       	rjmp	.+10     	; 0x1df0 <UART_Transmit+0x46>
    1de6:	e1 2c       	mov	r14, r1
    1de8:	f1 2c       	mov	r15, r1
    1dea:	02 c0       	rjmp	.+4      	; 0x1df0 <UART_Transmit+0x46>
    1dec:	e1 2c       	mov	r14, r1
    1dee:	f1 2c       	mov	r15, r1
    1df0:	45 2b       	or	r20, r21
    1df2:	a9 f1       	breq	.+106    	; 0x1e5e <UART_Transmit+0xb4>
    1df4:	a6 2e       	mov	r10, r22
    1df6:	b7 2e       	mov	r11, r23
    1df8:	d7 01       	movw	r26, r14
    1dfa:	20 e0       	ldi	r18, 0x00	; 0
    1dfc:	30 e0       	ldi	r19, 0x00	; 0
    1dfe:	bc 01       	movw	r22, r24
    1e00:	66 0f       	add	r22, r22
    1e02:	77 1f       	adc	r23, r23
    1e04:	68 0f       	add	r22, r24
    1e06:	79 1f       	adc	r23, r25
    1e08:	66 0f       	add	r22, r22
    1e0a:	77 1f       	adc	r23, r23
    1e0c:	66 0f       	add	r22, r22
    1e0e:	77 1f       	adc	r23, r23
    1e10:	61 58       	subi	r22, 0x81	; 129
    1e12:	7e 4f       	sbci	r23, 0xFE	; 254
    1e14:	6b 01       	movw	r12, r22
    1e16:	d2 e0       	ldi	r29, 0x02	; 2
    1e18:	cd 0e       	add	r12, r29
    1e1a:	d1 1c       	adc	r13, r1
    1e1c:	e6 01       	movw	r28, r12
    1e1e:	e8 81       	ld	r30, Y
    1e20:	f9 81       	ldd	r31, Y+1	; 0x01
    1e22:	90 81       	ld	r25, Z
    1e24:	95 ff       	sbrs	r25, 5
    1e26:	fd cf       	rjmp	.-6      	; 0x1e22 <UART_Transmit+0x78>
    1e28:	e1 14       	cp	r14, r1
    1e2a:	f1 04       	cpc	r15, r1
    1e2c:	39 f4       	brne	.+14     	; 0x1e3c <UART_Transmit+0x92>
    1e2e:	eb 01       	movw	r28, r22
    1e30:	e8 81       	ld	r30, Y
    1e32:	f9 81       	ldd	r31, Y+1	; 0x01
    1e34:	e5 01       	movw	r28, r10
    1e36:	88 81       	ld	r24, Y
    1e38:	80 83       	st	Z, r24
    1e3a:	05 c0       	rjmp	.+10     	; 0x1e46 <UART_Transmit+0x9c>
    1e3c:	eb 01       	movw	r28, r22
    1e3e:	e8 81       	ld	r30, Y
    1e40:	f9 81       	ldd	r31, Y+1	; 0x01
    1e42:	8c 91       	ld	r24, X
    1e44:	80 83       	st	Z, r24
    1e46:	2f 5f       	subi	r18, 0xFF	; 255
    1e48:	3f 4f       	sbci	r19, 0xFF	; 255
    1e4a:	df ef       	ldi	r29, 0xFF	; 255
    1e4c:	ad 1a       	sub	r10, r29
    1e4e:	bd 0a       	sbc	r11, r29
    1e50:	12 96       	adiw	r26, 0x02	; 2
    1e52:	f8 01       	movw	r30, r16
    1e54:	42 89       	ldd	r20, Z+18	; 0x12
    1e56:	53 89       	ldd	r21, Z+19	; 0x13
    1e58:	24 17       	cp	r18, r20
    1e5a:	35 07       	cpc	r19, r21
    1e5c:	f8 f2       	brcs	.-66     	; 0x1e1c <UART_Transmit+0x72>
    1e5e:	80 e0       	ldi	r24, 0x00	; 0
    1e60:	df 91       	pop	r29
    1e62:	cf 91       	pop	r28
    1e64:	1f 91       	pop	r17
    1e66:	0f 91       	pop	r16
    1e68:	ff 90       	pop	r15
    1e6a:	ef 90       	pop	r14
    1e6c:	df 90       	pop	r13
    1e6e:	cf 90       	pop	r12
    1e70:	bf 90       	pop	r11
    1e72:	af 90       	pop	r10
    1e74:	08 95       	ret

00001e76 <UART_Receive>:
    1e76:	af 92       	push	r10
    1e78:	bf 92       	push	r11
    1e7a:	cf 92       	push	r12
    1e7c:	df 92       	push	r13
    1e7e:	ef 92       	push	r14
    1e80:	ff 92       	push	r15
    1e82:	0f 93       	push	r16
    1e84:	1f 93       	push	r17
    1e86:	cf 93       	push	r28
    1e88:	df 93       	push	r29
    1e8a:	8c 01       	movw	r16, r24
    1e8c:	ec 01       	movw	r28, r24
    1e8e:	88 81       	ld	r24, Y
    1e90:	90 e0       	ldi	r25, 0x00	; 0
    1e92:	1e 8a       	std	Y+22, r1	; 0x16
    1e94:	59 8b       	std	Y+17, r21	; 0x11
    1e96:	48 8b       	std	Y+16, r20	; 0x10
    1e98:	5d 8b       	std	Y+21, r21	; 0x15
    1e9a:	4c 8b       	std	Y+20, r20	; 0x14
    1e9c:	2d 81       	ldd	r18, Y+5	; 0x05
    1e9e:	24 30       	cpi	r18, 0x04	; 4
    1ea0:	41 f4       	brne	.+16     	; 0x1eb2 <UART_Receive+0x3c>
    1ea2:	2f 81       	ldd	r18, Y+7	; 0x07
    1ea4:	21 11       	cpse	r18, r1
    1ea6:	08 c0       	rjmp	.+16     	; 0x1eb8 <UART_Receive+0x42>
    1ea8:	e6 2e       	mov	r14, r22
    1eaa:	f7 2e       	mov	r15, r23
    1eac:	60 e0       	ldi	r22, 0x00	; 0
    1eae:	70 e0       	ldi	r23, 0x00	; 0
    1eb0:	05 c0       	rjmp	.+10     	; 0x1ebc <UART_Receive+0x46>
    1eb2:	e1 2c       	mov	r14, r1
    1eb4:	f1 2c       	mov	r15, r1
    1eb6:	02 c0       	rjmp	.+4      	; 0x1ebc <UART_Receive+0x46>
    1eb8:	e1 2c       	mov	r14, r1
    1eba:	f1 2c       	mov	r15, r1
    1ebc:	f8 01       	movw	r30, r16
    1ebe:	22 89       	ldd	r18, Z+18	; 0x12
    1ec0:	33 89       	ldd	r19, Z+19	; 0x13
    1ec2:	23 2b       	or	r18, r19
    1ec4:	d9 f1       	breq	.+118    	; 0x1f3c <UART_Receive+0xc6>
    1ec6:	a6 2e       	mov	r10, r22
    1ec8:	b7 2e       	mov	r11, r23
    1eca:	d7 01       	movw	r26, r14
    1ecc:	40 e0       	ldi	r20, 0x00	; 0
    1ece:	50 e0       	ldi	r21, 0x00	; 0
    1ed0:	bc 01       	movw	r22, r24
    1ed2:	66 0f       	add	r22, r22
    1ed4:	77 1f       	adc	r23, r23
    1ed6:	68 0f       	add	r22, r24
    1ed8:	79 1f       	adc	r23, r25
    1eda:	66 0f       	add	r22, r22
    1edc:	77 1f       	adc	r23, r23
    1ede:	66 0f       	add	r22, r22
    1ee0:	77 1f       	adc	r23, r23
    1ee2:	61 58       	subi	r22, 0x81	; 129
    1ee4:	7e 4f       	sbci	r23, 0xFE	; 254
    1ee6:	6b 01       	movw	r12, r22
    1ee8:	f2 e0       	ldi	r31, 0x02	; 2
    1eea:	cf 0e       	add	r12, r31
    1eec:	d1 1c       	adc	r13, r1
    1eee:	e6 01       	movw	r28, r12
    1ef0:	e8 81       	ld	r30, Y
    1ef2:	f9 81       	ldd	r31, Y+1	; 0x01
    1ef4:	90 81       	ld	r25, Z
    1ef6:	99 23       	and	r25, r25
    1ef8:	1c f0       	brlt	.+6      	; 0x1f00 <UART_Receive+0x8a>
    1efa:	90 81       	ld	r25, Z
    1efc:	95 ff       	sbrs	r25, 5
    1efe:	fa cf       	rjmp	.-12     	; 0x1ef4 <UART_Receive+0x7e>
    1f00:	e1 14       	cp	r14, r1
    1f02:	f1 04       	cpc	r15, r1
    1f04:	39 f4       	brne	.+14     	; 0x1f14 <UART_Receive+0x9e>
    1f06:	eb 01       	movw	r28, r22
    1f08:	e8 81       	ld	r30, Y
    1f0a:	f9 81       	ldd	r31, Y+1	; 0x01
    1f0c:	80 81       	ld	r24, Z
    1f0e:	f5 01       	movw	r30, r10
    1f10:	80 83       	st	Z, r24
    1f12:	08 c0       	rjmp	.+16     	; 0x1f24 <UART_Receive+0xae>
    1f14:	eb 01       	movw	r28, r22
    1f16:	e8 81       	ld	r30, Y
    1f18:	f9 81       	ldd	r31, Y+1	; 0x01
    1f1a:	20 81       	ld	r18, Z
    1f1c:	30 e0       	ldi	r19, 0x00	; 0
    1f1e:	11 96       	adiw	r26, 0x01	; 1
    1f20:	3c 93       	st	X, r19
    1f22:	2e 93       	st	-X, r18
    1f24:	4f 5f       	subi	r20, 0xFF	; 255
    1f26:	5f 4f       	sbci	r21, 0xFF	; 255
    1f28:	df ef       	ldi	r29, 0xFF	; 255
    1f2a:	ad 1a       	sub	r10, r29
    1f2c:	bd 0a       	sbc	r11, r29
    1f2e:	12 96       	adiw	r26, 0x02	; 2
    1f30:	f8 01       	movw	r30, r16
    1f32:	82 89       	ldd	r24, Z+18	; 0x12
    1f34:	93 89       	ldd	r25, Z+19	; 0x13
    1f36:	48 17       	cp	r20, r24
    1f38:	59 07       	cpc	r21, r25
    1f3a:	c8 f2       	brcs	.-78     	; 0x1eee <UART_Receive+0x78>
    1f3c:	80 e0       	ldi	r24, 0x00	; 0
    1f3e:	df 91       	pop	r29
    1f40:	cf 91       	pop	r28
    1f42:	1f 91       	pop	r17
    1f44:	0f 91       	pop	r16
    1f46:	ff 90       	pop	r15
    1f48:	ef 90       	pop	r14
    1f4a:	df 90       	pop	r13
    1f4c:	cf 90       	pop	r12
    1f4e:	bf 90       	pop	r11
    1f50:	af 90       	pop	r10
    1f52:	08 95       	ret

00001f54 <UART_Receive_IT>:
    1f54:	fc 01       	movw	r30, r24
    1f56:	20 81       	ld	r18, Z
    1f58:	30 e0       	ldi	r19, 0x00	; 0
    1f5a:	75 87       	std	Z+13, r23	; 0x0d
    1f5c:	64 87       	std	Z+12, r22	; 0x0c
    1f5e:	51 8b       	std	Z+17, r21	; 0x11
    1f60:	40 8b       	std	Z+16, r20	; 0x10
    1f62:	55 8b       	std	Z+21, r21	; 0x15
    1f64:	44 8b       	std	Z+20, r20	; 0x14
    1f66:	f9 01       	movw	r30, r18
    1f68:	ee 0f       	add	r30, r30
    1f6a:	ff 1f       	adc	r31, r31
    1f6c:	e2 0f       	add	r30, r18
    1f6e:	f3 1f       	adc	r31, r19
    1f70:	ee 0f       	add	r30, r30
    1f72:	ff 1f       	adc	r31, r31
    1f74:	ee 0f       	add	r30, r30
    1f76:	ff 1f       	adc	r31, r31
    1f78:	e1 58       	subi	r30, 0x81	; 129
    1f7a:	fe 4f       	sbci	r31, 0xFE	; 254
    1f7c:	04 80       	ldd	r0, Z+4	; 0x04
    1f7e:	f5 81       	ldd	r31, Z+5	; 0x05
    1f80:	e0 2d       	mov	r30, r0
    1f82:	80 81       	ld	r24, Z
    1f84:	80 68       	ori	r24, 0x80	; 128
    1f86:	80 83       	st	Z, r24
    1f88:	80 e0       	ldi	r24, 0x00	; 0
    1f8a:	08 95       	ret

00001f8c <UART_TxIRQHandler>:
    1f8c:	5f c9       	rjmp	.-3394   	; 0x124c <UART_TxCpltCallback>
    1f8e:	08 95       	ret

00001f90 <UART_RxIRQHandler>:
{
	UART_TxCpltCallback(huart);
}

void UART_RxIRQHandler(UART_HandleTypeDef *huart)
{
    1f90:	0f 93       	push	r16
    1f92:	1f 93       	push	r17
    1f94:	cf 93       	push	r28
    1f96:	df 93       	push	r29
    1f98:	ec 01       	movw	r28, r24
	UART_Receive(huart, huart->pRxBuffPtr, huart->RxXferSize, 100);
    1f9a:	48 89       	ldd	r20, Y+16	; 0x10
    1f9c:	59 89       	ldd	r21, Y+17	; 0x11
    1f9e:	6c 85       	ldd	r22, Y+12	; 0x0c
    1fa0:	7d 85       	ldd	r23, Y+13	; 0x0d
    1fa2:	04 e6       	ldi	r16, 0x64	; 100
    1fa4:	10 e0       	ldi	r17, 0x00	; 0
    1fa6:	20 e0       	ldi	r18, 0x00	; 0
    1fa8:	30 e0       	ldi	r19, 0x00	; 0
    1faa:	65 df       	rcall	.-310    	; 0x1e76 <UART_Receive>
	UART_RxCpltCallback(huart);
    1fac:	ce 01       	movw	r24, r28
    1fae:	4f d9       	rcall	.-3426   	; 0x124e <UART_RxCpltCallback>
}
    1fb0:	df 91       	pop	r29
    1fb2:	cf 91       	pop	r28
    1fb4:	1f 91       	pop	r17
    1fb6:	0f 91       	pop	r16
    1fb8:	08 95       	ret

00001fba <main>:
#include "main.h"


int main(void)
{
    hwInit();
    1fba:	57 d9       	rcall	.-3410   	; 0x126a <hwInit>
	apInit();
    1fbc:	0e 94 6d 00 	call	0xda	; 0xda <apInit>
	
	apMain();
    1fc0:	0e 94 7e 00 	call	0xfc	; 0xfc <apMain>
}
    1fc4:	80 e0       	ldi	r24, 0x00	; 0
    1fc6:	90 e0       	ldi	r25, 0x00	; 0
    1fc8:	08 95       	ret

00001fca <__subsf3>:
    1fca:	50 58       	subi	r21, 0x80	; 128

00001fcc <__addsf3>:
    1fcc:	bb 27       	eor	r27, r27
    1fce:	aa 27       	eor	r26, r26
    1fd0:	0e d0       	rcall	.+28     	; 0x1fee <__addsf3x>
    1fd2:	48 c1       	rjmp	.+656    	; 0x2264 <__fp_round>
    1fd4:	39 d1       	rcall	.+626    	; 0x2248 <__fp_pscA>
    1fd6:	30 f0       	brcs	.+12     	; 0x1fe4 <__addsf3+0x18>
    1fd8:	3e d1       	rcall	.+636    	; 0x2256 <__fp_pscB>
    1fda:	20 f0       	brcs	.+8      	; 0x1fe4 <__addsf3+0x18>
    1fdc:	31 f4       	brne	.+12     	; 0x1fea <__addsf3+0x1e>
    1fde:	9f 3f       	cpi	r25, 0xFF	; 255
    1fe0:	11 f4       	brne	.+4      	; 0x1fe6 <__addsf3+0x1a>
    1fe2:	1e f4       	brtc	.+6      	; 0x1fea <__addsf3+0x1e>
    1fe4:	2e c1       	rjmp	.+604    	; 0x2242 <__fp_nan>
    1fe6:	0e f4       	brtc	.+2      	; 0x1fea <__addsf3+0x1e>
    1fe8:	e0 95       	com	r30
    1fea:	e7 fb       	bst	r30, 7
    1fec:	24 c1       	rjmp	.+584    	; 0x2236 <__fp_inf>

00001fee <__addsf3x>:
    1fee:	e9 2f       	mov	r30, r25
    1ff0:	4a d1       	rcall	.+660    	; 0x2286 <__fp_split3>
    1ff2:	80 f3       	brcs	.-32     	; 0x1fd4 <__addsf3+0x8>
    1ff4:	ba 17       	cp	r27, r26
    1ff6:	62 07       	cpc	r22, r18
    1ff8:	73 07       	cpc	r23, r19
    1ffa:	84 07       	cpc	r24, r20
    1ffc:	95 07       	cpc	r25, r21
    1ffe:	18 f0       	brcs	.+6      	; 0x2006 <__addsf3x+0x18>
    2000:	71 f4       	brne	.+28     	; 0x201e <__addsf3x+0x30>
    2002:	9e f5       	brtc	.+102    	; 0x206a <__addsf3x+0x7c>
    2004:	62 c1       	rjmp	.+708    	; 0x22ca <__fp_zero>
    2006:	0e f4       	brtc	.+2      	; 0x200a <__addsf3x+0x1c>
    2008:	e0 95       	com	r30
    200a:	0b 2e       	mov	r0, r27
    200c:	ba 2f       	mov	r27, r26
    200e:	a0 2d       	mov	r26, r0
    2010:	0b 01       	movw	r0, r22
    2012:	b9 01       	movw	r22, r18
    2014:	90 01       	movw	r18, r0
    2016:	0c 01       	movw	r0, r24
    2018:	ca 01       	movw	r24, r20
    201a:	a0 01       	movw	r20, r0
    201c:	11 24       	eor	r1, r1
    201e:	ff 27       	eor	r31, r31
    2020:	59 1b       	sub	r21, r25
    2022:	99 f0       	breq	.+38     	; 0x204a <__addsf3x+0x5c>
    2024:	59 3f       	cpi	r21, 0xF9	; 249
    2026:	50 f4       	brcc	.+20     	; 0x203c <__addsf3x+0x4e>
    2028:	50 3e       	cpi	r21, 0xE0	; 224
    202a:	68 f1       	brcs	.+90     	; 0x2086 <__addsf3x+0x98>
    202c:	1a 16       	cp	r1, r26
    202e:	f0 40       	sbci	r31, 0x00	; 0
    2030:	a2 2f       	mov	r26, r18
    2032:	23 2f       	mov	r18, r19
    2034:	34 2f       	mov	r19, r20
    2036:	44 27       	eor	r20, r20
    2038:	58 5f       	subi	r21, 0xF8	; 248
    203a:	f3 cf       	rjmp	.-26     	; 0x2022 <__addsf3x+0x34>
    203c:	46 95       	lsr	r20
    203e:	37 95       	ror	r19
    2040:	27 95       	ror	r18
    2042:	a7 95       	ror	r26
    2044:	f0 40       	sbci	r31, 0x00	; 0
    2046:	53 95       	inc	r21
    2048:	c9 f7       	brne	.-14     	; 0x203c <__addsf3x+0x4e>
    204a:	7e f4       	brtc	.+30     	; 0x206a <__addsf3x+0x7c>
    204c:	1f 16       	cp	r1, r31
    204e:	ba 0b       	sbc	r27, r26
    2050:	62 0b       	sbc	r22, r18
    2052:	73 0b       	sbc	r23, r19
    2054:	84 0b       	sbc	r24, r20
    2056:	ba f0       	brmi	.+46     	; 0x2086 <__addsf3x+0x98>
    2058:	91 50       	subi	r25, 0x01	; 1
    205a:	a1 f0       	breq	.+40     	; 0x2084 <__addsf3x+0x96>
    205c:	ff 0f       	add	r31, r31
    205e:	bb 1f       	adc	r27, r27
    2060:	66 1f       	adc	r22, r22
    2062:	77 1f       	adc	r23, r23
    2064:	88 1f       	adc	r24, r24
    2066:	c2 f7       	brpl	.-16     	; 0x2058 <__addsf3x+0x6a>
    2068:	0e c0       	rjmp	.+28     	; 0x2086 <__addsf3x+0x98>
    206a:	ba 0f       	add	r27, r26
    206c:	62 1f       	adc	r22, r18
    206e:	73 1f       	adc	r23, r19
    2070:	84 1f       	adc	r24, r20
    2072:	48 f4       	brcc	.+18     	; 0x2086 <__addsf3x+0x98>
    2074:	87 95       	ror	r24
    2076:	77 95       	ror	r23
    2078:	67 95       	ror	r22
    207a:	b7 95       	ror	r27
    207c:	f7 95       	ror	r31
    207e:	9e 3f       	cpi	r25, 0xFE	; 254
    2080:	08 f0       	brcs	.+2      	; 0x2084 <__addsf3x+0x96>
    2082:	b3 cf       	rjmp	.-154    	; 0x1fea <__addsf3+0x1e>
    2084:	93 95       	inc	r25
    2086:	88 0f       	add	r24, r24
    2088:	08 f0       	brcs	.+2      	; 0x208c <__addsf3x+0x9e>
    208a:	99 27       	eor	r25, r25
    208c:	ee 0f       	add	r30, r30
    208e:	97 95       	ror	r25
    2090:	87 95       	ror	r24
    2092:	08 95       	ret

00002094 <__divsf3>:
    2094:	0c d0       	rcall	.+24     	; 0x20ae <__divsf3x>
    2096:	e6 c0       	rjmp	.+460    	; 0x2264 <__fp_round>
    2098:	de d0       	rcall	.+444    	; 0x2256 <__fp_pscB>
    209a:	40 f0       	brcs	.+16     	; 0x20ac <__divsf3+0x18>
    209c:	d5 d0       	rcall	.+426    	; 0x2248 <__fp_pscA>
    209e:	30 f0       	brcs	.+12     	; 0x20ac <__divsf3+0x18>
    20a0:	21 f4       	brne	.+8      	; 0x20aa <__divsf3+0x16>
    20a2:	5f 3f       	cpi	r21, 0xFF	; 255
    20a4:	19 f0       	breq	.+6      	; 0x20ac <__divsf3+0x18>
    20a6:	c7 c0       	rjmp	.+398    	; 0x2236 <__fp_inf>
    20a8:	51 11       	cpse	r21, r1
    20aa:	10 c1       	rjmp	.+544    	; 0x22cc <__fp_szero>
    20ac:	ca c0       	rjmp	.+404    	; 0x2242 <__fp_nan>

000020ae <__divsf3x>:
    20ae:	eb d0       	rcall	.+470    	; 0x2286 <__fp_split3>
    20b0:	98 f3       	brcs	.-26     	; 0x2098 <__divsf3+0x4>

000020b2 <__divsf3_pse>:
    20b2:	99 23       	and	r25, r25
    20b4:	c9 f3       	breq	.-14     	; 0x20a8 <__divsf3+0x14>
    20b6:	55 23       	and	r21, r21
    20b8:	b1 f3       	breq	.-20     	; 0x20a6 <__divsf3+0x12>
    20ba:	95 1b       	sub	r25, r21
    20bc:	55 0b       	sbc	r21, r21
    20be:	bb 27       	eor	r27, r27
    20c0:	aa 27       	eor	r26, r26
    20c2:	62 17       	cp	r22, r18
    20c4:	73 07       	cpc	r23, r19
    20c6:	84 07       	cpc	r24, r20
    20c8:	38 f0       	brcs	.+14     	; 0x20d8 <__divsf3_pse+0x26>
    20ca:	9f 5f       	subi	r25, 0xFF	; 255
    20cc:	5f 4f       	sbci	r21, 0xFF	; 255
    20ce:	22 0f       	add	r18, r18
    20d0:	33 1f       	adc	r19, r19
    20d2:	44 1f       	adc	r20, r20
    20d4:	aa 1f       	adc	r26, r26
    20d6:	a9 f3       	breq	.-22     	; 0x20c2 <__divsf3_pse+0x10>
    20d8:	33 d0       	rcall	.+102    	; 0x2140 <__divsf3_pse+0x8e>
    20da:	0e 2e       	mov	r0, r30
    20dc:	3a f0       	brmi	.+14     	; 0x20ec <__divsf3_pse+0x3a>
    20de:	e0 e8       	ldi	r30, 0x80	; 128
    20e0:	30 d0       	rcall	.+96     	; 0x2142 <__divsf3_pse+0x90>
    20e2:	91 50       	subi	r25, 0x01	; 1
    20e4:	50 40       	sbci	r21, 0x00	; 0
    20e6:	e6 95       	lsr	r30
    20e8:	00 1c       	adc	r0, r0
    20ea:	ca f7       	brpl	.-14     	; 0x20de <__divsf3_pse+0x2c>
    20ec:	29 d0       	rcall	.+82     	; 0x2140 <__divsf3_pse+0x8e>
    20ee:	fe 2f       	mov	r31, r30
    20f0:	27 d0       	rcall	.+78     	; 0x2140 <__divsf3_pse+0x8e>
    20f2:	66 0f       	add	r22, r22
    20f4:	77 1f       	adc	r23, r23
    20f6:	88 1f       	adc	r24, r24
    20f8:	bb 1f       	adc	r27, r27
    20fa:	26 17       	cp	r18, r22
    20fc:	37 07       	cpc	r19, r23
    20fe:	48 07       	cpc	r20, r24
    2100:	ab 07       	cpc	r26, r27
    2102:	b0 e8       	ldi	r27, 0x80	; 128
    2104:	09 f0       	breq	.+2      	; 0x2108 <__divsf3_pse+0x56>
    2106:	bb 0b       	sbc	r27, r27
    2108:	80 2d       	mov	r24, r0
    210a:	bf 01       	movw	r22, r30
    210c:	ff 27       	eor	r31, r31
    210e:	93 58       	subi	r25, 0x83	; 131
    2110:	5f 4f       	sbci	r21, 0xFF	; 255
    2112:	2a f0       	brmi	.+10     	; 0x211e <__divsf3_pse+0x6c>
    2114:	9e 3f       	cpi	r25, 0xFE	; 254
    2116:	51 05       	cpc	r21, r1
    2118:	68 f0       	brcs	.+26     	; 0x2134 <__divsf3_pse+0x82>
    211a:	8d c0       	rjmp	.+282    	; 0x2236 <__fp_inf>
    211c:	d7 c0       	rjmp	.+430    	; 0x22cc <__fp_szero>
    211e:	5f 3f       	cpi	r21, 0xFF	; 255
    2120:	ec f3       	brlt	.-6      	; 0x211c <__divsf3_pse+0x6a>
    2122:	98 3e       	cpi	r25, 0xE8	; 232
    2124:	dc f3       	brlt	.-10     	; 0x211c <__divsf3_pse+0x6a>
    2126:	86 95       	lsr	r24
    2128:	77 95       	ror	r23
    212a:	67 95       	ror	r22
    212c:	b7 95       	ror	r27
    212e:	f7 95       	ror	r31
    2130:	9f 5f       	subi	r25, 0xFF	; 255
    2132:	c9 f7       	brne	.-14     	; 0x2126 <__divsf3_pse+0x74>
    2134:	88 0f       	add	r24, r24
    2136:	91 1d       	adc	r25, r1
    2138:	96 95       	lsr	r25
    213a:	87 95       	ror	r24
    213c:	97 f9       	bld	r25, 7
    213e:	08 95       	ret
    2140:	e1 e0       	ldi	r30, 0x01	; 1
    2142:	66 0f       	add	r22, r22
    2144:	77 1f       	adc	r23, r23
    2146:	88 1f       	adc	r24, r24
    2148:	bb 1f       	adc	r27, r27
    214a:	62 17       	cp	r22, r18
    214c:	73 07       	cpc	r23, r19
    214e:	84 07       	cpc	r24, r20
    2150:	ba 07       	cpc	r27, r26
    2152:	20 f0       	brcs	.+8      	; 0x215c <__divsf3_pse+0xaa>
    2154:	62 1b       	sub	r22, r18
    2156:	73 0b       	sbc	r23, r19
    2158:	84 0b       	sbc	r24, r20
    215a:	ba 0b       	sbc	r27, r26
    215c:	ee 1f       	adc	r30, r30
    215e:	88 f7       	brcc	.-30     	; 0x2142 <__divsf3_pse+0x90>
    2160:	e0 95       	com	r30
    2162:	08 95       	ret

00002164 <__fixunssfsi>:
    2164:	98 d0       	rcall	.+304    	; 0x2296 <__fp_splitA>
    2166:	88 f0       	brcs	.+34     	; 0x218a <__fixunssfsi+0x26>
    2168:	9f 57       	subi	r25, 0x7F	; 127
    216a:	90 f0       	brcs	.+36     	; 0x2190 <__fixunssfsi+0x2c>
    216c:	b9 2f       	mov	r27, r25
    216e:	99 27       	eor	r25, r25
    2170:	b7 51       	subi	r27, 0x17	; 23
    2172:	a0 f0       	brcs	.+40     	; 0x219c <__fixunssfsi+0x38>
    2174:	d1 f0       	breq	.+52     	; 0x21aa <__fixunssfsi+0x46>
    2176:	66 0f       	add	r22, r22
    2178:	77 1f       	adc	r23, r23
    217a:	88 1f       	adc	r24, r24
    217c:	99 1f       	adc	r25, r25
    217e:	1a f0       	brmi	.+6      	; 0x2186 <__fixunssfsi+0x22>
    2180:	ba 95       	dec	r27
    2182:	c9 f7       	brne	.-14     	; 0x2176 <__fixunssfsi+0x12>
    2184:	12 c0       	rjmp	.+36     	; 0x21aa <__fixunssfsi+0x46>
    2186:	b1 30       	cpi	r27, 0x01	; 1
    2188:	81 f0       	breq	.+32     	; 0x21aa <__fixunssfsi+0x46>
    218a:	9f d0       	rcall	.+318    	; 0x22ca <__fp_zero>
    218c:	b1 e0       	ldi	r27, 0x01	; 1
    218e:	08 95       	ret
    2190:	9c c0       	rjmp	.+312    	; 0x22ca <__fp_zero>
    2192:	67 2f       	mov	r22, r23
    2194:	78 2f       	mov	r23, r24
    2196:	88 27       	eor	r24, r24
    2198:	b8 5f       	subi	r27, 0xF8	; 248
    219a:	39 f0       	breq	.+14     	; 0x21aa <__fixunssfsi+0x46>
    219c:	b9 3f       	cpi	r27, 0xF9	; 249
    219e:	cc f3       	brlt	.-14     	; 0x2192 <__fixunssfsi+0x2e>
    21a0:	86 95       	lsr	r24
    21a2:	77 95       	ror	r23
    21a4:	67 95       	ror	r22
    21a6:	b3 95       	inc	r27
    21a8:	d9 f7       	brne	.-10     	; 0x21a0 <__fixunssfsi+0x3c>
    21aa:	3e f4       	brtc	.+14     	; 0x21ba <__fixunssfsi+0x56>
    21ac:	90 95       	com	r25
    21ae:	80 95       	com	r24
    21b0:	70 95       	com	r23
    21b2:	61 95       	neg	r22
    21b4:	7f 4f       	sbci	r23, 0xFF	; 255
    21b6:	8f 4f       	sbci	r24, 0xFF	; 255
    21b8:	9f 4f       	sbci	r25, 0xFF	; 255
    21ba:	08 95       	ret

000021bc <__floatunsisf>:
    21bc:	e8 94       	clt
    21be:	09 c0       	rjmp	.+18     	; 0x21d2 <__floatsisf+0x12>

000021c0 <__floatsisf>:
    21c0:	97 fb       	bst	r25, 7
    21c2:	3e f4       	brtc	.+14     	; 0x21d2 <__floatsisf+0x12>
    21c4:	90 95       	com	r25
    21c6:	80 95       	com	r24
    21c8:	70 95       	com	r23
    21ca:	61 95       	neg	r22
    21cc:	7f 4f       	sbci	r23, 0xFF	; 255
    21ce:	8f 4f       	sbci	r24, 0xFF	; 255
    21d0:	9f 4f       	sbci	r25, 0xFF	; 255
    21d2:	99 23       	and	r25, r25
    21d4:	a9 f0       	breq	.+42     	; 0x2200 <__floatsisf+0x40>
    21d6:	f9 2f       	mov	r31, r25
    21d8:	96 e9       	ldi	r25, 0x96	; 150
    21da:	bb 27       	eor	r27, r27
    21dc:	93 95       	inc	r25
    21de:	f6 95       	lsr	r31
    21e0:	87 95       	ror	r24
    21e2:	77 95       	ror	r23
    21e4:	67 95       	ror	r22
    21e6:	b7 95       	ror	r27
    21e8:	f1 11       	cpse	r31, r1
    21ea:	f8 cf       	rjmp	.-16     	; 0x21dc <__floatsisf+0x1c>
    21ec:	fa f4       	brpl	.+62     	; 0x222c <__floatsisf+0x6c>
    21ee:	bb 0f       	add	r27, r27
    21f0:	11 f4       	brne	.+4      	; 0x21f6 <__floatsisf+0x36>
    21f2:	60 ff       	sbrs	r22, 0
    21f4:	1b c0       	rjmp	.+54     	; 0x222c <__floatsisf+0x6c>
    21f6:	6f 5f       	subi	r22, 0xFF	; 255
    21f8:	7f 4f       	sbci	r23, 0xFF	; 255
    21fa:	8f 4f       	sbci	r24, 0xFF	; 255
    21fc:	9f 4f       	sbci	r25, 0xFF	; 255
    21fe:	16 c0       	rjmp	.+44     	; 0x222c <__floatsisf+0x6c>
    2200:	88 23       	and	r24, r24
    2202:	11 f0       	breq	.+4      	; 0x2208 <__floatsisf+0x48>
    2204:	96 e9       	ldi	r25, 0x96	; 150
    2206:	11 c0       	rjmp	.+34     	; 0x222a <__floatsisf+0x6a>
    2208:	77 23       	and	r23, r23
    220a:	21 f0       	breq	.+8      	; 0x2214 <__floatsisf+0x54>
    220c:	9e e8       	ldi	r25, 0x8E	; 142
    220e:	87 2f       	mov	r24, r23
    2210:	76 2f       	mov	r23, r22
    2212:	05 c0       	rjmp	.+10     	; 0x221e <__floatsisf+0x5e>
    2214:	66 23       	and	r22, r22
    2216:	71 f0       	breq	.+28     	; 0x2234 <__floatsisf+0x74>
    2218:	96 e8       	ldi	r25, 0x86	; 134
    221a:	86 2f       	mov	r24, r22
    221c:	70 e0       	ldi	r23, 0x00	; 0
    221e:	60 e0       	ldi	r22, 0x00	; 0
    2220:	2a f0       	brmi	.+10     	; 0x222c <__floatsisf+0x6c>
    2222:	9a 95       	dec	r25
    2224:	66 0f       	add	r22, r22
    2226:	77 1f       	adc	r23, r23
    2228:	88 1f       	adc	r24, r24
    222a:	da f7       	brpl	.-10     	; 0x2222 <__floatsisf+0x62>
    222c:	88 0f       	add	r24, r24
    222e:	96 95       	lsr	r25
    2230:	87 95       	ror	r24
    2232:	97 f9       	bld	r25, 7
    2234:	08 95       	ret

00002236 <__fp_inf>:
    2236:	97 f9       	bld	r25, 7
    2238:	9f 67       	ori	r25, 0x7F	; 127
    223a:	80 e8       	ldi	r24, 0x80	; 128
    223c:	70 e0       	ldi	r23, 0x00	; 0
    223e:	60 e0       	ldi	r22, 0x00	; 0
    2240:	08 95       	ret

00002242 <__fp_nan>:
    2242:	9f ef       	ldi	r25, 0xFF	; 255
    2244:	80 ec       	ldi	r24, 0xC0	; 192
    2246:	08 95       	ret

00002248 <__fp_pscA>:
    2248:	00 24       	eor	r0, r0
    224a:	0a 94       	dec	r0
    224c:	16 16       	cp	r1, r22
    224e:	17 06       	cpc	r1, r23
    2250:	18 06       	cpc	r1, r24
    2252:	09 06       	cpc	r0, r25
    2254:	08 95       	ret

00002256 <__fp_pscB>:
    2256:	00 24       	eor	r0, r0
    2258:	0a 94       	dec	r0
    225a:	12 16       	cp	r1, r18
    225c:	13 06       	cpc	r1, r19
    225e:	14 06       	cpc	r1, r20
    2260:	05 06       	cpc	r0, r21
    2262:	08 95       	ret

00002264 <__fp_round>:
    2264:	09 2e       	mov	r0, r25
    2266:	03 94       	inc	r0
    2268:	00 0c       	add	r0, r0
    226a:	11 f4       	brne	.+4      	; 0x2270 <__fp_round+0xc>
    226c:	88 23       	and	r24, r24
    226e:	52 f0       	brmi	.+20     	; 0x2284 <__fp_round+0x20>
    2270:	bb 0f       	add	r27, r27
    2272:	40 f4       	brcc	.+16     	; 0x2284 <__fp_round+0x20>
    2274:	bf 2b       	or	r27, r31
    2276:	11 f4       	brne	.+4      	; 0x227c <__fp_round+0x18>
    2278:	60 ff       	sbrs	r22, 0
    227a:	04 c0       	rjmp	.+8      	; 0x2284 <__fp_round+0x20>
    227c:	6f 5f       	subi	r22, 0xFF	; 255
    227e:	7f 4f       	sbci	r23, 0xFF	; 255
    2280:	8f 4f       	sbci	r24, 0xFF	; 255
    2282:	9f 4f       	sbci	r25, 0xFF	; 255
    2284:	08 95       	ret

00002286 <__fp_split3>:
    2286:	57 fd       	sbrc	r21, 7
    2288:	90 58       	subi	r25, 0x80	; 128
    228a:	44 0f       	add	r20, r20
    228c:	55 1f       	adc	r21, r21
    228e:	59 f0       	breq	.+22     	; 0x22a6 <__fp_splitA+0x10>
    2290:	5f 3f       	cpi	r21, 0xFF	; 255
    2292:	71 f0       	breq	.+28     	; 0x22b0 <__fp_splitA+0x1a>
    2294:	47 95       	ror	r20

00002296 <__fp_splitA>:
    2296:	88 0f       	add	r24, r24
    2298:	97 fb       	bst	r25, 7
    229a:	99 1f       	adc	r25, r25
    229c:	61 f0       	breq	.+24     	; 0x22b6 <__fp_splitA+0x20>
    229e:	9f 3f       	cpi	r25, 0xFF	; 255
    22a0:	79 f0       	breq	.+30     	; 0x22c0 <__fp_splitA+0x2a>
    22a2:	87 95       	ror	r24
    22a4:	08 95       	ret
    22a6:	12 16       	cp	r1, r18
    22a8:	13 06       	cpc	r1, r19
    22aa:	14 06       	cpc	r1, r20
    22ac:	55 1f       	adc	r21, r21
    22ae:	f2 cf       	rjmp	.-28     	; 0x2294 <__fp_split3+0xe>
    22b0:	46 95       	lsr	r20
    22b2:	f1 df       	rcall	.-30     	; 0x2296 <__fp_splitA>
    22b4:	08 c0       	rjmp	.+16     	; 0x22c6 <__fp_splitA+0x30>
    22b6:	16 16       	cp	r1, r22
    22b8:	17 06       	cpc	r1, r23
    22ba:	18 06       	cpc	r1, r24
    22bc:	99 1f       	adc	r25, r25
    22be:	f1 cf       	rjmp	.-30     	; 0x22a2 <__fp_splitA+0xc>
    22c0:	86 95       	lsr	r24
    22c2:	71 05       	cpc	r23, r1
    22c4:	61 05       	cpc	r22, r1
    22c6:	08 94       	sec
    22c8:	08 95       	ret

000022ca <__fp_zero>:
    22ca:	e8 94       	clt

000022cc <__fp_szero>:
    22cc:	bb 27       	eor	r27, r27
    22ce:	66 27       	eor	r22, r22
    22d0:	77 27       	eor	r23, r23
    22d2:	cb 01       	movw	r24, r22
    22d4:	97 f9       	bld	r25, 7
    22d6:	08 95       	ret

000022d8 <__divmodhi4>:
    22d8:	97 fb       	bst	r25, 7
    22da:	07 2e       	mov	r0, r23
    22dc:	16 f4       	brtc	.+4      	; 0x22e2 <__divmodhi4+0xa>
    22de:	00 94       	com	r0
    22e0:	06 d0       	rcall	.+12     	; 0x22ee <__divmodhi4_neg1>
    22e2:	77 fd       	sbrc	r23, 7
    22e4:	08 d0       	rcall	.+16     	; 0x22f6 <__divmodhi4_neg2>
    22e6:	36 d0       	rcall	.+108    	; 0x2354 <__udivmodhi4>
    22e8:	07 fc       	sbrc	r0, 7
    22ea:	05 d0       	rcall	.+10     	; 0x22f6 <__divmodhi4_neg2>
    22ec:	3e f4       	brtc	.+14     	; 0x22fc <__divmodhi4_exit>

000022ee <__divmodhi4_neg1>:
    22ee:	90 95       	com	r25
    22f0:	81 95       	neg	r24
    22f2:	9f 4f       	sbci	r25, 0xFF	; 255
    22f4:	08 95       	ret

000022f6 <__divmodhi4_neg2>:
    22f6:	70 95       	com	r23
    22f8:	61 95       	neg	r22
    22fa:	7f 4f       	sbci	r23, 0xFF	; 255

000022fc <__divmodhi4_exit>:
    22fc:	08 95       	ret

000022fe <__udivmodsi4>:
    22fe:	a1 e2       	ldi	r26, 0x21	; 33
    2300:	1a 2e       	mov	r1, r26
    2302:	aa 1b       	sub	r26, r26
    2304:	bb 1b       	sub	r27, r27
    2306:	fd 01       	movw	r30, r26
    2308:	0d c0       	rjmp	.+26     	; 0x2324 <__udivmodsi4_ep>

0000230a <__udivmodsi4_loop>:
    230a:	aa 1f       	adc	r26, r26
    230c:	bb 1f       	adc	r27, r27
    230e:	ee 1f       	adc	r30, r30
    2310:	ff 1f       	adc	r31, r31
    2312:	a2 17       	cp	r26, r18
    2314:	b3 07       	cpc	r27, r19
    2316:	e4 07       	cpc	r30, r20
    2318:	f5 07       	cpc	r31, r21
    231a:	20 f0       	brcs	.+8      	; 0x2324 <__udivmodsi4_ep>
    231c:	a2 1b       	sub	r26, r18
    231e:	b3 0b       	sbc	r27, r19
    2320:	e4 0b       	sbc	r30, r20
    2322:	f5 0b       	sbc	r31, r21

00002324 <__udivmodsi4_ep>:
    2324:	66 1f       	adc	r22, r22
    2326:	77 1f       	adc	r23, r23
    2328:	88 1f       	adc	r24, r24
    232a:	99 1f       	adc	r25, r25
    232c:	1a 94       	dec	r1
    232e:	69 f7       	brne	.-38     	; 0x230a <__udivmodsi4_loop>
    2330:	60 95       	com	r22
    2332:	70 95       	com	r23
    2334:	80 95       	com	r24
    2336:	90 95       	com	r25
    2338:	9b 01       	movw	r18, r22
    233a:	ac 01       	movw	r20, r24
    233c:	bd 01       	movw	r22, r26
    233e:	cf 01       	movw	r24, r30
    2340:	08 95       	ret

00002342 <__tablejump2__>:
    2342:	ee 0f       	add	r30, r30
    2344:	ff 1f       	adc	r31, r31
    2346:	00 24       	eor	r0, r0
    2348:	00 1c       	adc	r0, r0
    234a:	0b be       	out	0x3b, r0	; 59
    234c:	07 90       	elpm	r0, Z+
    234e:	f6 91       	elpm	r31, Z
    2350:	e0 2d       	mov	r30, r0
    2352:	09 94       	ijmp

00002354 <__udivmodhi4>:
    2354:	aa 1b       	sub	r26, r26
    2356:	bb 1b       	sub	r27, r27
    2358:	51 e1       	ldi	r21, 0x11	; 17
    235a:	07 c0       	rjmp	.+14     	; 0x236a <__udivmodhi4_ep>

0000235c <__udivmodhi4_loop>:
    235c:	aa 1f       	adc	r26, r26
    235e:	bb 1f       	adc	r27, r27
    2360:	a6 17       	cp	r26, r22
    2362:	b7 07       	cpc	r27, r23
    2364:	10 f0       	brcs	.+4      	; 0x236a <__udivmodhi4_ep>
    2366:	a6 1b       	sub	r26, r22
    2368:	b7 0b       	sbc	r27, r23

0000236a <__udivmodhi4_ep>:
    236a:	88 1f       	adc	r24, r24
    236c:	99 1f       	adc	r25, r25
    236e:	5a 95       	dec	r21
    2370:	a9 f7       	brne	.-22     	; 0x235c <__udivmodhi4_loop>
    2372:	80 95       	com	r24
    2374:	90 95       	com	r25
    2376:	bc 01       	movw	r22, r24
    2378:	cd 01       	movw	r24, r26
    237a:	08 95       	ret

0000237c <vsnprintf>:
    237c:	0f 93       	push	r16
    237e:	1f 93       	push	r17
    2380:	cf 93       	push	r28
    2382:	df 93       	push	r29
    2384:	cd b7       	in	r28, 0x3d	; 61
    2386:	de b7       	in	r29, 0x3e	; 62
    2388:	2e 97       	sbiw	r28, 0x0e	; 14
    238a:	0f b6       	in	r0, 0x3f	; 63
    238c:	f8 94       	cli
    238e:	de bf       	out	0x3e, r29	; 62
    2390:	0f be       	out	0x3f, r0	; 63
    2392:	cd bf       	out	0x3d, r28	; 61
    2394:	8c 01       	movw	r16, r24
    2396:	fa 01       	movw	r30, r20
    2398:	86 e0       	ldi	r24, 0x06	; 6
    239a:	8c 83       	std	Y+4, r24	; 0x04
    239c:	1a 83       	std	Y+2, r17	; 0x02
    239e:	09 83       	std	Y+1, r16	; 0x01
    23a0:	77 ff       	sbrs	r23, 7
    23a2:	02 c0       	rjmp	.+4      	; 0x23a8 <vsnprintf+0x2c>
    23a4:	60 e0       	ldi	r22, 0x00	; 0
    23a6:	70 e8       	ldi	r23, 0x80	; 128
    23a8:	cb 01       	movw	r24, r22
    23aa:	01 97       	sbiw	r24, 0x01	; 1
    23ac:	9e 83       	std	Y+6, r25	; 0x06
    23ae:	8d 83       	std	Y+5, r24	; 0x05
    23b0:	a9 01       	movw	r20, r18
    23b2:	bf 01       	movw	r22, r30
    23b4:	ce 01       	movw	r24, r28
    23b6:	01 96       	adiw	r24, 0x01	; 1
    23b8:	19 d0       	rcall	.+50     	; 0x23ec <vfprintf>
    23ba:	4d 81       	ldd	r20, Y+5	; 0x05
    23bc:	5e 81       	ldd	r21, Y+6	; 0x06
    23be:	57 fd       	sbrc	r21, 7
    23c0:	0a c0       	rjmp	.+20     	; 0x23d6 <vsnprintf+0x5a>
    23c2:	2f 81       	ldd	r18, Y+7	; 0x07
    23c4:	38 85       	ldd	r19, Y+8	; 0x08
    23c6:	42 17       	cp	r20, r18
    23c8:	53 07       	cpc	r21, r19
    23ca:	0c f4       	brge	.+2      	; 0x23ce <vsnprintf+0x52>
    23cc:	9a 01       	movw	r18, r20
    23ce:	f8 01       	movw	r30, r16
    23d0:	e2 0f       	add	r30, r18
    23d2:	f3 1f       	adc	r31, r19
    23d4:	10 82       	st	Z, r1
    23d6:	2e 96       	adiw	r28, 0x0e	; 14
    23d8:	0f b6       	in	r0, 0x3f	; 63
    23da:	f8 94       	cli
    23dc:	de bf       	out	0x3e, r29	; 62
    23de:	0f be       	out	0x3f, r0	; 63
    23e0:	cd bf       	out	0x3d, r28	; 61
    23e2:	df 91       	pop	r29
    23e4:	cf 91       	pop	r28
    23e6:	1f 91       	pop	r17
    23e8:	0f 91       	pop	r16
    23ea:	08 95       	ret

000023ec <vfprintf>:
    23ec:	2f 92       	push	r2
    23ee:	3f 92       	push	r3
    23f0:	4f 92       	push	r4
    23f2:	5f 92       	push	r5
    23f4:	6f 92       	push	r6
    23f6:	7f 92       	push	r7
    23f8:	8f 92       	push	r8
    23fa:	9f 92       	push	r9
    23fc:	af 92       	push	r10
    23fe:	bf 92       	push	r11
    2400:	cf 92       	push	r12
    2402:	df 92       	push	r13
    2404:	ef 92       	push	r14
    2406:	ff 92       	push	r15
    2408:	0f 93       	push	r16
    240a:	1f 93       	push	r17
    240c:	cf 93       	push	r28
    240e:	df 93       	push	r29
    2410:	cd b7       	in	r28, 0x3d	; 61
    2412:	de b7       	in	r29, 0x3e	; 62
    2414:	2b 97       	sbiw	r28, 0x0b	; 11
    2416:	0f b6       	in	r0, 0x3f	; 63
    2418:	f8 94       	cli
    241a:	de bf       	out	0x3e, r29	; 62
    241c:	0f be       	out	0x3f, r0	; 63
    241e:	cd bf       	out	0x3d, r28	; 61
    2420:	6c 01       	movw	r12, r24
    2422:	7b 01       	movw	r14, r22
    2424:	8a 01       	movw	r16, r20
    2426:	fc 01       	movw	r30, r24
    2428:	17 82       	std	Z+7, r1	; 0x07
    242a:	16 82       	std	Z+6, r1	; 0x06
    242c:	83 81       	ldd	r24, Z+3	; 0x03
    242e:	81 ff       	sbrs	r24, 1
    2430:	bf c1       	rjmp	.+894    	; 0x27b0 <vfprintf+0x3c4>
    2432:	ce 01       	movw	r24, r28
    2434:	01 96       	adiw	r24, 0x01	; 1
    2436:	3c 01       	movw	r6, r24
    2438:	f6 01       	movw	r30, r12
    243a:	93 81       	ldd	r25, Z+3	; 0x03
    243c:	f7 01       	movw	r30, r14
    243e:	93 fd       	sbrc	r25, 3
    2440:	85 91       	lpm	r24, Z+
    2442:	93 ff       	sbrs	r25, 3
    2444:	81 91       	ld	r24, Z+
    2446:	7f 01       	movw	r14, r30
    2448:	88 23       	and	r24, r24
    244a:	09 f4       	brne	.+2      	; 0x244e <vfprintf+0x62>
    244c:	ad c1       	rjmp	.+858    	; 0x27a8 <vfprintf+0x3bc>
    244e:	85 32       	cpi	r24, 0x25	; 37
    2450:	39 f4       	brne	.+14     	; 0x2460 <vfprintf+0x74>
    2452:	93 fd       	sbrc	r25, 3
    2454:	85 91       	lpm	r24, Z+
    2456:	93 ff       	sbrs	r25, 3
    2458:	81 91       	ld	r24, Z+
    245a:	7f 01       	movw	r14, r30
    245c:	85 32       	cpi	r24, 0x25	; 37
    245e:	21 f4       	brne	.+8      	; 0x2468 <vfprintf+0x7c>
    2460:	b6 01       	movw	r22, r12
    2462:	90 e0       	ldi	r25, 0x00	; 0
    2464:	d6 d1       	rcall	.+940    	; 0x2812 <fputc>
    2466:	e8 cf       	rjmp	.-48     	; 0x2438 <vfprintf+0x4c>
    2468:	91 2c       	mov	r9, r1
    246a:	21 2c       	mov	r2, r1
    246c:	31 2c       	mov	r3, r1
    246e:	ff e1       	ldi	r31, 0x1F	; 31
    2470:	f3 15       	cp	r31, r3
    2472:	d8 f0       	brcs	.+54     	; 0x24aa <vfprintf+0xbe>
    2474:	8b 32       	cpi	r24, 0x2B	; 43
    2476:	79 f0       	breq	.+30     	; 0x2496 <vfprintf+0xaa>
    2478:	38 f4       	brcc	.+14     	; 0x2488 <vfprintf+0x9c>
    247a:	80 32       	cpi	r24, 0x20	; 32
    247c:	79 f0       	breq	.+30     	; 0x249c <vfprintf+0xb0>
    247e:	83 32       	cpi	r24, 0x23	; 35
    2480:	a1 f4       	brne	.+40     	; 0x24aa <vfprintf+0xbe>
    2482:	23 2d       	mov	r18, r3
    2484:	20 61       	ori	r18, 0x10	; 16
    2486:	1d c0       	rjmp	.+58     	; 0x24c2 <vfprintf+0xd6>
    2488:	8d 32       	cpi	r24, 0x2D	; 45
    248a:	61 f0       	breq	.+24     	; 0x24a4 <vfprintf+0xb8>
    248c:	80 33       	cpi	r24, 0x30	; 48
    248e:	69 f4       	brne	.+26     	; 0x24aa <vfprintf+0xbe>
    2490:	23 2d       	mov	r18, r3
    2492:	21 60       	ori	r18, 0x01	; 1
    2494:	16 c0       	rjmp	.+44     	; 0x24c2 <vfprintf+0xd6>
    2496:	83 2d       	mov	r24, r3
    2498:	82 60       	ori	r24, 0x02	; 2
    249a:	38 2e       	mov	r3, r24
    249c:	e3 2d       	mov	r30, r3
    249e:	e4 60       	ori	r30, 0x04	; 4
    24a0:	3e 2e       	mov	r3, r30
    24a2:	2a c0       	rjmp	.+84     	; 0x24f8 <vfprintf+0x10c>
    24a4:	f3 2d       	mov	r31, r3
    24a6:	f8 60       	ori	r31, 0x08	; 8
    24a8:	1d c0       	rjmp	.+58     	; 0x24e4 <vfprintf+0xf8>
    24aa:	37 fc       	sbrc	r3, 7
    24ac:	2d c0       	rjmp	.+90     	; 0x2508 <vfprintf+0x11c>
    24ae:	20 ed       	ldi	r18, 0xD0	; 208
    24b0:	28 0f       	add	r18, r24
    24b2:	2a 30       	cpi	r18, 0x0A	; 10
    24b4:	40 f0       	brcs	.+16     	; 0x24c6 <vfprintf+0xda>
    24b6:	8e 32       	cpi	r24, 0x2E	; 46
    24b8:	b9 f4       	brne	.+46     	; 0x24e8 <vfprintf+0xfc>
    24ba:	36 fc       	sbrc	r3, 6
    24bc:	75 c1       	rjmp	.+746    	; 0x27a8 <vfprintf+0x3bc>
    24be:	23 2d       	mov	r18, r3
    24c0:	20 64       	ori	r18, 0x40	; 64
    24c2:	32 2e       	mov	r3, r18
    24c4:	19 c0       	rjmp	.+50     	; 0x24f8 <vfprintf+0x10c>
    24c6:	36 fe       	sbrs	r3, 6
    24c8:	06 c0       	rjmp	.+12     	; 0x24d6 <vfprintf+0xea>
    24ca:	8a e0       	ldi	r24, 0x0A	; 10
    24cc:	98 9e       	mul	r9, r24
    24ce:	20 0d       	add	r18, r0
    24d0:	11 24       	eor	r1, r1
    24d2:	92 2e       	mov	r9, r18
    24d4:	11 c0       	rjmp	.+34     	; 0x24f8 <vfprintf+0x10c>
    24d6:	ea e0       	ldi	r30, 0x0A	; 10
    24d8:	2e 9e       	mul	r2, r30
    24da:	20 0d       	add	r18, r0
    24dc:	11 24       	eor	r1, r1
    24de:	22 2e       	mov	r2, r18
    24e0:	f3 2d       	mov	r31, r3
    24e2:	f0 62       	ori	r31, 0x20	; 32
    24e4:	3f 2e       	mov	r3, r31
    24e6:	08 c0       	rjmp	.+16     	; 0x24f8 <vfprintf+0x10c>
    24e8:	8c 36       	cpi	r24, 0x6C	; 108
    24ea:	21 f4       	brne	.+8      	; 0x24f4 <vfprintf+0x108>
    24ec:	83 2d       	mov	r24, r3
    24ee:	80 68       	ori	r24, 0x80	; 128
    24f0:	38 2e       	mov	r3, r24
    24f2:	02 c0       	rjmp	.+4      	; 0x24f8 <vfprintf+0x10c>
    24f4:	88 36       	cpi	r24, 0x68	; 104
    24f6:	41 f4       	brne	.+16     	; 0x2508 <vfprintf+0x11c>
    24f8:	f7 01       	movw	r30, r14
    24fa:	93 fd       	sbrc	r25, 3
    24fc:	85 91       	lpm	r24, Z+
    24fe:	93 ff       	sbrs	r25, 3
    2500:	81 91       	ld	r24, Z+
    2502:	7f 01       	movw	r14, r30
    2504:	81 11       	cpse	r24, r1
    2506:	b3 cf       	rjmp	.-154    	; 0x246e <vfprintf+0x82>
    2508:	98 2f       	mov	r25, r24
    250a:	9f 7d       	andi	r25, 0xDF	; 223
    250c:	95 54       	subi	r25, 0x45	; 69
    250e:	93 30       	cpi	r25, 0x03	; 3
    2510:	28 f4       	brcc	.+10     	; 0x251c <vfprintf+0x130>
    2512:	0c 5f       	subi	r16, 0xFC	; 252
    2514:	1f 4f       	sbci	r17, 0xFF	; 255
    2516:	9f e3       	ldi	r25, 0x3F	; 63
    2518:	99 83       	std	Y+1, r25	; 0x01
    251a:	0d c0       	rjmp	.+26     	; 0x2536 <vfprintf+0x14a>
    251c:	83 36       	cpi	r24, 0x63	; 99
    251e:	31 f0       	breq	.+12     	; 0x252c <vfprintf+0x140>
    2520:	83 37       	cpi	r24, 0x73	; 115
    2522:	71 f0       	breq	.+28     	; 0x2540 <vfprintf+0x154>
    2524:	83 35       	cpi	r24, 0x53	; 83
    2526:	09 f0       	breq	.+2      	; 0x252a <vfprintf+0x13e>
    2528:	55 c0       	rjmp	.+170    	; 0x25d4 <vfprintf+0x1e8>
    252a:	20 c0       	rjmp	.+64     	; 0x256c <vfprintf+0x180>
    252c:	f8 01       	movw	r30, r16
    252e:	80 81       	ld	r24, Z
    2530:	89 83       	std	Y+1, r24	; 0x01
    2532:	0e 5f       	subi	r16, 0xFE	; 254
    2534:	1f 4f       	sbci	r17, 0xFF	; 255
    2536:	88 24       	eor	r8, r8
    2538:	83 94       	inc	r8
    253a:	91 2c       	mov	r9, r1
    253c:	53 01       	movw	r10, r6
    253e:	12 c0       	rjmp	.+36     	; 0x2564 <vfprintf+0x178>
    2540:	28 01       	movw	r4, r16
    2542:	f2 e0       	ldi	r31, 0x02	; 2
    2544:	4f 0e       	add	r4, r31
    2546:	51 1c       	adc	r5, r1
    2548:	f8 01       	movw	r30, r16
    254a:	a0 80       	ld	r10, Z
    254c:	b1 80       	ldd	r11, Z+1	; 0x01
    254e:	36 fe       	sbrs	r3, 6
    2550:	03 c0       	rjmp	.+6      	; 0x2558 <vfprintf+0x16c>
    2552:	69 2d       	mov	r22, r9
    2554:	70 e0       	ldi	r23, 0x00	; 0
    2556:	02 c0       	rjmp	.+4      	; 0x255c <vfprintf+0x170>
    2558:	6f ef       	ldi	r22, 0xFF	; 255
    255a:	7f ef       	ldi	r23, 0xFF	; 255
    255c:	c5 01       	movw	r24, r10
    255e:	4e d1       	rcall	.+668    	; 0x27fc <strnlen>
    2560:	4c 01       	movw	r8, r24
    2562:	82 01       	movw	r16, r4
    2564:	f3 2d       	mov	r31, r3
    2566:	ff 77       	andi	r31, 0x7F	; 127
    2568:	3f 2e       	mov	r3, r31
    256a:	15 c0       	rjmp	.+42     	; 0x2596 <vfprintf+0x1aa>
    256c:	28 01       	movw	r4, r16
    256e:	22 e0       	ldi	r18, 0x02	; 2
    2570:	42 0e       	add	r4, r18
    2572:	51 1c       	adc	r5, r1
    2574:	f8 01       	movw	r30, r16
    2576:	a0 80       	ld	r10, Z
    2578:	b1 80       	ldd	r11, Z+1	; 0x01
    257a:	36 fe       	sbrs	r3, 6
    257c:	03 c0       	rjmp	.+6      	; 0x2584 <vfprintf+0x198>
    257e:	69 2d       	mov	r22, r9
    2580:	70 e0       	ldi	r23, 0x00	; 0
    2582:	02 c0       	rjmp	.+4      	; 0x2588 <vfprintf+0x19c>
    2584:	6f ef       	ldi	r22, 0xFF	; 255
    2586:	7f ef       	ldi	r23, 0xFF	; 255
    2588:	c5 01       	movw	r24, r10
    258a:	2d d1       	rcall	.+602    	; 0x27e6 <strnlen_P>
    258c:	4c 01       	movw	r8, r24
    258e:	f3 2d       	mov	r31, r3
    2590:	f0 68       	ori	r31, 0x80	; 128
    2592:	3f 2e       	mov	r3, r31
    2594:	82 01       	movw	r16, r4
    2596:	33 fc       	sbrc	r3, 3
    2598:	19 c0       	rjmp	.+50     	; 0x25cc <vfprintf+0x1e0>
    259a:	82 2d       	mov	r24, r2
    259c:	90 e0       	ldi	r25, 0x00	; 0
    259e:	88 16       	cp	r8, r24
    25a0:	99 06       	cpc	r9, r25
    25a2:	a0 f4       	brcc	.+40     	; 0x25cc <vfprintf+0x1e0>
    25a4:	b6 01       	movw	r22, r12
    25a6:	80 e2       	ldi	r24, 0x20	; 32
    25a8:	90 e0       	ldi	r25, 0x00	; 0
    25aa:	33 d1       	rcall	.+614    	; 0x2812 <fputc>
    25ac:	2a 94       	dec	r2
    25ae:	f5 cf       	rjmp	.-22     	; 0x259a <vfprintf+0x1ae>
    25b0:	f5 01       	movw	r30, r10
    25b2:	37 fc       	sbrc	r3, 7
    25b4:	85 91       	lpm	r24, Z+
    25b6:	37 fe       	sbrs	r3, 7
    25b8:	81 91       	ld	r24, Z+
    25ba:	5f 01       	movw	r10, r30
    25bc:	b6 01       	movw	r22, r12
    25be:	90 e0       	ldi	r25, 0x00	; 0
    25c0:	28 d1       	rcall	.+592    	; 0x2812 <fputc>
    25c2:	21 10       	cpse	r2, r1
    25c4:	2a 94       	dec	r2
    25c6:	21 e0       	ldi	r18, 0x01	; 1
    25c8:	82 1a       	sub	r8, r18
    25ca:	91 08       	sbc	r9, r1
    25cc:	81 14       	cp	r8, r1
    25ce:	91 04       	cpc	r9, r1
    25d0:	79 f7       	brne	.-34     	; 0x25b0 <vfprintf+0x1c4>
    25d2:	e1 c0       	rjmp	.+450    	; 0x2796 <vfprintf+0x3aa>
    25d4:	84 36       	cpi	r24, 0x64	; 100
    25d6:	11 f0       	breq	.+4      	; 0x25dc <vfprintf+0x1f0>
    25d8:	89 36       	cpi	r24, 0x69	; 105
    25da:	39 f5       	brne	.+78     	; 0x262a <vfprintf+0x23e>
    25dc:	f8 01       	movw	r30, r16
    25de:	37 fe       	sbrs	r3, 7
    25e0:	07 c0       	rjmp	.+14     	; 0x25f0 <vfprintf+0x204>
    25e2:	60 81       	ld	r22, Z
    25e4:	71 81       	ldd	r23, Z+1	; 0x01
    25e6:	82 81       	ldd	r24, Z+2	; 0x02
    25e8:	93 81       	ldd	r25, Z+3	; 0x03
    25ea:	0c 5f       	subi	r16, 0xFC	; 252
    25ec:	1f 4f       	sbci	r17, 0xFF	; 255
    25ee:	08 c0       	rjmp	.+16     	; 0x2600 <vfprintf+0x214>
    25f0:	60 81       	ld	r22, Z
    25f2:	71 81       	ldd	r23, Z+1	; 0x01
    25f4:	07 2e       	mov	r0, r23
    25f6:	00 0c       	add	r0, r0
    25f8:	88 0b       	sbc	r24, r24
    25fa:	99 0b       	sbc	r25, r25
    25fc:	0e 5f       	subi	r16, 0xFE	; 254
    25fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2600:	f3 2d       	mov	r31, r3
    2602:	ff 76       	andi	r31, 0x6F	; 111
    2604:	3f 2e       	mov	r3, r31
    2606:	97 ff       	sbrs	r25, 7
    2608:	09 c0       	rjmp	.+18     	; 0x261c <vfprintf+0x230>
    260a:	90 95       	com	r25
    260c:	80 95       	com	r24
    260e:	70 95       	com	r23
    2610:	61 95       	neg	r22
    2612:	7f 4f       	sbci	r23, 0xFF	; 255
    2614:	8f 4f       	sbci	r24, 0xFF	; 255
    2616:	9f 4f       	sbci	r25, 0xFF	; 255
    2618:	f0 68       	ori	r31, 0x80	; 128
    261a:	3f 2e       	mov	r3, r31
    261c:	2a e0       	ldi	r18, 0x0A	; 10
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	a3 01       	movw	r20, r6
    2622:	33 d1       	rcall	.+614    	; 0x288a <__ultoa_invert>
    2624:	88 2e       	mov	r8, r24
    2626:	86 18       	sub	r8, r6
    2628:	44 c0       	rjmp	.+136    	; 0x26b2 <vfprintf+0x2c6>
    262a:	85 37       	cpi	r24, 0x75	; 117
    262c:	31 f4       	brne	.+12     	; 0x263a <vfprintf+0x24e>
    262e:	23 2d       	mov	r18, r3
    2630:	2f 7e       	andi	r18, 0xEF	; 239
    2632:	b2 2e       	mov	r11, r18
    2634:	2a e0       	ldi	r18, 0x0A	; 10
    2636:	30 e0       	ldi	r19, 0x00	; 0
    2638:	25 c0       	rjmp	.+74     	; 0x2684 <vfprintf+0x298>
    263a:	93 2d       	mov	r25, r3
    263c:	99 7f       	andi	r25, 0xF9	; 249
    263e:	b9 2e       	mov	r11, r25
    2640:	8f 36       	cpi	r24, 0x6F	; 111
    2642:	c1 f0       	breq	.+48     	; 0x2674 <vfprintf+0x288>
    2644:	18 f4       	brcc	.+6      	; 0x264c <vfprintf+0x260>
    2646:	88 35       	cpi	r24, 0x58	; 88
    2648:	79 f0       	breq	.+30     	; 0x2668 <vfprintf+0x27c>
    264a:	ae c0       	rjmp	.+348    	; 0x27a8 <vfprintf+0x3bc>
    264c:	80 37       	cpi	r24, 0x70	; 112
    264e:	19 f0       	breq	.+6      	; 0x2656 <vfprintf+0x26a>
    2650:	88 37       	cpi	r24, 0x78	; 120
    2652:	21 f0       	breq	.+8      	; 0x265c <vfprintf+0x270>
    2654:	a9 c0       	rjmp	.+338    	; 0x27a8 <vfprintf+0x3bc>
    2656:	e9 2f       	mov	r30, r25
    2658:	e0 61       	ori	r30, 0x10	; 16
    265a:	be 2e       	mov	r11, r30
    265c:	b4 fe       	sbrs	r11, 4
    265e:	0d c0       	rjmp	.+26     	; 0x267a <vfprintf+0x28e>
    2660:	fb 2d       	mov	r31, r11
    2662:	f4 60       	ori	r31, 0x04	; 4
    2664:	bf 2e       	mov	r11, r31
    2666:	09 c0       	rjmp	.+18     	; 0x267a <vfprintf+0x28e>
    2668:	34 fe       	sbrs	r3, 4
    266a:	0a c0       	rjmp	.+20     	; 0x2680 <vfprintf+0x294>
    266c:	29 2f       	mov	r18, r25
    266e:	26 60       	ori	r18, 0x06	; 6
    2670:	b2 2e       	mov	r11, r18
    2672:	06 c0       	rjmp	.+12     	; 0x2680 <vfprintf+0x294>
    2674:	28 e0       	ldi	r18, 0x08	; 8
    2676:	30 e0       	ldi	r19, 0x00	; 0
    2678:	05 c0       	rjmp	.+10     	; 0x2684 <vfprintf+0x298>
    267a:	20 e1       	ldi	r18, 0x10	; 16
    267c:	30 e0       	ldi	r19, 0x00	; 0
    267e:	02 c0       	rjmp	.+4      	; 0x2684 <vfprintf+0x298>
    2680:	20 e1       	ldi	r18, 0x10	; 16
    2682:	32 e0       	ldi	r19, 0x02	; 2
    2684:	f8 01       	movw	r30, r16
    2686:	b7 fe       	sbrs	r11, 7
    2688:	07 c0       	rjmp	.+14     	; 0x2698 <vfprintf+0x2ac>
    268a:	60 81       	ld	r22, Z
    268c:	71 81       	ldd	r23, Z+1	; 0x01
    268e:	82 81       	ldd	r24, Z+2	; 0x02
    2690:	93 81       	ldd	r25, Z+3	; 0x03
    2692:	0c 5f       	subi	r16, 0xFC	; 252
    2694:	1f 4f       	sbci	r17, 0xFF	; 255
    2696:	06 c0       	rjmp	.+12     	; 0x26a4 <vfprintf+0x2b8>
    2698:	60 81       	ld	r22, Z
    269a:	71 81       	ldd	r23, Z+1	; 0x01
    269c:	80 e0       	ldi	r24, 0x00	; 0
    269e:	90 e0       	ldi	r25, 0x00	; 0
    26a0:	0e 5f       	subi	r16, 0xFE	; 254
    26a2:	1f 4f       	sbci	r17, 0xFF	; 255
    26a4:	a3 01       	movw	r20, r6
    26a6:	f1 d0       	rcall	.+482    	; 0x288a <__ultoa_invert>
    26a8:	88 2e       	mov	r8, r24
    26aa:	86 18       	sub	r8, r6
    26ac:	fb 2d       	mov	r31, r11
    26ae:	ff 77       	andi	r31, 0x7F	; 127
    26b0:	3f 2e       	mov	r3, r31
    26b2:	36 fe       	sbrs	r3, 6
    26b4:	0d c0       	rjmp	.+26     	; 0x26d0 <vfprintf+0x2e4>
    26b6:	23 2d       	mov	r18, r3
    26b8:	2e 7f       	andi	r18, 0xFE	; 254
    26ba:	a2 2e       	mov	r10, r18
    26bc:	89 14       	cp	r8, r9
    26be:	58 f4       	brcc	.+22     	; 0x26d6 <vfprintf+0x2ea>
    26c0:	34 fe       	sbrs	r3, 4
    26c2:	0b c0       	rjmp	.+22     	; 0x26da <vfprintf+0x2ee>
    26c4:	32 fc       	sbrc	r3, 2
    26c6:	09 c0       	rjmp	.+18     	; 0x26da <vfprintf+0x2ee>
    26c8:	83 2d       	mov	r24, r3
    26ca:	8e 7e       	andi	r24, 0xEE	; 238
    26cc:	a8 2e       	mov	r10, r24
    26ce:	05 c0       	rjmp	.+10     	; 0x26da <vfprintf+0x2ee>
    26d0:	b8 2c       	mov	r11, r8
    26d2:	a3 2c       	mov	r10, r3
    26d4:	03 c0       	rjmp	.+6      	; 0x26dc <vfprintf+0x2f0>
    26d6:	b8 2c       	mov	r11, r8
    26d8:	01 c0       	rjmp	.+2      	; 0x26dc <vfprintf+0x2f0>
    26da:	b9 2c       	mov	r11, r9
    26dc:	a4 fe       	sbrs	r10, 4
    26de:	0f c0       	rjmp	.+30     	; 0x26fe <vfprintf+0x312>
    26e0:	fe 01       	movw	r30, r28
    26e2:	e8 0d       	add	r30, r8
    26e4:	f1 1d       	adc	r31, r1
    26e6:	80 81       	ld	r24, Z
    26e8:	80 33       	cpi	r24, 0x30	; 48
    26ea:	21 f4       	brne	.+8      	; 0x26f4 <vfprintf+0x308>
    26ec:	9a 2d       	mov	r25, r10
    26ee:	99 7e       	andi	r25, 0xE9	; 233
    26f0:	a9 2e       	mov	r10, r25
    26f2:	09 c0       	rjmp	.+18     	; 0x2706 <vfprintf+0x31a>
    26f4:	a2 fe       	sbrs	r10, 2
    26f6:	06 c0       	rjmp	.+12     	; 0x2704 <vfprintf+0x318>
    26f8:	b3 94       	inc	r11
    26fa:	b3 94       	inc	r11
    26fc:	04 c0       	rjmp	.+8      	; 0x2706 <vfprintf+0x31a>
    26fe:	8a 2d       	mov	r24, r10
    2700:	86 78       	andi	r24, 0x86	; 134
    2702:	09 f0       	breq	.+2      	; 0x2706 <vfprintf+0x31a>
    2704:	b3 94       	inc	r11
    2706:	a3 fc       	sbrc	r10, 3
    2708:	10 c0       	rjmp	.+32     	; 0x272a <vfprintf+0x33e>
    270a:	a0 fe       	sbrs	r10, 0
    270c:	06 c0       	rjmp	.+12     	; 0x271a <vfprintf+0x32e>
    270e:	b2 14       	cp	r11, r2
    2710:	80 f4       	brcc	.+32     	; 0x2732 <vfprintf+0x346>
    2712:	28 0c       	add	r2, r8
    2714:	92 2c       	mov	r9, r2
    2716:	9b 18       	sub	r9, r11
    2718:	0d c0       	rjmp	.+26     	; 0x2734 <vfprintf+0x348>
    271a:	b2 14       	cp	r11, r2
    271c:	58 f4       	brcc	.+22     	; 0x2734 <vfprintf+0x348>
    271e:	b6 01       	movw	r22, r12
    2720:	80 e2       	ldi	r24, 0x20	; 32
    2722:	90 e0       	ldi	r25, 0x00	; 0
    2724:	76 d0       	rcall	.+236    	; 0x2812 <fputc>
    2726:	b3 94       	inc	r11
    2728:	f8 cf       	rjmp	.-16     	; 0x271a <vfprintf+0x32e>
    272a:	b2 14       	cp	r11, r2
    272c:	18 f4       	brcc	.+6      	; 0x2734 <vfprintf+0x348>
    272e:	2b 18       	sub	r2, r11
    2730:	02 c0       	rjmp	.+4      	; 0x2736 <vfprintf+0x34a>
    2732:	98 2c       	mov	r9, r8
    2734:	21 2c       	mov	r2, r1
    2736:	a4 fe       	sbrs	r10, 4
    2738:	0f c0       	rjmp	.+30     	; 0x2758 <vfprintf+0x36c>
    273a:	b6 01       	movw	r22, r12
    273c:	80 e3       	ldi	r24, 0x30	; 48
    273e:	90 e0       	ldi	r25, 0x00	; 0
    2740:	68 d0       	rcall	.+208    	; 0x2812 <fputc>
    2742:	a2 fe       	sbrs	r10, 2
    2744:	16 c0       	rjmp	.+44     	; 0x2772 <vfprintf+0x386>
    2746:	a1 fc       	sbrc	r10, 1
    2748:	03 c0       	rjmp	.+6      	; 0x2750 <vfprintf+0x364>
    274a:	88 e7       	ldi	r24, 0x78	; 120
    274c:	90 e0       	ldi	r25, 0x00	; 0
    274e:	02 c0       	rjmp	.+4      	; 0x2754 <vfprintf+0x368>
    2750:	88 e5       	ldi	r24, 0x58	; 88
    2752:	90 e0       	ldi	r25, 0x00	; 0
    2754:	b6 01       	movw	r22, r12
    2756:	0c c0       	rjmp	.+24     	; 0x2770 <vfprintf+0x384>
    2758:	8a 2d       	mov	r24, r10
    275a:	86 78       	andi	r24, 0x86	; 134
    275c:	51 f0       	breq	.+20     	; 0x2772 <vfprintf+0x386>
    275e:	a1 fe       	sbrs	r10, 1
    2760:	02 c0       	rjmp	.+4      	; 0x2766 <vfprintf+0x37a>
    2762:	8b e2       	ldi	r24, 0x2B	; 43
    2764:	01 c0       	rjmp	.+2      	; 0x2768 <vfprintf+0x37c>
    2766:	80 e2       	ldi	r24, 0x20	; 32
    2768:	a7 fc       	sbrc	r10, 7
    276a:	8d e2       	ldi	r24, 0x2D	; 45
    276c:	b6 01       	movw	r22, r12
    276e:	90 e0       	ldi	r25, 0x00	; 0
    2770:	50 d0       	rcall	.+160    	; 0x2812 <fputc>
    2772:	89 14       	cp	r8, r9
    2774:	30 f4       	brcc	.+12     	; 0x2782 <vfprintf+0x396>
    2776:	b6 01       	movw	r22, r12
    2778:	80 e3       	ldi	r24, 0x30	; 48
    277a:	90 e0       	ldi	r25, 0x00	; 0
    277c:	4a d0       	rcall	.+148    	; 0x2812 <fputc>
    277e:	9a 94       	dec	r9
    2780:	f8 cf       	rjmp	.-16     	; 0x2772 <vfprintf+0x386>
    2782:	8a 94       	dec	r8
    2784:	f3 01       	movw	r30, r6
    2786:	e8 0d       	add	r30, r8
    2788:	f1 1d       	adc	r31, r1
    278a:	80 81       	ld	r24, Z
    278c:	b6 01       	movw	r22, r12
    278e:	90 e0       	ldi	r25, 0x00	; 0
    2790:	40 d0       	rcall	.+128    	; 0x2812 <fputc>
    2792:	81 10       	cpse	r8, r1
    2794:	f6 cf       	rjmp	.-20     	; 0x2782 <vfprintf+0x396>
    2796:	22 20       	and	r2, r2
    2798:	09 f4       	brne	.+2      	; 0x279c <vfprintf+0x3b0>
    279a:	4e ce       	rjmp	.-868    	; 0x2438 <vfprintf+0x4c>
    279c:	b6 01       	movw	r22, r12
    279e:	80 e2       	ldi	r24, 0x20	; 32
    27a0:	90 e0       	ldi	r25, 0x00	; 0
    27a2:	37 d0       	rcall	.+110    	; 0x2812 <fputc>
    27a4:	2a 94       	dec	r2
    27a6:	f7 cf       	rjmp	.-18     	; 0x2796 <vfprintf+0x3aa>
    27a8:	f6 01       	movw	r30, r12
    27aa:	86 81       	ldd	r24, Z+6	; 0x06
    27ac:	97 81       	ldd	r25, Z+7	; 0x07
    27ae:	02 c0       	rjmp	.+4      	; 0x27b4 <vfprintf+0x3c8>
    27b0:	8f ef       	ldi	r24, 0xFF	; 255
    27b2:	9f ef       	ldi	r25, 0xFF	; 255
    27b4:	2b 96       	adiw	r28, 0x0b	; 11
    27b6:	0f b6       	in	r0, 0x3f	; 63
    27b8:	f8 94       	cli
    27ba:	de bf       	out	0x3e, r29	; 62
    27bc:	0f be       	out	0x3f, r0	; 63
    27be:	cd bf       	out	0x3d, r28	; 61
    27c0:	df 91       	pop	r29
    27c2:	cf 91       	pop	r28
    27c4:	1f 91       	pop	r17
    27c6:	0f 91       	pop	r16
    27c8:	ff 90       	pop	r15
    27ca:	ef 90       	pop	r14
    27cc:	df 90       	pop	r13
    27ce:	cf 90       	pop	r12
    27d0:	bf 90       	pop	r11
    27d2:	af 90       	pop	r10
    27d4:	9f 90       	pop	r9
    27d6:	8f 90       	pop	r8
    27d8:	7f 90       	pop	r7
    27da:	6f 90       	pop	r6
    27dc:	5f 90       	pop	r5
    27de:	4f 90       	pop	r4
    27e0:	3f 90       	pop	r3
    27e2:	2f 90       	pop	r2
    27e4:	08 95       	ret

000027e6 <strnlen_P>:
    27e6:	fc 01       	movw	r30, r24
    27e8:	05 90       	lpm	r0, Z+
    27ea:	61 50       	subi	r22, 0x01	; 1
    27ec:	70 40       	sbci	r23, 0x00	; 0
    27ee:	01 10       	cpse	r0, r1
    27f0:	d8 f7       	brcc	.-10     	; 0x27e8 <strnlen_P+0x2>
    27f2:	80 95       	com	r24
    27f4:	90 95       	com	r25
    27f6:	8e 0f       	add	r24, r30
    27f8:	9f 1f       	adc	r25, r31
    27fa:	08 95       	ret

000027fc <strnlen>:
    27fc:	fc 01       	movw	r30, r24
    27fe:	61 50       	subi	r22, 0x01	; 1
    2800:	70 40       	sbci	r23, 0x00	; 0
    2802:	01 90       	ld	r0, Z+
    2804:	01 10       	cpse	r0, r1
    2806:	d8 f7       	brcc	.-10     	; 0x27fe <strnlen+0x2>
    2808:	80 95       	com	r24
    280a:	90 95       	com	r25
    280c:	8e 0f       	add	r24, r30
    280e:	9f 1f       	adc	r25, r31
    2810:	08 95       	ret

00002812 <fputc>:
    2812:	0f 93       	push	r16
    2814:	1f 93       	push	r17
    2816:	cf 93       	push	r28
    2818:	df 93       	push	r29
    281a:	fb 01       	movw	r30, r22
    281c:	23 81       	ldd	r18, Z+3	; 0x03
    281e:	21 fd       	sbrc	r18, 1
    2820:	03 c0       	rjmp	.+6      	; 0x2828 <fputc+0x16>
    2822:	8f ef       	ldi	r24, 0xFF	; 255
    2824:	9f ef       	ldi	r25, 0xFF	; 255
    2826:	2c c0       	rjmp	.+88     	; 0x2880 <fputc+0x6e>
    2828:	22 ff       	sbrs	r18, 2
    282a:	16 c0       	rjmp	.+44     	; 0x2858 <fputc+0x46>
    282c:	46 81       	ldd	r20, Z+6	; 0x06
    282e:	57 81       	ldd	r21, Z+7	; 0x07
    2830:	24 81       	ldd	r18, Z+4	; 0x04
    2832:	35 81       	ldd	r19, Z+5	; 0x05
    2834:	42 17       	cp	r20, r18
    2836:	53 07       	cpc	r21, r19
    2838:	44 f4       	brge	.+16     	; 0x284a <fputc+0x38>
    283a:	a0 81       	ld	r26, Z
    283c:	b1 81       	ldd	r27, Z+1	; 0x01
    283e:	9d 01       	movw	r18, r26
    2840:	2f 5f       	subi	r18, 0xFF	; 255
    2842:	3f 4f       	sbci	r19, 0xFF	; 255
    2844:	31 83       	std	Z+1, r19	; 0x01
    2846:	20 83       	st	Z, r18
    2848:	8c 93       	st	X, r24
    284a:	26 81       	ldd	r18, Z+6	; 0x06
    284c:	37 81       	ldd	r19, Z+7	; 0x07
    284e:	2f 5f       	subi	r18, 0xFF	; 255
    2850:	3f 4f       	sbci	r19, 0xFF	; 255
    2852:	37 83       	std	Z+7, r19	; 0x07
    2854:	26 83       	std	Z+6, r18	; 0x06
    2856:	14 c0       	rjmp	.+40     	; 0x2880 <fputc+0x6e>
    2858:	8b 01       	movw	r16, r22
    285a:	ec 01       	movw	r28, r24
    285c:	fb 01       	movw	r30, r22
    285e:	00 84       	ldd	r0, Z+8	; 0x08
    2860:	f1 85       	ldd	r31, Z+9	; 0x09
    2862:	e0 2d       	mov	r30, r0
    2864:	09 95       	icall
    2866:	89 2b       	or	r24, r25
    2868:	e1 f6       	brne	.-72     	; 0x2822 <fputc+0x10>
    286a:	d8 01       	movw	r26, r16
    286c:	16 96       	adiw	r26, 0x06	; 6
    286e:	8d 91       	ld	r24, X+
    2870:	9c 91       	ld	r25, X
    2872:	17 97       	sbiw	r26, 0x07	; 7
    2874:	01 96       	adiw	r24, 0x01	; 1
    2876:	17 96       	adiw	r26, 0x07	; 7
    2878:	9c 93       	st	X, r25
    287a:	8e 93       	st	-X, r24
    287c:	16 97       	sbiw	r26, 0x06	; 6
    287e:	ce 01       	movw	r24, r28
    2880:	df 91       	pop	r29
    2882:	cf 91       	pop	r28
    2884:	1f 91       	pop	r17
    2886:	0f 91       	pop	r16
    2888:	08 95       	ret

0000288a <__ultoa_invert>:
    288a:	fa 01       	movw	r30, r20
    288c:	aa 27       	eor	r26, r26
    288e:	28 30       	cpi	r18, 0x08	; 8
    2890:	51 f1       	breq	.+84     	; 0x28e6 <__ultoa_invert+0x5c>
    2892:	20 31       	cpi	r18, 0x10	; 16
    2894:	81 f1       	breq	.+96     	; 0x28f6 <__ultoa_invert+0x6c>
    2896:	e8 94       	clt
    2898:	6f 93       	push	r22
    289a:	6e 7f       	andi	r22, 0xFE	; 254
    289c:	6e 5f       	subi	r22, 0xFE	; 254
    289e:	7f 4f       	sbci	r23, 0xFF	; 255
    28a0:	8f 4f       	sbci	r24, 0xFF	; 255
    28a2:	9f 4f       	sbci	r25, 0xFF	; 255
    28a4:	af 4f       	sbci	r26, 0xFF	; 255
    28a6:	b1 e0       	ldi	r27, 0x01	; 1
    28a8:	3e d0       	rcall	.+124    	; 0x2926 <__ultoa_invert+0x9c>
    28aa:	b4 e0       	ldi	r27, 0x04	; 4
    28ac:	3c d0       	rcall	.+120    	; 0x2926 <__ultoa_invert+0x9c>
    28ae:	67 0f       	add	r22, r23
    28b0:	78 1f       	adc	r23, r24
    28b2:	89 1f       	adc	r24, r25
    28b4:	9a 1f       	adc	r25, r26
    28b6:	a1 1d       	adc	r26, r1
    28b8:	68 0f       	add	r22, r24
    28ba:	79 1f       	adc	r23, r25
    28bc:	8a 1f       	adc	r24, r26
    28be:	91 1d       	adc	r25, r1
    28c0:	a1 1d       	adc	r26, r1
    28c2:	6a 0f       	add	r22, r26
    28c4:	71 1d       	adc	r23, r1
    28c6:	81 1d       	adc	r24, r1
    28c8:	91 1d       	adc	r25, r1
    28ca:	a1 1d       	adc	r26, r1
    28cc:	20 d0       	rcall	.+64     	; 0x290e <__ultoa_invert+0x84>
    28ce:	09 f4       	brne	.+2      	; 0x28d2 <__ultoa_invert+0x48>
    28d0:	68 94       	set
    28d2:	3f 91       	pop	r19
    28d4:	2a e0       	ldi	r18, 0x0A	; 10
    28d6:	26 9f       	mul	r18, r22
    28d8:	11 24       	eor	r1, r1
    28da:	30 19       	sub	r19, r0
    28dc:	30 5d       	subi	r19, 0xD0	; 208
    28de:	31 93       	st	Z+, r19
    28e0:	de f6       	brtc	.-74     	; 0x2898 <__ultoa_invert+0xe>
    28e2:	cf 01       	movw	r24, r30
    28e4:	08 95       	ret
    28e6:	46 2f       	mov	r20, r22
    28e8:	47 70       	andi	r20, 0x07	; 7
    28ea:	40 5d       	subi	r20, 0xD0	; 208
    28ec:	41 93       	st	Z+, r20
    28ee:	b3 e0       	ldi	r27, 0x03	; 3
    28f0:	0f d0       	rcall	.+30     	; 0x2910 <__ultoa_invert+0x86>
    28f2:	c9 f7       	brne	.-14     	; 0x28e6 <__ultoa_invert+0x5c>
    28f4:	f6 cf       	rjmp	.-20     	; 0x28e2 <__ultoa_invert+0x58>
    28f6:	46 2f       	mov	r20, r22
    28f8:	4f 70       	andi	r20, 0x0F	; 15
    28fa:	40 5d       	subi	r20, 0xD0	; 208
    28fc:	4a 33       	cpi	r20, 0x3A	; 58
    28fe:	18 f0       	brcs	.+6      	; 0x2906 <__ultoa_invert+0x7c>
    2900:	49 5d       	subi	r20, 0xD9	; 217
    2902:	31 fd       	sbrc	r19, 1
    2904:	40 52       	subi	r20, 0x20	; 32
    2906:	41 93       	st	Z+, r20
    2908:	02 d0       	rcall	.+4      	; 0x290e <__ultoa_invert+0x84>
    290a:	a9 f7       	brne	.-22     	; 0x28f6 <__ultoa_invert+0x6c>
    290c:	ea cf       	rjmp	.-44     	; 0x28e2 <__ultoa_invert+0x58>
    290e:	b4 e0       	ldi	r27, 0x04	; 4
    2910:	a6 95       	lsr	r26
    2912:	97 95       	ror	r25
    2914:	87 95       	ror	r24
    2916:	77 95       	ror	r23
    2918:	67 95       	ror	r22
    291a:	ba 95       	dec	r27
    291c:	c9 f7       	brne	.-14     	; 0x2910 <__ultoa_invert+0x86>
    291e:	00 97       	sbiw	r24, 0x00	; 0
    2920:	61 05       	cpc	r22, r1
    2922:	71 05       	cpc	r23, r1
    2924:	08 95       	ret
    2926:	9b 01       	movw	r18, r22
    2928:	ac 01       	movw	r20, r24
    292a:	0a 2e       	mov	r0, r26
    292c:	06 94       	lsr	r0
    292e:	57 95       	ror	r21
    2930:	47 95       	ror	r20
    2932:	37 95       	ror	r19
    2934:	27 95       	ror	r18
    2936:	ba 95       	dec	r27
    2938:	c9 f7       	brne	.-14     	; 0x292c <__ultoa_invert+0xa2>
    293a:	62 0f       	add	r22, r18
    293c:	73 1f       	adc	r23, r19
    293e:	84 1f       	adc	r24, r20
    2940:	95 1f       	adc	r25, r21
    2942:	a0 1d       	adc	r26, r0
    2944:	08 95       	ret

00002946 <_exit>:
    2946:	f8 94       	cli

00002948 <__stop_program>:
    2948:	ff cf       	rjmp	.-2      	; 0x2948 <__stop_program>
